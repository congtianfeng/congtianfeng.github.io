<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>实现图片上传预览和裁切功能</title>
    <url>/2024/03/14/%E5%AE%9E%E7%8E%B0%E5%9B%BE%E7%89%87%E4%B8%8A%E4%BC%A0%E9%A2%84%E8%A7%88%E5%92%8C%E8%A3%81%E5%88%87%E5%8A%9F%E8%83%BD/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="一、纯客户端实现上传图片预览"><a href="#一、纯客户端实现上传图片预览" class="headerlink" title="一、纯客户端实现上传图片预览"></a>一、纯客户端实现上传图片预览</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>客户端图片上传预览示例<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="selector-class">.img-wrap</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">      <span class="selector-tag">img</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">max-width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">      &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>客户端图片上传预览示例<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;img-wrap&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;img&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;button&gt;头像&lt;/button&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">hidden</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">id</span>=<span class="string">&quot;file&quot;</span> <span class="attr">onchange</span>=<span class="string">&quot;onFileChange()&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> img = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;#img&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> file = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;#file&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// const btn = document.querySelector(&quot;button&quot;);</span></span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// const ipt = document.querySelector(&quot;input&quot;);</span></span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">function</span> <span class="title function_">onFileChange</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 得到 file-input 的文件对象</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> fileObj = file.<span class="property">files</span>[<span class="number">0</span>];</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> data = <span class="variable language_">window</span>.<span class="property">URL</span>.<span class="title function_">createObjectURL</span>(fileObj);</span></span><br><span class="line"><span class="language-javascript">        img.<span class="property">src</span> = data;</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">      <span class="comment">// btn.addEventListener(&quot;click&quot;, () =&gt; ipt.click());</span></span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>而在实际的项目中，file 类型的 input 框基本上都是隐藏的，通过另外一个显示的元素的某些事件（比如点击事件）以代码的方式手动触发 input 的点击事件。也就是注释部分。</p>
<h2 id="二、图片裁切"><a href="#二、图片裁切" class="headerlink" title="二、图片裁切"></a>二、图片裁切</h2><h3 id="1、安装-cropperjs-插件"><a href="#1、安装-cropperjs-插件" class="headerlink" title="1、安装 cropperjs 插件"></a>1、安装 cropperjs 插件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install cropperjs</span><br></pre></td></tr></table></figure>

<h3 id="2、创建图片裁剪组件"><a href="#2、创建图片裁剪组件" class="headerlink" title="2、创建图片裁剪组件"></a>2、创建图片裁剪组件</h3><p>update-photo.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;update-photo&quot;&gt;</span><br><span class="line">    &lt;img class=&quot;img&quot; :src=&quot;img&quot; ref=&quot;img&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&quot;toolbar&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;cancel&quot; @click=&quot;$emit(&#x27;close&#x27;)&quot;&gt;取消&lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;confirm&quot; @click=&quot;onConfirm&quot;&gt;完成&lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &quot;cropperjs/dist/cropper.css&quot;;</span><br><span class="line">import Cropper from &quot;cropperjs&quot;;</span><br><span class="line">import &#123; updateUserPhoto &#125; from &quot;@/api/user&quot;;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;UpdatePhoto&quot;,</span><br><span class="line">  components: &#123;&#125;,</span><br><span class="line">  props: &#123;</span><br><span class="line">    img: &#123;</span><br><span class="line">      type: [String, Object],</span><br><span class="line">      required: true,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      cropper: null,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  computed: &#123;&#125;,</span><br><span class="line">  watch: &#123;&#125;,</span><br><span class="line">  created() &#123;&#125;,</span><br><span class="line">  mounted() &#123;</span><br><span class="line">    const image = this.$refs.img;</span><br><span class="line">    this.cropper = new Cropper(image, &#123;</span><br><span class="line">      viewMode: 1,</span><br><span class="line">      dragMode: &quot;move&quot;,</span><br><span class="line">      aspectRatio: 1,</span><br><span class="line">      // autoCropArea: 1,</span><br><span class="line">      cropBoxMovable: false,</span><br><span class="line">      cropBoxResizable: false,</span><br><span class="line">      background: false,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    onConfirm() &#123;</span><br><span class="line">      // 基于服务端的裁切使用 getData 方法获取裁切参数</span><br><span class="line">      // console.log(this.cropper.getData())</span><br><span class="line"></span><br><span class="line">      // 纯客户端的裁切使用 getCroppedCanvas 获取裁切的文件对象</span><br><span class="line">      this.cropper.getCroppedCanvas().toBlob((blob) =&gt; &#123;</span><br><span class="line">        this.updateUserPhoto(blob);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    async updateUserPhoto(blob) &#123;</span><br><span class="line">      this.$toast.loading(&#123;</span><br><span class="line">        message: &quot;保存中...&quot;,</span><br><span class="line">        forbidClick: true, // 禁止背景点击</span><br><span class="line">        duration: 0, // 持续展示</span><br><span class="line">      &#125;);</span><br><span class="line">      try &#123;</span><br><span class="line">        // 错误的用法</span><br><span class="line">        // 如果接口要求 Content-Type 是 application/json</span><br><span class="line">        // 则传递普通 JavaScript 对象</span><br><span class="line">        // updateUserPhoto(&#123;</span><br><span class="line">        //   photo: blob</span><br><span class="line">        // &#125;)</span><br><span class="line"></span><br><span class="line">        // 如果接口要求 Content-Type 是 multipart/form-data</span><br><span class="line">        // 则你必须传递 FormData 对象</span><br><span class="line">        const formData = new FormData();</span><br><span class="line">        formData.append(&quot;photo&quot;, blob);</span><br><span class="line"></span><br><span class="line">        const &#123; data &#125; = await updateUserPhoto(formData);</span><br><span class="line"></span><br><span class="line">        // 关闭弹出层</span><br><span class="line">        this.$emit(&quot;close&quot;);</span><br><span class="line"></span><br><span class="line">        // 更新视图</span><br><span class="line">        this.$emit(&quot;update-photo&quot;, data.data.photo);</span><br><span class="line"></span><br><span class="line">        // 提示成功</span><br><span class="line">        this.$toast.success(&quot;更新成功&quot;);</span><br><span class="line">      &#125; catch (err) &#123;</span><br><span class="line">        this.$toast.fail(&quot;更新失败&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&quot;less&quot;&gt;</span><br><span class="line">.update-photo &#123;</span><br><span class="line">  background-color: #000;</span><br><span class="line">  height: 100%;</span><br><span class="line">  .toolbar &#123;</span><br><span class="line">    position: fixed;</span><br><span class="line">    left: 0;</span><br><span class="line">    right: 0;</span><br><span class="line">    bottom: 0;</span><br><span class="line">    display: flex;</span><br><span class="line">    justify-content: space-between;</span><br><span class="line">    .cancel,</span><br><span class="line">    .confirm &#123;</span><br><span class="line">      width: 90px;</span><br><span class="line">      height: 90px;</span><br><span class="line">      font-size: 30px;</span><br><span class="line">      display: flex;</span><br><span class="line">      justify-content: center;</span><br><span class="line">      align-items: center;</span><br><span class="line">      color: #fff;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">.img &#123;</span><br><span class="line">  display: block;</span><br><span class="line">  max-width: 100%;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p>可以看到，图片裁剪组件从父组件接收传递过来的图片地址。在 mounted 根据图片 dom 创建一个 cropper 对象，里面的配置参数我们可以根据需要填写。当点击完成时，使用 getCroppedCanvas 获取裁切的文件对象，并将该对象传递给后端。</p>
<h3 id="3、父组件"><a href="#3、父组件" class="headerlink" title="3、父组件"></a>3、父组件</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;van-cell</span><br><span class="line">    class=&quot;photo-cell&quot;</span><br><span class="line">    title=&quot;头像&quot;</span><br><span class="line">    is-link</span><br><span class="line">    center</span><br><span class="line">    @click=&quot;$refs.file.click()&quot;</span><br><span class="line">  &gt;</span><br><span class="line">    &lt;van-image class=&quot;avatar&quot; fit=&quot;cover&quot; round :src=&quot;user.photo&quot; /&gt;</span><br><span class="line">  &lt;/van-cell&gt;</span><br><span class="line">  &lt;van-popup</span><br><span class="line">    v-model=&quot;isUpdatePhotoShow&quot;</span><br><span class="line">    position=&quot;bottom&quot;</span><br><span class="line">    style=&quot;height: 100%;&quot;</span><br><span class="line">  &gt;</span><br><span class="line">    &lt;update-photo</span><br><span class="line">      v-if=&quot;isUpdatePhotoShow&quot;</span><br><span class="line">      :img=&quot;img&quot;</span><br><span class="line">      @close=&quot;isUpdatePhotoShow = false&quot;</span><br><span class="line">      @update-photo=&quot;user.photo = $event&quot;</span><br><span class="line">    /&gt;</span><br><span class="line">  &lt;/van-popup&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#123; getUserProfile &#125; from &quot;@/api/user&quot;;</span><br><span class="line">import UpdatePhoto from &quot;./components/update-photo&quot;;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;UserProfile&quot;,</span><br><span class="line">  components: &#123;</span><br><span class="line">    UpdatePhoto,</span><br><span class="line">  &#125;,</span><br><span class="line">  props: &#123;&#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      user: &#123;&#125;, // 个人信息</span><br><span class="line">      isUpdatePhotoShow: false,</span><br><span class="line">      img: null, // 预览的图片</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  computed: &#123;&#125;,</span><br><span class="line">  watch: &#123;&#125;,</span><br><span class="line">  created() &#123;</span><br><span class="line">    this.loadUserProfile();</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted() &#123;&#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    async loadUserProfile() &#123;</span><br><span class="line">      try &#123;</span><br><span class="line">        const &#123; data &#125; = await getUserProfile();</span><br><span class="line">        this.user = data.data;</span><br><span class="line">      &#125; catch (err) &#123;</span><br><span class="line">        this.$toast(&quot;数据获取失败&quot;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    onFileChange() &#123;</span><br><span class="line">      // 获取文件对象</span><br><span class="line">      const file = this.$refs.file.files[0];</span><br><span class="line"></span><br><span class="line">      // 基于文章对象获取 blob 数据</span><br><span class="line">      this.img = window.URL.createObjectURL(file);</span><br><span class="line"></span><br><span class="line">      // 展示预览图片弹出层</span><br><span class="line">      this.isUpdatePhotoShow = true;</span><br><span class="line"></span><br><span class="line">      // file-input 如果选了同一个文件不会触发 change 事件</span><br><span class="line">      // 解决办法就是每次使用完毕，把它的 value 清空</span><br><span class="line">      this.$refs.file.value = &quot;&quot;;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title>当后端返回数据中有大数字时的解决方案</title>
    <url>/2024/03/14/%E5%BD%93%E5%90%8E%E7%AB%AF%E8%BF%94%E5%9B%9E%E6%95%B0%E6%8D%AE%E4%B8%AD%E6%9C%89%E5%A4%A7%E6%95%B0%E5%AD%97%E6%97%B6%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>JavaScript 能够准确表示的整数范围在<code>-2^53</code>到<code>2^53</code>之间（不含两个端点），超过这个范围，无法精确表示这个值，这使得 JavaScript 不适合进行科学和金融方面的精确计算。因此如果后端返回的数据中有大数字，前端不加以处理就会导致数据不能正常处理。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Math</span>.<span class="title function_">pow</span>(<span class="number">2</span>, <span class="number">53</span>); <span class="comment">// 9007199254740992</span></span><br><span class="line"></span><br><span class="line"><span class="number">9007199254740992</span>; <span class="comment">// 9007199254740992</span></span><br><span class="line"><span class="number">9007199254740993</span>; <span class="comment">// 9007199254740992</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">Math</span>.<span class="title function_">pow</span>(<span class="number">2</span>, <span class="number">53</span>) === <span class="title class_">Math</span>.<span class="title function_">pow</span>(<span class="number">2</span>, <span class="number">53</span>) + <span class="number">1</span>;</span><br><span class="line"><span class="comment">// true</span></span><br></pre></td></tr></table></figure>

<p>上面代码中，超出 2 的 53 次方之后，一个数就不精确了。<br>ES6 引入了<code>Number.MAX_SAFE_INTEGER</code>和<code>Number.MIN_SAFE_INTEGER</code>这两个常量，用来表示这个范围的上下限。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Number</span>.<span class="property">MAX_SAFE_INTEGER</span> === <span class="title class_">Math</span>.<span class="title function_">pow</span>(<span class="number">2</span>, <span class="number">53</span>) - <span class="number">1</span>;</span><br><span class="line"><span class="comment">// true</span></span><br><span class="line"><span class="title class_">Number</span>.<span class="property">MAX_SAFE_INTEGER</span> === <span class="number">9007199254740991</span>;</span><br><span class="line"><span class="comment">// true</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">Number</span>.<span class="property">MIN_SAFE_INTEGER</span> === -<span class="title class_">Number</span>.<span class="property">MAX_SAFE_INTEGER</span>;</span><br><span class="line"><span class="comment">// true</span></span><br><span class="line"><span class="title class_">Number</span>.<span class="property">MIN_SAFE_INTEGER</span> === -<span class="number">9007199254740991</span>;</span><br><span class="line"><span class="comment">// true</span></span><br></pre></td></tr></table></figure>

<p>上面代码中，可以看到 JavaScript 能够精确表示的极限。</p>
<p>后端返回的数据一般都是 <strong>JSON 格式的字符串</strong>。</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;&#123; \&quot;id\&quot;: 9007199254740995, \&quot;name\&quot;: \&quot;Jack\&quot;, \&quot;age\&quot;: 18 &#125;&quot;</span></span><br></pre></td></tr></table></figure>

<p>如果这个字符不做任何处理，你能方便的获取到字符串中的指定数据吗？非常麻烦。所以我们要把它转换为 JavaScript 对象来使用就很方便了。</p>
<p>幸运的是 axios 为了方便我们使用数据，它会在内部使用 <code>JSON.parse()</code> 把后端返回的数据转为 JavaScript 对象。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// &#123; id: 9007199254740996, name: &#x27;Jack&#x27;, age: 18 &#125;</span></span><br><span class="line"><span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="string">&#x27;&#123; &quot;id&quot;: 9007199254740995, &quot;name&quot;: &quot;Jack&quot;, &quot;age&quot;: 18 &#125;&#x27;</span>);</span><br></pre></td></tr></table></figure>

<p>可以看到，超出安全整数范围的 id 无法精确表示，这个问题并不是 axios 的错。</p>
<p>了解了什么是大整数的概念，接下来的问题是如何解决？</p>
<p><a href="https://github.com/sidorares/json-bigint">json-bigint</a> 是一个第三方包，它可以帮我们很好的处理这个问题。</p>
<p>使用它的第一步就是把它安装到你的项目中。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm i json-bigint</span><br></pre></td></tr></table></figure>

<p>下面是使用它的一个简单示例。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> jsonStr = <span class="string">&#x27;&#123; &quot;art_id&quot;: 1245953273786007552 &#125;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">JSON</span>.<span class="title function_">parse</span>(jsonStr)); <span class="comment">// 1245953273786007600</span></span><br><span class="line"><span class="comment">// JSON.stringify()</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// JSONBig 可以处理数据中超出 JavaScript 安全整数范围的问题</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">JSON</span>Big.<span class="title function_">parse</span>(jsonStr)); <span class="comment">// 把 JSON 格式的字符串转为 JavaScript 对象</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用的时候需要把 BigNumber 类型的数据转为字符串来使用</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">JSON</span>Big.<span class="title function_">parse</span>(jsonStr).<span class="property">art_id</span>.<span class="title function_">toString</span>()); <span class="comment">// 1245953273786007552</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(<span class="title class_">JSON</span>Big.<span class="title function_">parse</span>(jsonStr)));</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">JSON</span>Big.<span class="title function_">stringify</span>(<span class="title class_">JSON</span>Big.<span class="title function_">parse</span>(jsonStr))); <span class="comment">// 把 JavaScript 对象 转为 JSON 格式的字符串转</span></span><br></pre></td></tr></table></figure>

<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/1582099315865-5e805425-7abf-4cf2-9df3-acc2ef8f9bb9.png" alt="image.png"></p>
<blockquote>
<p>json-bigint 会把超出 JS 安全整数范围的数字转为一个 BigNumber 类型的对象，对象数据是它内部的一个算法处理之后的，我们要做的就是在使用的时候转为字符串来使用。</p>
</blockquote>
<p>通过 Axios 请求得到的数据都是 Axios 处理（JSON.parse）之后的，我们应该在 Axios 执行处理之前手动使用 json-bigint 来解析处理。Axios 提供了自定义处理原始后端返回数据的 API：<code>transformResponse</code> 。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&quot;axios&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> jsonBig <span class="keyword">from</span> <span class="string">&quot;json-bigint&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> json = <span class="string">&#x27;&#123; &quot;value&quot; : 9223372036854775807, &quot;v2&quot;: 123 &#125;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(jsonBig.<span class="title function_">parse</span>(json));</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> request = axios.<span class="title function_">create</span>(&#123;</span><br><span class="line">  <span class="attr">baseURL</span>: <span class="string">&quot;http://ttapi.research.itcast.cn/&quot;</span>, <span class="comment">// 接口基础路径</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// transformResponse 允许自定义原始的响应数据（字符串）</span></span><br><span class="line">  <span class="attr">transformResponse</span>: [</span><br><span class="line">    <span class="keyword">function</span> (<span class="params">data</span>) &#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// 如果转换成功则返回转换的数据结果</span></span><br><span class="line">        <span class="keyword">return</span> jsonBig.<span class="title function_">parse</span>(data);</span><br><span class="line">      &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">        <span class="comment">// 如果转换失败，则包装为统一数据格式并返回</span></span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">          data,</span><br><span class="line">        &#125;;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">  ],</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> request;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>扩展：ES2020 BigInt</p>
<p>ES2020 引入了一种新的数据类型 BigInt（大整数），来解决这个问题。BigInt 只用来表示整数，没有位数的限制，任何位数的整数都可以精确表示。</p>
<p>参考链接：</p>
<ul>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/BigInt">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects&#x2F;BigInt</a></li>
<li><a href="http://es6.ruanyifeng.com/#docs/number#BigInt-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B">http://es6.ruanyifeng.com/#docs/number#BigInt-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B</a></li>
</ul>
</blockquote>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title>移动端图片预览实现</title>
    <url>/2024/03/14/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E5%9B%BE%E7%89%87%E9%A2%84%E8%A7%88%E5%AE%9E%E7%8E%B0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>思路：</p>
<p>1、从文章内容中获取到所有的 img DOM 节点</p>
<p>2、获取文章内容中所有的图片地址</p>
<p>3、遍历所有 img 节点，给每个节点注册点击事件</p>
<p>4、在 img 点击事件处理函数中，调用 vant 提供的 ImagePreview 预览</p>
<p>实现代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div</span><br><span class="line">    class=&quot;article-content markdown-body&quot;</span><br><span class="line">    v-html=&quot;article.content&quot;</span><br><span class="line">    ref=&quot;article-content&quot;</span><br><span class="line">  &gt;&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">    data () &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">        article: &#123;&#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    methods: &#123;</span><br><span class="line">      async loadArticle () &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">          const &#123; data &#125; = await getArticleById(this.articleId)</span><br><span class="line">          // 数据驱动视图这件事儿不是立即的</span><br><span class="line">          this.article = data.data</span><br><span class="line">          // 初始化图片点击预览。因为vue更新dom是异步的，所以这里获取文章数据后，马上通过ref这种方式               // 是获取不到最新的dom的，除了下面这种方式，也可以通过$nextTick</span><br><span class="line">          setTimeout(() =&gt; &#123;</span><br><span class="line">            this.previewImage()</span><br><span class="line">          &#125;, 0)</span><br><span class="line">        &#125; catch (err) &#123;</span><br><span class="line">          if (err.response &amp;&amp; err.response.status === 404) &#123;</span><br><span class="line">          this.errStatus = 404</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      previewImage () &#123;</span><br><span class="line">       // 得到所有的 img 节点</span><br><span class="line">       const articleContent = this.$refs[&#x27;article-content&#x27;]</span><br><span class="line">       const imgs = articleContent.querySelectorAll(&#x27;img&#x27;)</span><br><span class="line">       // 获取所有 img 地址</span><br><span class="line">       const images = []</span><br><span class="line">       imgs.forEach((img, index) =&gt; &#123;</span><br><span class="line">         images.push(img.src)</span><br><span class="line">          // 给每个 img 注册点击事件，在处理函数中调用预览</span><br><span class="line">         img.onclick = () =&gt; &#123;</span><br><span class="line">           ImagePreview(&#123;</span><br><span class="line">           // 预览的图片地址数组</span><br><span class="line">           images,</span><br><span class="line">           // 起始位置，从 0 开始</span><br><span class="line">           startPosition: index</span><br><span class="line">           &#125;)</span><br><span class="line">         &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">     &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title>移动端搜索栏实现</title>
    <url>/2024/03/14/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E6%90%9C%E7%B4%A2%E6%A0%8F%E5%AE%9E%E7%8E%B0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="一、搜索栏常用功能"><a href="#一、搜索栏常用功能" class="headerlink" title="一、搜索栏常用功能"></a>一、搜索栏常用功能</h2><p>一般搜索栏会有搜索联想提示功能、搜索历史和搜索结果功能。因此我们可以将整个组件拆分成搜索联想建议、搜索结果、搜索历史记录三个组件</p>
<img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/1566431801892.png" width="250">

<h2 id="二、创建父组件并配置路由"><a href="#二、创建父组件并配置路由" class="headerlink" title="二、创建父组件并配置路由"></a>二、创建父组件并配置路由</h2><p>1、创建 <code>src/views/search/index.vue</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;search-container&quot;&gt;</span><br><span class="line">    &lt;!-- 搜索栏 --&gt;</span><br><span class="line">    &lt;!--</span><br><span class="line">      Tips: 在 van-search 外层增加 form 标签，且 action 不为空，即可在 iOS 输入法中显示搜索按钮</span><br><span class="line">     --&gt;</span><br><span class="line">    &lt;form action=&quot;/&quot;&gt;</span><br><span class="line">      &lt;van-search</span><br><span class="line">        v-model=&quot;searchText&quot;</span><br><span class="line">        show-action</span><br><span class="line">        placeholder=&quot;请输入搜索关键词&quot;</span><br><span class="line">        background=&quot;#3296fa&quot;</span><br><span class="line">        @search=&quot;onSearch&quot;</span><br><span class="line">        @cancel=&quot;onCancel&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">    &lt;!-- /搜索栏 --&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 搜索历史记录 --&gt;</span><br><span class="line">    &lt;search-history /&gt;</span><br><span class="line">    &lt;!-- /搜索历史记录 --&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 联想建议 --&gt;</span><br><span class="line">    &lt;search-suggestion /&gt;</span><br><span class="line">    &lt;!-- /联想建议 --&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 历史记录 --&gt;</span><br><span class="line">    &lt;search-result /&gt;</span><br><span class="line">    &lt;!-- /历史记录 --&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import SearchHistory from &quot;./components/search-history&quot;;</span><br><span class="line">import SearchSuggestion from &quot;./components/search-suggestion&quot;;</span><br><span class="line">import SearchResult from &quot;./components/search-result&quot;;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;SearchIndex&quot;,</span><br><span class="line">  components: &#123;</span><br><span class="line">    SearchHistory,</span><br><span class="line">    SearchSuggestion,</span><br><span class="line">    SearchResult,</span><br><span class="line">  &#125;,</span><br><span class="line">  props: &#123;&#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      searchText: &quot;&quot;,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  computed: &#123;&#125;,</span><br><span class="line">  watch: &#123;&#125;,</span><br><span class="line">  created() &#123;&#125;,</span><br><span class="line">  mounted() &#123;&#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    onSearch(val) &#123;</span><br><span class="line">      console.log(val);</span><br><span class="line">    &#125;,</span><br><span class="line">    onCancel() &#123;</span><br><span class="line">      this.$router.back();</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&quot;less&quot;&gt;</span><br><span class="line">.search-container &#123;</span><br><span class="line">  .van-search__action &#123;</span><br><span class="line">    color: #fff;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p>2、然后把搜索页面的路由配置到根组件路由（一级路由）</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">path</span>: <span class="string">&#x27;/search&#x27;</span>,</span><br><span class="line">  <span class="attr">omponent</span>: <span class="title class_">Search</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="三、搜索历史记录子组件"><a href="#三、搜索历史记录子组件" class="headerlink" title="三、搜索历史记录子组件"></a>三、搜索历史记录子组件</h2><p>创建 <code>src/views/search/components/search-history.vue</code></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;search-history&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">van-cell</span> <span class="attr">title</span>=<span class="string">&quot;搜索历史&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span>&gt;</span>全部删除<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span>&gt;</span>完成<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">van-icon</span> <span class="attr">name</span>=<span class="string">&quot;delete&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">van-cell</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">van-cell</span> <span class="attr">title</span>=<span class="string">&quot;hello&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">van-icon</span> <span class="attr">name</span>=<span class="string">&quot;close&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">van-cell</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">van-cell</span> <span class="attr">title</span>=<span class="string">&quot;hello&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">van-icon</span> <span class="attr">name</span>=<span class="string">&quot;close&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">van-cell</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">van-cell</span> <span class="attr">title</span>=<span class="string">&quot;hello&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">van-icon</span> <span class="attr">name</span>=<span class="string">&quot;close&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">van-cell</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">van-cell</span> <span class="attr">title</span>=<span class="string">&quot;hello&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">van-icon</span> <span class="attr">name</span>=<span class="string">&quot;close&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">van-cell</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">name</span>: <span class="string">&quot;SearchHistory&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">components</span>: &#123;&#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">props</span>: &#123;&#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">return</span> &#123;&#125;;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">computed</span>: &#123;&#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">watch</span>: &#123;&#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">created</span>(<span class="params"></span>) &#123;&#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">mounted</span>(<span class="params"></span>) &#123;&#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">methods</span>: &#123;&#125;,</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span> <span class="attr">lang</span>=<span class="string">&quot;less&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="四、搜索联想建议子组件"><a href="#四、搜索联想建议子组件" class="headerlink" title="四、搜索联想建议子组件"></a>四、搜索联想建议子组件</h2><p>创建 <code>src/views/search/components/search-suggestion.vue</code></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;search-suggestion&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">van-cell</span> <span class="attr">title</span>=<span class="string">&quot;黑马程序员...&quot;</span> <span class="attr">icon</span>=<span class="string">&quot;search&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">van-cell</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">van-cell</span> <span class="attr">title</span>=<span class="string">&quot;黑马程序员...&quot;</span> <span class="attr">icon</span>=<span class="string">&quot;search&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">van-cell</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">van-cell</span> <span class="attr">title</span>=<span class="string">&quot;黑马程序员...&quot;</span> <span class="attr">icon</span>=<span class="string">&quot;search&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">van-cell</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">van-cell</span> <span class="attr">title</span>=<span class="string">&quot;黑马程序员...&quot;</span> <span class="attr">icon</span>=<span class="string">&quot;search&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">van-cell</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">van-cell</span> <span class="attr">title</span>=<span class="string">&quot;黑马程序员...&quot;</span> <span class="attr">icon</span>=<span class="string">&quot;search&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">van-cell</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">name</span>: <span class="string">&quot;SearchSuggestion&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">components</span>: &#123;&#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">props</span>: &#123;&#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">return</span> &#123;&#125;;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">computed</span>: &#123;&#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">watch</span>: &#123;&#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">created</span>(<span class="params"></span>) &#123;&#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">mounted</span>(<span class="params"></span>) &#123;&#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">methods</span>: &#123;&#125;,</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span> <span class="attr">lang</span>=<span class="string">&quot;less&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>五、搜索结果子组件</p>
<p>创建 <code>src/views/search/components/search-result.vue</code></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;search-result&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">van-list</span></span></span><br><span class="line"><span class="tag">      <span class="attr">v-model</span>=<span class="string">&quot;loading&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:finished</span>=<span class="string">&quot;finished&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">finished-text</span>=<span class="string">&quot;没有更多了&quot;</span></span></span><br><span class="line"><span class="tag">      @<span class="attr">load</span>=<span class="string">&quot;onLoad&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">van-cell</span> <span class="attr">v-for</span>=<span class="string">&quot;item in list&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item&quot;</span> <span class="attr">:title</span>=<span class="string">&quot;item&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">van-list</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">name</span>: <span class="string">&quot;SearchResult&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">components</span>: &#123;&#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">props</span>: &#123;&#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">data</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">list</span>: [],</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">loading</span>: <span class="literal">false</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">finished</span>: <span class="literal">false</span>,</span></span><br><span class="line"><span class="language-javascript">      &#125;;</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">computed</span>: &#123;&#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">watch</span>: &#123;&#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">created</span>(<span class="params"></span>) &#123;&#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">mounted</span>(<span class="params"></span>) &#123;&#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">onLoad</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 异步更新数据</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// setTimeout 仅做示例，真实场景中一般为 ajax 请求</span></span></span><br><span class="line"><span class="language-javascript">        <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">this</span>.<span class="property">list</span>.<span class="title function_">push</span>(<span class="variable language_">this</span>.<span class="property">list</span>.<span class="property">length</span> + <span class="number">1</span>);</span></span><br><span class="line"><span class="language-javascript">          &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">          <span class="comment">// 加载状态结束</span></span></span><br><span class="line"><span class="language-javascript">          <span class="variable language_">this</span>.<span class="property">loading</span> = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">          <span class="comment">// 数据全部加载完成</span></span></span><br><span class="line"><span class="language-javascript">          <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">list</span>.<span class="property">length</span> &gt;= <span class="number">40</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">this</span>.<span class="property">finished</span> = <span class="literal">true</span>;</span></span><br><span class="line"><span class="language-javascript">          &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;, <span class="number">1000</span>);</span></span><br><span class="line"><span class="language-javascript">      &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">  &#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span> <span class="attr">lang</span>=<span class="string">&quot;less&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="六、处理页面显示状态"><a href="#六、处理页面显示状态" class="headerlink" title="六、处理页面显示状态"></a>六、处理页面显示状态</h2><p><em>我们可以定义一个 isResultShow 变量来控制搜索结果的显示与否。当用户点击确定或者选中某条搜索历史记录时展示搜索结果。而联想建议和搜索历史记录则可以通过搜索栏是否有值来互斥的显示。</em></p>
<p>1、在 <code>data</code> 中添加数据用来控制搜索结果的显示状态</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">data () &#123;</span><br><span class="line">  ...</span><br><span class="line">  <span class="attr">isResultShow</span>: <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>2、在模板中绑定条件渲染</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 搜索结果 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">search-result</span> <span class="attr">v-if</span>=<span class="string">&quot;isResultShow&quot;</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- /搜索结果 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 联想建议 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">search-suggestion</span> <span class="attr">v-else-if</span>=<span class="string">&quot;searchText&quot;</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- /联想建议 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 搜索历史记录 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">search-history</span> <span class="attr">v-else</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- /搜索历史记录 --&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="七、搜索联想建议"><a href="#七、搜索联想建议" class="headerlink" title="七、搜索联想建议"></a>七、搜索联想建议</h2><p>基本思路：</p>
<ul>
<li>当搜索框输入内容的时候，请求加载联想建议的数据</li>
<li>将请求得到的结果绑定到模板中</li>
</ul>
<h3 id="基本功能"><a href="#基本功能" class="headerlink" title="基本功能"></a>基本功能</h3><p>一、将父组件中搜索框输入的内容传给联想建议子组件</p>
<p>二、在子组件中监视搜索框输入内容的变化，如果变化则请求获取联想建议数据</p>
<p>三、将获取到的联想建议数据展示到列表中</p>
<h3 id="防抖优化"><a href="#防抖优化" class="headerlink" title="防抖优化"></a>防抖优化</h3><p>1、安装 lodash</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># yarn add lodash</span></span><br><span class="line">npm i lodash</span><br></pre></td></tr></table></figure>

<p>2、防抖处理</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// lodash 支持按需加载，有利于打包结果优化</span></span><br><span class="line"><span class="keyword">import</span> &#123; debounce &#125; <span class="keyword">from</span> <span class="string">&quot;lodash&quot;</span>;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>不建议下面这样使用，因为这样会加载整个模块。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> _ <span class="keyword">from</span> <span class="string">&quot;lodash&quot;</span>;</span><br><span class="line">_.<span class="title function_">debounce</span>();</span><br></pre></td></tr></table></figure>
</blockquote>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// debounce 函数</span></span><br><span class="line"><span class="comment">// 参数1：函数</span></span><br><span class="line"><span class="comment">// 参数2：防抖时间</span></span><br><span class="line"><span class="comment">// 返回值：防抖之后的函数，和参数1功能是一样的</span></span><br><span class="line"><span class="attr">onSearchInput</span>: <span class="title function_">debounce</span>(<span class="keyword">async</span> <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> searchContent = <span class="variable language_">this</span>.<span class="property">searchContent</span></span><br><span class="line">  <span class="keyword">if</span> (!searchContent) &#123;</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 1. 请求获取数据</span></span><br><span class="line">  <span class="keyword">const</span> &#123; data &#125; = <span class="keyword">await</span> <span class="title function_">getSuggestions</span>(searchContent)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 2. 将数据添加到组件实例中</span></span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">suggestions</span> = data.<span class="property">data</span>.<span class="property">options</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 3. 模板绑定</span></span><br><span class="line">&#125;, <span class="number">200</span>),</span><br></pre></td></tr></table></figure>

<p><strong><em>PC 端的联想搜索则可以借助 elementPlus 的 Autocomplete 自动补全输入框组件轻易实现</em></strong></p>
<h2 id="八、搜索关键字高亮"><a href="#八、搜索关键字高亮" class="headerlink" title="八、搜索关键字高亮"></a>八、搜索关键字高亮</h2><p>如何将字符串中的指定字符在<strong>网页</strong>中高亮展示？</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;Hello World&quot;</span>;</span><br></pre></td></tr></table></figure>

<p>将需要高亮的字符包裹 HTML 标签，为其单独设置颜色。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;Hello &lt;span style=&quot;</span><span class="attr">color</span>: red<span class="string">&quot;&gt;World&lt;/span&gt;&quot;</span></span><br></pre></td></tr></table></figure>

<p>在 Vue 中如何渲染带有 HTML 标签的字符串？</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">data () &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">htmlStr</span>: <span class="string">&#x27;Hello &lt;span style=&quot;color: red&quot;&gt;World&lt;/span&gt;&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;&#123; htmlStr &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-html</span>=<span class="string">&quot;htmlStr&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>![image-20200112154732044](E:\web 前端开发\02-配套课件\005- Vue.js 基础到高级项目实战\阶段五：社交媒体-头条项目资料\前端 vue 移动端项目资料\vue 移动端项目第一天\讲义\讲义\assets\image-20200112154732044.png)</p>
<p>如何把字符串中指定字符统一替换为高亮（包裹了 HTML）的字符？</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> str = <span class="string">&quot;Hello World&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 结果：&lt;span style=&quot;color: red&quot;&gt;Hello&lt;/span&gt; World</span></span><br><span class="line"><span class="string">&quot;Hello World&quot;</span>.<span class="title function_">replace</span>(<span class="string">&quot;Hello&quot;</span>, <span class="string">&#x27;&lt;span style=&quot;color: red&quot;&gt;Hello&lt;/span&gt;&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 需要注意的是，replace 方法的字符串匹配只能替换第1个满足的字符</span></span><br><span class="line"><span class="comment">// &lt;span style=&quot;color: red&quot;&gt;Hello&lt;/span&gt; World Hello abc</span></span><br><span class="line"><span class="string">&quot;Hello World Hello abc&quot;</span>.<span class="title function_">replace</span>(</span><br><span class="line">  <span class="string">&quot;Hello&quot;</span>,</span><br><span class="line">  <span class="string">&#x27;&lt;span style=&quot;color: red&quot;&gt;Hello&lt;/span&gt;&#x27;</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果想要全文替换，使用正则表达式</span></span><br><span class="line"><span class="comment">// g 全局</span></span><br><span class="line"><span class="comment">// i 忽略大小写</span></span><br><span class="line"><span class="comment">// &lt;span style=&quot;color: red&quot;&gt;Hello&lt;/span&gt; World &lt;span style=&quot;color: red&quot;&gt;Hello&lt;/span&gt; abc</span></span><br><span class="line"><span class="string">&quot;Hello World Hello abc&quot;</span>.<span class="title function_">replace</span>(</span><br><span class="line">  <span class="regexp">/Hello/gi</span>,</span><br><span class="line">  <span class="string">&#x27;&lt;span style=&quot;color: red&quot;&gt;Hello&lt;/span&gt;&#x27;</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<blockquote>
<p>一个小扩展：使用字符串的 split 结合数组的 join 方法实现高亮</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&quot;hello world 你好 hello&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// [&quot;&quot;, &quot; world 你好 &quot;, &quot;&quot;]</span></span><br><span class="line"><span class="keyword">const</span> arr = str.<span class="title function_">split</span>(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// &quot;&lt;span&gt;hello&lt;/span&gt; world 你好 &lt;span&gt;hello&lt;/span&gt;&quot;</span></span><br><span class="line">arr.<span class="title function_">join</span>(<span class="string">&quot;&lt;span&gt;hello&lt;/span&gt;&quot;</span>);</span><br></pre></td></tr></table></figure>
</blockquote>
<p>下面是具体的处理。</p>
<p>1、在 methods 中添加一个方法处理高亮</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 参数 source: 原始字符串</span></span><br><span class="line"><span class="comment">// 参数 keyword: 需要高亮的关键词</span></span><br><span class="line"><span class="comment">// 返回值：替换之后的高亮字符串</span></span><br><span class="line">highlight (source, keyword) &#123;</span><br><span class="line">  <span class="comment">// /searchContent/ 正则表达式中的一切内容都会当做字符串使用</span></span><br><span class="line">  <span class="comment">// 这里可以 new RegExp 方式根据字符串创建一个正则表达式</span></span><br><span class="line">  <span class="comment">// RegExp 是原生 JavaScript 的内置构造函数</span></span><br><span class="line">  <span class="comment">// 参数1：字符串，注意，这里不要加 //</span></span><br><span class="line">  <span class="comment">// 参数2：匹配模式，g 全局，i 忽略大小写</span></span><br><span class="line">  <span class="keyword">const</span> reg = <span class="keyword">new</span> <span class="title class_">RegExp</span>(keyword, <span class="string">&#x27;gi&#x27;</span>)</span><br><span class="line">  <span class="keyword">return</span> source.<span class="title function_">replace</span>(reg, <span class="string">`&lt;span style=&quot;color: #3296fa&quot;&gt;<span class="subst">$&#123;keyword&#125;</span>&lt;/span&gt;`</span>)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<p>2、然后在联想建议列表项中绑定调用</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 联想建议 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">van-cell-group</span> <span class="attr">v-else-if</span>=<span class="string">&quot;searchContent&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">van-cell</span></span></span><br><span class="line"><span class="tag">    <span class="attr">icon</span>=<span class="string">&quot;search&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">v-for</span>=<span class="string">&quot;(item, index) in suggestions&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span></span></span><br><span class="line"><span class="tag">    @<span class="attr">click</span>=<span class="string">&quot;onSearch(item)&quot;</span></span></span><br><span class="line"><span class="tag">  &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">slot</span>=<span class="string">&quot;title&quot;</span> <span class="attr">v-html</span>=<span class="string">&quot;highlight(item, searchContent)&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">van-cell</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">van-cell-group</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- /联想建议 --&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="九、搜索结果"><a href="#九、搜索结果" class="headerlink" title="九、搜索结果"></a>九、搜索结果</h2><p>思路：</p>
<ul>
<li>找到数据接口</li>
<li>请求获取数据</li>
<li>将数据展示到模板中</li>
</ul>
<p>一、获取搜索关键字</p>
<p>1、声明接收父组件中的搜索框输入的内容</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">props</span>: &#123;</span><br><span class="line">  <span class="attr">q</span>: &#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="title class_">String</span>,</span><br><span class="line">    <span class="attr">require</span>: <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<p>2、在父组件给子组件传递数据</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 搜索结果 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">search-result</span> <span class="attr">v-if</span>=<span class="string">&quot;isResultShow&quot;</span> <span class="attr">:q</span>=<span class="string">&quot;searchText&quot;</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- /搜索结果 --&gt;</span></span><br></pre></td></tr></table></figure>

<p>最后在调试工具中查看确认是否接收到 props 数据。</p>
<p>![image-20200112162223915](E:\web 前端开发\02-配套课件\005- Vue.js 基础到高级项目实战\阶段五：社交媒体-头条项目资料\前端 vue 移动端项目资料\vue 移动端项目第一天\讲义\讲义\assets\image-20200112162223915.png)</p>
<p>二、请求获取数据</p>
<p>1、在 <code>api/serach.js</code> 添加封装获取搜索结果的请求方法</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取搜索结果</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">getSearch</span>(<span class="params">params</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&quot;GET&quot;</span>,</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&quot;/app/v1_0/search&quot;</span>,</span><br><span class="line">    params,</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>2、请求获取</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">+ <span class="keyword">import</span> &#123; getSearch &#125; <span class="keyword">from</span> <span class="string">&#x27;@/api/search&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;SearchResult&#x27;</span>,</span><br><span class="line">  <span class="attr">components</span>: &#123;&#125;,</span><br><span class="line">  <span class="attr">props</span>: &#123;</span><br><span class="line">    <span class="attr">q</span>: &#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="title class_">String</span>,</span><br><span class="line">      <span class="attr">require</span>: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  data () &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">list</span>: [],</span><br><span class="line">      <span class="attr">loading</span>: <span class="literal">false</span>,</span><br><span class="line">      <span class="attr">finished</span>: <span class="literal">false</span>,</span><br><span class="line">+      <span class="attr">page</span>: <span class="number">1</span>,</span><br><span class="line">+      <span class="attr">perPage</span>: <span class="number">20</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">computed</span>: &#123;&#125;,</span><br><span class="line">  <span class="attr">watch</span>: &#123;&#125;,</span><br><span class="line">  created () &#123;&#125;,</span><br><span class="line">  mounted () &#123;&#125;,</span><br><span class="line">  <span class="attr">methods</span>: &#123;</span><br><span class="line">+++    <span class="keyword">async</span> onLoad () &#123;</span><br><span class="line">      <span class="comment">// 1. 请求获取数据</span></span><br><span class="line">      <span class="keyword">const</span> &#123; data &#125; = <span class="keyword">await</span> <span class="title function_">getSearch</span>(&#123;</span><br><span class="line">        <span class="attr">page</span>: <span class="variable language_">this</span>.<span class="property">page</span>, <span class="comment">// 页码</span></span><br><span class="line">        <span class="attr">per_page</span>: <span class="variable language_">this</span>.<span class="property">perPage</span>, <span class="comment">// 每页大小</span></span><br><span class="line">        <span class="attr">q</span>: <span class="variable language_">this</span>.<span class="property">q</span> <span class="comment">// 搜索关键字</span></span><br><span class="line">      &#125;)</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 2. 将数据添加到列表中</span></span><br><span class="line">      <span class="keyword">const</span> &#123; results &#125; = data.<span class="property">data</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">list</span>.<span class="title function_">push</span>(...results)</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 3. 设置加载状态结束</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">loading</span> = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">// 4. 判断数据是否加载完毕</span></span><br><span class="line">      <span class="keyword">if</span> (results.<span class="property">length</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">page</span>++ <span class="comment">// 更新获取下一页数据的页码</span></span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">finished</span> = <span class="literal">true</span> <span class="comment">// 没有数据了，将加载状态设置结束，不再 onLoad</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>三、最后，模板绑定</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">van-list</span></span></span><br><span class="line"><span class="tag">  <span class="attr">v-model</span>=<span class="string">&quot;loading&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">:finished</span>=<span class="string">&quot;finished&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">finished-text</span>=<span class="string">&quot;没有更多了&quot;</span></span></span><br><span class="line"><span class="tag">  @<span class="attr">load</span>=<span class="string">&quot;onLoad&quot;</span></span></span><br><span class="line"><span class="tag">&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">van-cell</span></span></span><br><span class="line"><span class="tag">    +</span></span><br><span class="line"><span class="tag">    <span class="attr">v-for</span>=<span class="string">&quot;(article, index) in list&quot;</span></span></span><br><span class="line"><span class="tag">    +</span></span><br><span class="line"><span class="tag">    <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span></span></span><br><span class="line"><span class="tag">    +</span></span><br><span class="line"><span class="tag">    <span class="attr">:title</span>=<span class="string">&quot;article.title&quot;</span></span></span><br><span class="line"><span class="tag">  /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">van-list</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="十、搜索历史记录"><a href="#十、搜索历史记录" class="headerlink" title="十、搜索历史记录"></a>十、搜索历史记录</h2><h3 id="添加历史记录"><a href="#添加历史记录" class="headerlink" title="添加历史记录"></a>添加历史记录</h3><p>当发生搜索的时候我们才需要记录历史记录。</p>
<p>1、在 data 中添加一个数据用来存储历史记录</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">data () &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="attr">searchHistories</span>: []</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>2、在触发搜索的时候，记录历史记录</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">onSearch (val) &#123;</span><br><span class="line">  <span class="comment">// 更新文本框内容</span></span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">searchText</span> = val</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 存储搜索历史记录</span></span><br><span class="line">  <span class="comment">// 要求：不要有重复历史记录、最新的排在最前面</span></span><br><span class="line">  <span class="keyword">const</span> index = <span class="variable language_">this</span>.<span class="property">searchHistories</span>.<span class="title function_">indexOf</span>(val)</span><br><span class="line">  <span class="keyword">if</span> (index !== -<span class="number">1</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">searchHistories</span>.<span class="title function_">splice</span>(index, <span class="number">1</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">searchHistories</span>.<span class="title function_">unshift</span>(val)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 渲染搜索结果</span></span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">isResultShow</span> = <span class="literal">true</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<h3 id="展示历史记录"><a href="#展示历史记录" class="headerlink" title="展示历史记录"></a>展示历史记录</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 历史记录 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">van-cell-group</span> <span class="attr">v-else</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">van-cell</span> <span class="attr">title</span>=<span class="string">&quot;历史记录&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">van-icon</span> <span class="attr">name</span>=<span class="string">&quot;delete&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>全部删除<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>完成<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">van-cell</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">van-cell</span> <span class="attr">:title</span>=<span class="string">&quot;item&quot;</span> <span class="attr">v-for</span>=<span class="string">&quot;(item, index) in searchHistories&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">van-icon</span> <span class="attr">name</span>=<span class="string">&quot;close&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">van-icon</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">van-cell</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">van-cell-group</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- /历史记录 --&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="删除历史记录"><a href="#删除历史记录" class="headerlink" title="删除历史记录"></a>删除历史记录</h3><p>基本思路：</p>
<ul>
<li>给历史记录中的每一项注册点击事件</li>
<li>在处理函数中判断<ul>
<li>如果是删除状态，则执行删除操作</li>
<li>如果是非删除状态，则执行搜索操作</li>
</ul>
</li>
</ul>
<p>一、处理删除相关元素的展示状态</p>
<p>1、在 data 中添加一个数据用来控制删除相关元素的显示状态</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">data () &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="attr">isDeleteShow</span>: <span class="literal">false</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>2、绑定使用</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 历史记录 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">van-cell-group</span> <span class="attr">v-else</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">van-cell</span> <span class="attr">title</span>=<span class="string">&quot;历史记录&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-if</span>=<span class="string">&quot;isDeleteShow&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> @<span class="attr">click</span>=<span class="string">&quot;searchHistories = []&quot;</span>&gt;</span>全部删除<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> @<span class="attr">click</span>=<span class="string">&quot;isDeleteShow = false&quot;</span>&gt;</span>完成<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">van-icon</span> <span class="attr">v-else</span> <span class="attr">name</span>=<span class="string">&quot;delete&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;isDeleteShow = true&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">van-icon</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">van-cell</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">van-cell</span></span></span><br><span class="line"><span class="tag">    <span class="attr">:title</span>=<span class="string">&quot;item&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">v-for</span>=<span class="string">&quot;(item, index) in searchHistories&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span></span></span><br><span class="line"><span class="tag">    @<span class="attr">click</span>=<span class="string">&quot;onSearch(item)&quot;</span></span></span><br><span class="line"><span class="tag">  &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">van-icon</span></span></span><br><span class="line"><span class="tag">      <span class="attr">v-show</span>=<span class="string">&quot;isDeleteShow&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">name</span>=<span class="string">&quot;close&quot;</span></span></span><br><span class="line"><span class="tag">      @<span class="attr">click</span>=<span class="string">&quot;searchHistories.splice(index, 1)&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span><span class="tag">&lt;/<span class="name">van-icon</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">van-cell</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">van-cell-group</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- /历史记录 --&gt;</span></span><br></pre></td></tr></table></figure>

<p>二、处理删除操作</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 历史记录 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">van-cell-group</span> <span class="attr">v-else</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">van-cell</span> <span class="attr">title</span>=<span class="string">&quot;历史记录&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-if</span>=<span class="string">&quot;isDeleteShow&quot;</span>&gt;</span></span><br><span class="line">      + <span class="tag">&lt;<span class="name">span</span> @<span class="attr">click</span>=<span class="string">&quot;searchHistories = []&quot;</span>&gt;</span>全部删除<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span> @<span class="attr">click</span>=<span class="string">&quot;isDeleteShow = false&quot;</span>&gt;</span>完成<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">van-icon</span> <span class="attr">v-else</span> <span class="attr">name</span>=<span class="string">&quot;delete&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;isDeleteShow = true&quot;</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">van-cell</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">van-cell</span></span></span><br><span class="line"><span class="tag">    <span class="attr">:title</span>=<span class="string">&quot;item&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">v-for</span>=<span class="string">&quot;(item, index) in searchHistories&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">:key</span>=<span class="string">&quot;index&quot;</span></span></span><br><span class="line"><span class="tag">    +</span></span><br><span class="line"><span class="tag">    @<span class="attr">click</span>=<span class="string">&quot;onHistoryClick(item, index)&quot;</span></span></span><br><span class="line"><span class="tag">  &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">van-icon</span> <span class="attr">v-show</span>=<span class="string">&quot;isDeleteShow&quot;</span> <span class="attr">name</span>=<span class="string">&quot;close&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">van-icon</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">van-cell</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">van-cell-group</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- /历史记录 --&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">onHistoryClick (item, index) &#123;</span><br><span class="line">  <span class="comment">// 如果是删除状态，则执行删除操作</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">isDeleteShow</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">searchHistories</span>.<span class="title function_">splice</span>(index, <span class="number">1</span>)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">// 否则执行搜索操作</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">onSearch</span>(item)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="数据持久化"><a href="#数据持久化" class="headerlink" title="数据持久化"></a>数据持久化</h3><p>1、利用 watch 监视统一存储数据</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">watch</span>: &#123;</span><br><span class="line">  searchHistories (val) &#123;</span><br><span class="line">    <span class="comment">// 同步到本地存储</span></span><br><span class="line">    <span class="title function_">setItem</span>(<span class="string">&#x27;serach-histories&#x27;</span>, val)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>

<p>2、初始化的时候从本地存储获取数据</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">data () &#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="attr">searchHistories</span>: <span class="title function_">getItem</span>(<span class="string">&#x27;serach-histories&#x27;</span>) || [],</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title>第三方图片资源403问题的一种解决方案</title>
    <url>/2024/03/14/%E7%AC%AC%E4%B8%89%E6%96%B9%E5%9B%BE%E7%89%87%E8%B5%84%E6%BA%90403%E9%97%AE%E9%A2%98%E7%9A%84%E4%B8%80%E7%A7%8D%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>有时候如果我们项目的接口数据是后端通过爬虫抓取的第三方平台内容，而第三方平台对图片资源做了防盗链保护处理。那么好多图片就会资源请求失败返回 403。</p>
<p>第三方平台怎么处理图片资源保护的？</p>
<p>服务端一般使用 Referer 请求头识别访问来源，然后处理资源访问。</p>
<img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20200405134347749.png" alt="image-20200405134347749"  />

<p>Referer 是什么东西？</p>
<blockquote>
<p>扩展参考：<a href="http://www.ruanyifeng.com/blog/2019/06/http-referer.html">http://www.ruanyifeng.com/blog/2019/06/http-referer.html</a></p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Referer 是 HTTP 请求头的一部分，当浏览器向 Web 服务器发送请求的时候，一般会带上 Referer，它包含了当前请求资源的来源页面的地址。服务端一般使用 Referer 请求头识别访问来源，可能会以此进行统计分析、日志记录以及缓存优化等。</span><br></pre></td></tr></table></figure>

<blockquote>
<p>需要注意的是 referer 实际上是 “referrer” 误拼写。参见 <a href="https://zh.wikipedia.org/wiki/HTTP_referer">HTTP referer on Wikipedia</a> （HTTP referer 在维基百科上的条目）来获取更详细的信息。</p>
</blockquote>
<p>怎么解决？</p>
<p>不要发送 referrer ，对方服务端就不知道你从哪来的了，姑且认为是你是自己人吧。</p>
<p>如何设置不发送 referrer？</p>
<p>用 <code>&lt;a&gt;</code>、<code>&lt;area&gt;</code>、<code>&lt;img&gt;</code>、<code>&lt;iframe&gt;</code>、<code>&lt;script&gt;</code> 或者 <code>&lt;link&gt;</code> 元素上的 <code>referrerpolicy</code> 属性为其设置独立的请求策略，例如：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;http://……&quot;</span> <span class="attr">referrerpolicy</span>=<span class="string">&quot;no-referrer&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<p>或者直接在 HTMl 页面头中通过 meta 属性全局配置：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;referrer&quot;</span> <span class="attr">content</span>=<span class="string">&quot;no-referrer&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id=""><a href="#" class="headerlink" title=""></a></h3>]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title>文件预览功能</title>
    <url>/2024/03/13/%E6%96%87%E4%BB%B6%E9%A2%84%E8%A7%88%E5%8A%9F%E8%83%BD/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>我这里实现了图片、excel、docx、pdf 格式的文件在浏览器中预览</p>
<h2 id="一、插件安装"><a href="#一、插件安装" class="headerlink" title="一、插件安装"></a>一、插件安装</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install @vue-office/docx @vue-office/excel @vue-office/pdf</span><br></pre></td></tr></table></figure>

<h2 id="二、路由配置"><a href="#二、路由配置" class="headerlink" title="二、路由配置"></a>二、路由配置</h2><p>我将预览页做成了一个单独的路由页面（一级），因此需要配置下路由</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter, createWebHashHistory &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Login</span> <span class="keyword">from</span> <span class="string">&quot;../views/Login.vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Home</span> <span class="keyword">from</span> <span class="string">&quot;../views/Home.vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Welcome</span> <span class="keyword">from</span> <span class="string">&quot;../views/Welcome.vue&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> routes = [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&quot;/&quot;</span>,</span><br><span class="line">    <span class="attr">redirect</span>: <span class="string">&quot;/login&quot;</span>,</span><br><span class="line">    <span class="attr">meta</span>: &#123; <span class="attr">title</span>: <span class="string">&quot;登录页&quot;</span> &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&quot;/login&quot;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;login&quot;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="title class_">Login</span>,</span><br><span class="line">    <span class="attr">meta</span>: &#123; <span class="attr">title</span>: <span class="string">&quot;登录页&quot;</span> &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&quot;/home&quot;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;home&quot;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="title class_">Home</span>,</span><br><span class="line">    <span class="attr">redirect</span>: <span class="string">&quot;welcome&quot;</span>,</span><br><span class="line">    <span class="attr">meta</span>: &#123; <span class="attr">title</span>: <span class="string">&quot;欢迎页&quot;</span> &#125;,</span><br><span class="line">    <span class="attr">children</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&quot;/welcome&quot;</span>,</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&quot;welcome&quot;</span>,</span><br><span class="line">        <span class="attr">component</span>: <span class="title class_">Welcome</span>,</span><br><span class="line">        <span class="attr">meta</span>: &#123; <span class="attr">title</span>: <span class="string">&quot;欢迎页&quot;</span> &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&quot;/myDoTask&quot;</span>,</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&quot;myDoTask&quot;</span>,</span><br><span class="line">        <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/workBench/MyDoTask.vue&quot;</span>),</span><br><span class="line">        <span class="attr">meta</span>: &#123; <span class="attr">title</span>: <span class="string">&quot;我的待办&quot;</span> &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&quot;/myDidTask&quot;</span>,</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&quot;myDidTask&quot;</span>,</span><br><span class="line">        <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/workBench/MyDidTask.vue&quot;</span>),</span><br><span class="line">        <span class="attr">meta</span>: &#123; <span class="attr">title</span>: <span class="string">&quot;我的已办&quot;</span> &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&quot;/myApplyTask&quot;</span>,</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&quot;myApplyTask&quot;</span>,</span><br><span class="line">        <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/workBench/MyApplyTask.vue&quot;</span>),</span><br><span class="line">        <span class="attr">meta</span>: &#123; <span class="attr">title</span>: <span class="string">&quot;我的申请&quot;</span> &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&quot;/myReadTask&quot;</span>,</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&quot;myReadTask&quot;</span>,</span><br><span class="line">        <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/workBench/MyReadTask.vue&quot;</span>),</span><br><span class="line">        <span class="attr">meta</span>: &#123; <span class="attr">title</span>: <span class="string">&quot;我的阅知&quot;</span> &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&quot;/myReadDoneTask&quot;</span>,</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&quot;myReadDoneTask&quot;</span>,</span><br><span class="line">        <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/workBench/MyReadDoneTask.vue&quot;</span>),</span><br><span class="line">        <span class="attr">meta</span>: &#123; <span class="attr">title</span>: <span class="string">&quot;我的已阅&quot;</span> &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&quot;/myDraftTask&quot;</span>,</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&quot;myDraftTask&quot;</span>,</span><br><span class="line">        <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/workBench/MyDraftTask.vue&quot;</span>),</span><br><span class="line">        <span class="attr">meta</span>: &#123; <span class="attr">title</span>: <span class="string">&quot;我的草稿箱&quot;</span> &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&quot;/marketingGeFix/:WfCode&quot;</span>,</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&quot;marketingGeFix/:WfCode&quot;</span>,</span><br><span class="line">        <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/marketing/MarketingGeFix.vue&quot;</span>),</span><br><span class="line">        <span class="attr">meta</span>: &#123; <span class="attr">title</span>: <span class="string">&quot;营销审批-政企产品类(含高校)-固话&quot;</span> &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&quot;/printDidTask&quot;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;printDidTask&quot;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/print/PrintDidTask.vue&quot;</span>),</span><br><span class="line">    <span class="attr">meta</span>: &#123; <span class="attr">title</span>: <span class="string">&quot;已办打印&quot;</span> &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 附件预览页面</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&quot;/preview&quot;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;preview&quot;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/preview/preview.vue&quot;</span>),</span><br><span class="line">    <span class="attr">meta</span>: &#123; <span class="attr">title</span>: <span class="string">&quot;附件预览&quot;</span> &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&quot;/403&quot;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;403&quot;</span>,</span><br><span class="line">    <span class="attr">meta</span>: &#123;</span><br><span class="line">      <span class="attr">title</span>: <span class="string">&quot;没有权限&quot;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/403.vue&quot;</span>),</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&quot;/:pathMatch(.*)&quot;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;404&quot;</span>,</span><br><span class="line">    <span class="attr">meta</span>: &#123;</span><br><span class="line">      <span class="attr">title</span>: <span class="string">&quot;页面不存在&quot;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/404.vue&quot;</span>),</span><br><span class="line">  &#125;,</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">history</span>: <span class="title function_">createWebHashHistory</span>(),</span><br><span class="line">  routes,</span><br><span class="line">  <span class="attr">base</span>: <span class="string">&quot;/approve/&quot;</span>,</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">const</span> whiteList = [</span><br><span class="line">  <span class="string">&quot;/403&quot;</span>,</span><br><span class="line">  <span class="string">&quot;/404&quot;</span>,</span><br><span class="line">  <span class="string">&quot;/home&quot;</span>,</span><br><span class="line">  <span class="string">&quot;/welcome&quot;</span>,</span><br><span class="line">  <span class="string">&quot;/myDoTask&quot;</span>,</span><br><span class="line">  <span class="string">&quot;/myDidTask&quot;</span>,</span><br><span class="line">  <span class="string">&quot;/myApplyTask&quot;</span>,</span><br><span class="line">  <span class="string">&quot;/myReadTask&quot;</span>,</span><br><span class="line">  <span class="string">&quot;/myReadDoneTask&quot;</span>,</span><br><span class="line">  <span class="string">&quot;/myDraftTask&quot;</span>,</span><br><span class="line">  <span class="string">&quot;/printDidTask&quot;</span>,</span><br><span class="line">  <span class="string">&quot;/printDidTaskPrettyNumber&quot;</span>,</span><br><span class="line">  <span class="string">&quot;/preview&quot;</span>,</span><br><span class="line">];</span><br><span class="line"><span class="comment">// 挂载路由导航守卫</span></span><br><span class="line">router.<span class="title function_">beforeEach</span>(<span class="keyword">async</span> (to, <span class="keyword">from</span>, next) =&gt; &#123;</span><br><span class="line">  <span class="keyword">if</span> (to.<span class="property">path</span> === <span class="string">&quot;/login&quot;</span> || to.<span class="property">path</span> === <span class="string">&quot;/403&quot;</span> || to.<span class="property">path</span> === <span class="string">&quot;/404&quot;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">next</span>();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 获取token</span></span><br><span class="line">  <span class="keyword">const</span> tokenStr = <span class="variable language_">window</span>.<span class="property">sessionStorage</span>.<span class="title function_">getItem</span>(<span class="string">&quot;token&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span> (!tokenStr) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">next</span>(<span class="string">&quot;/login&quot;</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (whiteList.<span class="title function_">includes</span>(to.<span class="property">path</span>)) <span class="keyword">return</span> <span class="title function_">next</span>();</span><br><span class="line">    <span class="comment">// 获取to.path对应的menu_id</span></span><br><span class="line">    <span class="comment">// const &#123; data &#125; = await getMenuIdByURLAPI(&#123; menu_url: to.path.substring(1) &#125;)</span></span><br><span class="line">    <span class="comment">// debugger</span></span><br><span class="line">    <span class="keyword">const</span> menuInfoList = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="variable language_">window</span>.<span class="property">sessionStorage</span>.<span class="title function_">getItem</span>(<span class="string">&quot;menuInfo&quot;</span>));</span><br><span class="line">    <span class="keyword">const</span> result = menuInfoList.<span class="title function_">filter</span>(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> item.<span class="property">menu_url</span> === to.<span class="property">path</span>.<span class="title function_">substring</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">const</span> menuIdList = result.<span class="title function_">map</span>(<span class="function">(<span class="params">item</span>) =&gt;</span> item.<span class="property">menu_id</span> + <span class="string">&quot;&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (result) &#123;</span><br><span class="line">      <span class="comment">// 根据staff_code 和menu_id获取用户页面访问权限</span></span><br><span class="line">      <span class="keyword">const</span> userMenuAccessList = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(</span><br><span class="line">        <span class="variable language_">window</span>.<span class="property">sessionStorage</span>.<span class="title function_">getItem</span>(<span class="string">&quot;userMenuAccess&quot;</span>)</span><br><span class="line">      );</span><br><span class="line">      <span class="keyword">const</span> res = userMenuAccessList.<span class="title function_">find</span>(<span class="function">(<span class="params">item</span>) =&gt;</span></span><br><span class="line">        menuIdList.<span class="title function_">includes</span>(item.<span class="property">menu_id</span>)</span><br><span class="line">      );</span><br><span class="line">      <span class="keyword">if</span> (res) &#123;</span><br><span class="line">        <span class="title function_">next</span>();</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="title function_">next</span>(<span class="string">&quot;/403&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="title function_">next</span>(<span class="string">&quot;/404&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router;</span><br></pre></td></tr></table></figure>

<h2 id="三、预览组件"><a href="#三、预览组件" class="headerlink" title="三、预览组件"></a>三、预览组件</h2><p>创建路由中对应的预览组件 preview.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;previewContainer&quot;&gt;</span><br><span class="line">    &lt;el-image</span><br><span class="line">      v-if=&quot;fileType === &#x27;jpg&#x27; || fileType === &#x27;png&#x27; || fileType === &#x27;bmp&#x27;&quot;</span><br><span class="line">      :src=&quot;fileURL&quot;</span><br><span class="line">      @error=&quot;errorHandler&quot;</span><br><span class="line">    &gt;&lt;/el-image&gt;</span><br><span class="line">    &lt;vue-office-docx</span><br><span class="line">      v-if=&quot;fileType === &#x27;docx&#x27;&quot;</span><br><span class="line">      :src=&quot;fileURL&quot;</span><br><span class="line">      style=&quot;height: 100vh&quot;</span><br><span class="line">      @error=&quot;errorHandler&quot;</span><br><span class="line">    /&gt;</span><br><span class="line">    &lt;vue-office-excel</span><br><span class="line">      v-if=&quot;fileType === &#x27;xlsx&#x27;&quot;</span><br><span class="line">      :src=&quot;fileURL&quot;</span><br><span class="line">      style=&quot;height: 100vh&quot;</span><br><span class="line">      @error=&quot;errorHandler&quot;</span><br><span class="line">    /&gt;</span><br><span class="line">    &lt;vue-office-pdf</span><br><span class="line">      v-if=&quot;fileType === &#x27;pdf&#x27;&quot;</span><br><span class="line">      :src=&quot;fileURL&quot;</span><br><span class="line">      @error=&quot;errorHandler&quot;</span><br><span class="line">    /&gt;</span><br><span class="line">    &lt;el-button type=&quot;success&quot; round class=&quot;returnBtn&quot; @click=&quot;$router.back()&quot;</span><br><span class="line">      &gt;返回&lt;/el-button</span><br><span class="line">    &gt;</span><br><span class="line">    &lt;el-button</span><br><span class="line">      type=&quot;success&quot;</span><br><span class="line">      round</span><br><span class="line">      class=&quot;downloadBtn&quot;</span><br><span class="line">      @click=&quot;download(appendHandler)&quot;</span><br><span class="line">      &gt;下载&lt;/el-button</span><br><span class="line">    &gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; useRoute &#125; from &quot;vue-router&quot;;</span><br><span class="line">// 引入VueOfficeDocx组件</span><br><span class="line">import VueOfficeDocx from &quot;@vue-office/docx&quot;;</span><br><span class="line">// 引入相关样式</span><br><span class="line">import &quot;@vue-office/docx/lib/index.css&quot;;</span><br><span class="line">// 引入VueOfficeExcel组件</span><br><span class="line">import VueOfficeExcel from &quot;@vue-office/excel&quot;;</span><br><span class="line">// 引入相关样式</span><br><span class="line">import &quot;@vue-office/excel/lib/index.css&quot;;</span><br><span class="line">// 引入VueOfficePdf组件</span><br><span class="line">import VueOfficePdf from &quot;@vue-office/pdf&quot;;</span><br><span class="line">import &#123; ElMessage &#125; from &quot;element-plus&quot;;</span><br><span class="line">import &#123; gdownloadAPI, getDownloadUrlAPI &#125; from &quot;@/api/TaskDetail&quot;;</span><br><span class="line">import &#123; ref, onMounted &#125; from &quot;vue&quot;;</span><br><span class="line">const route = useRoute();</span><br><span class="line">const fileType = route.params.fileType;</span><br><span class="line">const fileURL = ref(null);</span><br><span class="line">const getfileURL = async () =&gt; &#123;</span><br><span class="line">  if (fileType === &quot;jpg&quot; || fileType === &quot;png&quot; || fileType === &quot;bmp&quot;) &#123;</span><br><span class="line">    getDownloadUrlAPI(&#123; fileNameHandler: route.params.appendHandler &#125;).then(</span><br><span class="line">      (res) =&gt; &#123;</span><br><span class="line">        // 通过row.fileName.substring(row.fileName.lastIndexOf(&#x27;.&#x27;) + 1)获取文件的后缀名</span><br><span class="line">        fileURL.value = res.data.fileDownloadUrl;</span><br><span class="line">      &#125;</span><br><span class="line">    );</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    const &#123; data &#125; = await gdownloadAPI(&#123;</span><br><span class="line">      fileNameHandler: route.params.appendHandler,</span><br><span class="line">    &#125;);</span><br><span class="line">    const binaryStr = window.atob(data.fileContent);</span><br><span class="line">    const ab = new ArrayBuffer(binaryStr.length);</span><br><span class="line">    const ia = new Uint8Array(ab);</span><br><span class="line">    for (let i = 0; i &lt; binaryStr.length; i++) &#123;</span><br><span class="line">      ia[i] = binaryStr.charCodeAt(i);</span><br><span class="line">    &#125;</span><br><span class="line">    const blob = new Blob([ia]); // new Blob([res])中不加data就会返回下图中[objece objece]内容（少取一层）</span><br><span class="line"></span><br><span class="line">    const fileReader = new FileReader();</span><br><span class="line">    fileReader.readAsArrayBuffer(blob);</span><br><span class="line">    fileReader.onload = () =&gt; &#123;</span><br><span class="line">      // 将 ArrayBuffer 数据转换为 Base64 字符串</span><br><span class="line">      fileURL.value = fileReader.result;</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">onMounted(() =&gt; &#123;</span><br><span class="line">  getfileURL();</span><br><span class="line">&#125;);</span><br><span class="line">const appendHandler = route.params.appendHandler;</span><br><span class="line">const errorHandler = () =&gt; &#123;</span><br><span class="line">  ElMessage.error(&quot;文件预览失败！&quot;);</span><br><span class="line">&#125;;</span><br><span class="line">const download = async (item) =&gt; &#123;</span><br><span class="line">  try &#123;</span><br><span class="line">    const &#123; data &#125; = await gdownloadAPI(&#123;</span><br><span class="line">      fileNameHandler: item,</span><br><span class="line">    &#125;);</span><br><span class="line">    const binaryStr = window.atob(data.fileContent);</span><br><span class="line">    const ab = new ArrayBuffer(binaryStr.length);</span><br><span class="line">    const ia = new Uint8Array(ab);</span><br><span class="line">    for (let i = 0; i &lt; binaryStr.length; i++) &#123;</span><br><span class="line">      ia[i] = binaryStr.charCodeAt(i);</span><br><span class="line">    &#125;</span><br><span class="line">    const blob = new Blob([ia]); // new Blob([res])中不加data就会返回下图中[objece objece]内容（少取一层）</span><br><span class="line">    const fileName = route.params.filename; // 下载文件名称</span><br><span class="line">    const alink = document.createElement(&quot;a&quot;);</span><br><span class="line">    alink.download = fileName;</span><br><span class="line">    alink.style.display = &quot;none&quot;;</span><br><span class="line">    alink.href = URL.createObjectURL(blob);</span><br><span class="line">    document.body.appendChild(alink);</span><br><span class="line">    alink.click();</span><br><span class="line">    URL.revokeObjectURL(alink.href); // 释放URL 对象</span><br><span class="line">    document.body.removeChild(alink);</span><br><span class="line">    ElMessage.success(&quot;下载成功&quot;);</span><br><span class="line">  &#125; catch &#123;</span><br><span class="line">    ElMessage.error(&quot;下载失败&quot;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style scoped lang=&quot;less&quot;&gt;</span><br><span class="line">.previewContainer &#123;</span><br><span class="line">  margin: 0;</span><br><span class="line">  padding: 0 100px;</span><br><span class="line">  background-color: rgb(14, 14, 14);</span><br><span class="line">  .returnBtn &#123;</span><br><span class="line">    position: fixed;</span><br><span class="line">    bottom: 5px;</span><br><span class="line">    right: 52%;</span><br><span class="line">    opacity: 0.8;</span><br><span class="line">  &#125;</span><br><span class="line">  .downloadBtn &#123;</span><br><span class="line">    position: fixed;</span><br><span class="line">    bottom: 5px;</span><br><span class="line">    right: 47%;</span><br><span class="line">    opacity: 0.8;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<h2 id="四、使用预览功能"><a href="#四、使用预览功能" class="headerlink" title="四、使用预览功能"></a>四、使用预览功能</h2><p>当在其他地方需要预览文件时，跳转到预览组件，并通过路由传递参数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;el-button type=&quot;primary&quot; @click=&quot;preview(scope.$index, scope.row)&quot;</span><br><span class="line">    &gt;预览&lt;/el-button</span><br><span class="line">  &gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">const preview = async (index, row) =&gt; &#123;</span><br><span class="line">  // 跳转之前先通知父组件保存页面的状态数据，这样预览返回的时候可以保持原来的状态</span><br><span class="line">  emit(&quot;saveStateData&quot;);</span><br><span class="line">  router.push(&#123;</span><br><span class="line">    name: &quot;preview&quot;,</span><br><span class="line">    params: &#123;</span><br><span class="line">      fileType: row.filename.substring(row.filename.lastIndexOf(&quot;.&quot;) + 1),</span><br><span class="line">      appendHandler: row.appendHandler,</span><br><span class="line">      filename: row.filename,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p>顺便一提，由于跳转页面之后，原页面的数据丢失，我还将原页面的数据放在了 store 中方便返回时回显。</p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title>打印功能</title>
    <url>/2024/03/13/%E6%89%93%E5%8D%B0%E5%8A%9F%E8%83%BD/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="一、安装"><a href="#一、安装" class="headerlink" title="一、安装"></a>一、安装</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install vue-print-nb --save-dev</span><br></pre></td></tr></table></figure>

<h2 id="二、注册"><a href="#二、注册" class="headerlink" title="二、注册"></a>二、注册</h2><p>在 main.js 中引入并注册</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> print <span class="keyword">from</span> <span class="string">&quot;vue3-print-nb&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&quot;./App.vue&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">createApp</span>(<span class="title class_">App</span>);</span><br><span class="line">app.<span class="title function_">use</span>(print).<span class="title function_">mount</span>(<span class="string">&quot;#app&quot;</span>);</span><br></pre></td></tr></table></figure>

<h2 id="三、组件中使用"><a href="#三、组件中使用" class="headerlink" title="三、组件中使用"></a>三、组件中使用</h2><p>定义一个 printObj 对象，注意局部打印必须在 printObj 对象上配置 id 属性，并将其绑定在需要打印的容器上。打印按钮通过 v-print&#x3D;”printObj”实现打印效果</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=&quot;myPrint&quot;&gt;</span><br><span class="line">    &lt;!-- 流程信息详情 --&gt;</span><br><span class="line">    &lt;el-table :data=&quot;wfData&quot; style=&quot;margin-top: 70px&quot;&gt;</span><br><span class="line">      &lt;el-table-column type=&quot;index&quot; width=&quot;auto&quot; /&gt;</span><br><span class="line">      &lt;el-table-column prop=&quot;node_name&quot; label=&quot;环节名称&quot; width=&quot;auto&quot; /&gt;</span><br><span class="line">      &lt;el-table-column prop=&quot;proc_type&quot; label=&quot;环节类型&quot; width=&quot;auto&quot; /&gt;</span><br><span class="line">      &lt;el-table-column prop=&quot;deal_state&quot; label=&quot;环节状态&quot; /&gt;</span><br><span class="line">      &lt;el-table-column prop=&quot;username&quot; label=&quot;办理人&quot; /&gt;</span><br><span class="line">      &lt;el-table-column prop=&quot;dept&quot; label=&quot;办理人部门&quot; /&gt;</span><br><span class="line">      &lt;el-table-column prop=&quot;action_value&quot; label=&quot;办理意见&quot; /&gt;</span><br><span class="line">      &lt;el-table-column prop=&quot;create_date&quot; label=&quot;创建时间&quot; /&gt;</span><br><span class="line">      &lt;el-table-column prop=&quot;complete_date&quot; label=&quot;完成时间&quot; /&gt;</span><br><span class="line">      &lt;el-table-column prop=&quot;deal_content&quot; label=&quot;审批意见&quot; /&gt;</span><br><span class="line">    &lt;/el-table&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;el-row type=&quot;flex&quot; justify=&quot;center&quot; style=&quot;margin-top: 10px&quot;&gt;</span><br><span class="line">    &lt;el-button v-print=&quot;printObj&quot; type=&quot;primary&quot;&gt;打印&lt;/el-button&gt;</span><br><span class="line">    &lt;el-button @click=&quot;$router.back()&quot;&gt;返回&lt;/el-button&gt;</span><br><span class="line">  &lt;/el-row&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#123; ref, onMounted, defineComponent &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123; useRoute &#125; from &quot;vue-router&quot;;</span><br><span class="line"></span><br><span class="line">export default defineComponent(&#123;</span><br><span class="line">  setup() &#123;</span><br><span class="line">    const route = useRoute();</span><br><span class="line">    const wfData = ref(null);</span><br><span class="line">    const printObj = ref(&#123;</span><br><span class="line">      id: &quot;myPrint&quot;,</span><br><span class="line">    &#125;);</span><br><span class="line">    onMounted(() =&gt; &#123;</span><br><span class="line">      wfData.value = JSON.parse(route.params.wfData);</span><br><span class="line">    &#125;);</span><br><span class="line">    return &#123; detailPage, applyIdValue, rowData, printObj, wfData &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style scoped lang=&quot;less&quot;&gt;&lt;/style&gt;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title>路由复用时页面不刷新显示的解决办法</title>
    <url>/2024/03/13/%E8%B7%AF%E7%94%B1%E5%A4%8D%E7%94%A8%E6%97%B6%E9%A1%B5%E9%9D%A2%E4%B8%8D%E5%88%B7%E6%96%B0%E6%98%BE%E7%A4%BA%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>今天在项目中新增了很多修改功能。需要复用之前的路由</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20240313150329705.png" alt="image-20240313150329705"></p>
<p>这是路由文件，其中的每个路由地址对应着一个菜单栏</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20240313150624228.png" alt="image-20240313150624228"></p>
<p>现在修改功能需要复用新发起的路由，在路由的 query 参数携带相应的参数，方便在修改页面中复显数据</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20240313151115776.png" alt="image-20240313151115776"></p>
<p>但是如果我直接在声明周期函数里获取修改的数据会不生效。原因是当修改和新发起复用同一个路由时，vue 考虑到效率问题，并没有重新销毁再重建组件，它们使用的是同一个组件。这也导致了当我在别的页面点击修改想跳转到修改页面时，我在声明周期函数里写的获取修改数据的代码并不会生效，页面仍是一片空白。这个问题也在小兔鲜项目中遇到过。因此手动 watch 一下</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20240313151854119.png" alt="image-20240313151854119"></p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title>文件导入导出功能</title>
    <url>/2024/03/13/%E6%96%87%E4%BB%B6%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA%E5%8A%9F%E8%83%BD/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="一、安装"><a href="#一、安装" class="headerlink" title="一、安装"></a>一、安装</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install file-saver --save</span><br><span class="line">npm install xlsx --save</span><br></pre></td></tr></table></figure>

<h2 id="二、创建工具函数"><a href="#二、创建工具函数" class="headerlink" title="二、创建工具函数"></a>二、创建工具函数</h2><p>为了使用方便，可以在 src&#x2F;utils 下封装一个工具文件 Export2Excel.js</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* eslint-disable */</span></span><br><span class="line"><span class="keyword">import</span> &#123; saveAs &#125; <span class="keyword">from</span> <span class="string">&quot;file-saver&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> <span class="variable constant_">XLSX</span> <span class="keyword">from</span> <span class="string">&quot;xlsx&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">generateArray</span>(<span class="params">table</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> out = [];</span><br><span class="line">  <span class="keyword">var</span> rows = table.<span class="title function_">querySelectorAll</span>(<span class="string">&quot;tr&quot;</span>);</span><br><span class="line">  <span class="keyword">var</span> ranges = [];</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> R = <span class="number">0</span>; R &lt; rows.<span class="property">length</span>; ++R) &#123;</span><br><span class="line">    <span class="keyword">var</span> outRow = [];</span><br><span class="line">    <span class="keyword">var</span> row = rows[R];</span><br><span class="line">    <span class="keyword">var</span> columns = row.<span class="title function_">querySelectorAll</span>(<span class="string">&quot;td&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> C = <span class="number">0</span>; C &lt; columns.<span class="property">length</span>; ++C) &#123;</span><br><span class="line">      <span class="keyword">var</span> cell = columns[C];</span><br><span class="line">      <span class="keyword">var</span> colspan = cell.<span class="title function_">getAttribute</span>(<span class="string">&quot;colspan&quot;</span>);</span><br><span class="line">      <span class="keyword">var</span> rowspan = cell.<span class="title function_">getAttribute</span>(<span class="string">&quot;rowspan&quot;</span>);</span><br><span class="line">      <span class="keyword">var</span> cellValue = cell.<span class="property">innerText</span>;</span><br><span class="line">      <span class="keyword">if</span> (cellValue !== <span class="string">&quot;&quot;</span> &amp;&amp; cellValue == +cellValue) cellValue = +cellValue;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//Skip ranges</span></span><br><span class="line">      ranges.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">range</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (</span><br><span class="line">          R &gt;= range.<span class="property">s</span>.<span class="property">r</span> &amp;&amp;</span><br><span class="line">          R &lt;= range.<span class="property">e</span>.<span class="property">r</span> &amp;&amp;</span><br><span class="line">          outRow.<span class="property">length</span> &gt;= range.<span class="property">s</span>.<span class="property">c</span> &amp;&amp;</span><br><span class="line">          outRow.<span class="property">length</span> &lt;= range.<span class="property">e</span>.<span class="property">c</span></span><br><span class="line">        ) &#123;</span><br><span class="line">          <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt;= range.<span class="property">e</span>.<span class="property">c</span> - range.<span class="property">s</span>.<span class="property">c</span>; ++i) outRow.<span class="title function_">push</span>(<span class="literal">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      <span class="comment">//Handle Row Span</span></span><br><span class="line">      <span class="keyword">if</span> (rowspan || colspan) &#123;</span><br><span class="line">        rowspan = rowspan || <span class="number">1</span>;</span><br><span class="line">        colspan = colspan || <span class="number">1</span>;</span><br><span class="line">        ranges.<span class="title function_">push</span>(&#123;</span><br><span class="line">          <span class="attr">s</span>: &#123;</span><br><span class="line">            <span class="attr">r</span>: R,</span><br><span class="line">            <span class="attr">c</span>: outRow.<span class="property">length</span>,</span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">e</span>: &#123;</span><br><span class="line">            <span class="attr">r</span>: R + rowspan - <span class="number">1</span>,</span><br><span class="line">            <span class="attr">c</span>: outRow.<span class="property">length</span> + colspan - <span class="number">1</span>,</span><br><span class="line">          &#125;,</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//Handle Value</span></span><br><span class="line">      outRow.<span class="title function_">push</span>(cellValue !== <span class="string">&quot;&quot;</span> ? cellValue : <span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">//Handle Colspan</span></span><br><span class="line">      <span class="keyword">if</span> (colspan) <span class="keyword">for</span> (<span class="keyword">var</span> k = <span class="number">0</span>; k &lt; colspan - <span class="number">1</span>; ++k) outRow.<span class="title function_">push</span>(<span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    out.<span class="title function_">push</span>(outRow);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> [out, ranges];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">datenum</span>(<span class="params">v, date1904</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (date1904) v += <span class="number">1462</span>;</span><br><span class="line">  <span class="keyword">var</span> epoch = <span class="title class_">Date</span>.<span class="title function_">parse</span>(v);</span><br><span class="line">  <span class="keyword">return</span> (epoch - <span class="keyword">new</span> <span class="title class_">Date</span>(<span class="title class_">Date</span>.<span class="title function_">UTC</span>(<span class="number">1899</span>, <span class="number">11</span>, <span class="number">30</span>))) / (<span class="number">24</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">sheet_from_array_of_arrays</span>(<span class="params">data, opts</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> ws = &#123;&#125;;</span><br><span class="line">  <span class="keyword">var</span> range = &#123;</span><br><span class="line">    <span class="attr">s</span>: &#123;</span><br><span class="line">      <span class="attr">c</span>: <span class="number">10000000</span>,</span><br><span class="line">      <span class="attr">r</span>: <span class="number">10000000</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">e</span>: &#123;</span><br><span class="line">      <span class="attr">c</span>: <span class="number">0</span>,</span><br><span class="line">      <span class="attr">r</span>: <span class="number">0</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> R = <span class="number">0</span>; R != data.<span class="property">length</span>; ++R) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> C = <span class="number">0</span>; C != data[R].<span class="property">length</span>; ++C) &#123;</span><br><span class="line">      <span class="keyword">if</span> (range.<span class="property">s</span>.<span class="property">r</span> &gt; R) range.<span class="property">s</span>.<span class="property">r</span> = R;</span><br><span class="line">      <span class="keyword">if</span> (range.<span class="property">s</span>.<span class="property">c</span> &gt; C) range.<span class="property">s</span>.<span class="property">c</span> = C;</span><br><span class="line">      <span class="keyword">if</span> (range.<span class="property">e</span>.<span class="property">r</span> &lt; R) range.<span class="property">e</span>.<span class="property">r</span> = R;</span><br><span class="line">      <span class="keyword">if</span> (range.<span class="property">e</span>.<span class="property">c</span> &lt; C) range.<span class="property">e</span>.<span class="property">c</span> = C;</span><br><span class="line">      <span class="keyword">var</span> cell = &#123;</span><br><span class="line">        <span class="attr">v</span>: data[R][C],</span><br><span class="line">      &#125;;</span><br><span class="line">      <span class="keyword">if</span> (cell.<span class="property">v</span> == <span class="literal">null</span>) <span class="keyword">continue</span>;</span><br><span class="line">      <span class="keyword">var</span> cell_ref = <span class="variable constant_">XLSX</span>.<span class="property">utils</span>.<span class="title function_">encode_cell</span>(&#123;</span><br><span class="line">        <span class="attr">c</span>: C,</span><br><span class="line">        <span class="attr">r</span>: R,</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">typeof</span> cell.<span class="property">v</span> === <span class="string">&quot;number&quot;</span>) cell.<span class="property">t</span> = <span class="string">&quot;n&quot;</span>;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">typeof</span> cell.<span class="property">v</span> === <span class="string">&quot;boolean&quot;</span>) cell.<span class="property">t</span> = <span class="string">&quot;b&quot;</span>;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span> (cell.<span class="property">v</span> <span class="keyword">instanceof</span> <span class="title class_">Date</span>) &#123;</span><br><span class="line">        cell.<span class="property">t</span> = <span class="string">&quot;n&quot;</span>;</span><br><span class="line">        cell.<span class="property">z</span> = <span class="variable constant_">XLSX</span>.<span class="property">SSF</span>.<span class="property">_table</span>[<span class="number">14</span>];</span><br><span class="line">        cell.<span class="property">v</span> = <span class="title function_">datenum</span>(cell.<span class="property">v</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> cell.<span class="property">t</span> = <span class="string">&quot;s&quot;</span>;</span><br><span class="line"></span><br><span class="line">      ws[cell_ref] = cell;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (range.<span class="property">s</span>.<span class="property">c</span> &lt; <span class="number">10000000</span>) ws[<span class="string">&quot;!ref&quot;</span>] = <span class="variable constant_">XLSX</span>.<span class="property">utils</span>.<span class="title function_">encode_range</span>(range);</span><br><span class="line">  <span class="keyword">return</span> ws;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Workbook</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (!(<span class="variable language_">this</span> <span class="keyword">instanceof</span> <span class="title class_">Workbook</span>)) <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Workbook</span>();</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">SheetNames</span> = [];</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">Sheets</span> = &#123;&#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">s2ab</span>(<span class="params">s</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> buf = <span class="keyword">new</span> <span class="title class_">ArrayBuffer</span>(s.<span class="property">length</span>);</span><br><span class="line">  <span class="keyword">var</span> view = <span class="keyword">new</span> <span class="title class_">Uint8Array</span>(buf);</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i != s.<span class="property">length</span>; ++i) view[i] = s.<span class="title function_">charCodeAt</span>(i) &amp; <span class="number">0xff</span>;</span><br><span class="line">  <span class="keyword">return</span> buf;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">export_table_to_excel</span>(<span class="params">id</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> theTable = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(id);</span><br><span class="line">  <span class="keyword">var</span> oo = <span class="title function_">generateArray</span>(theTable);</span><br><span class="line">  <span class="keyword">var</span> ranges = oo[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* original data */</span></span><br><span class="line">  <span class="keyword">var</span> data = oo[<span class="number">0</span>];</span><br><span class="line">  <span class="keyword">var</span> ws_name = <span class="string">&quot;SheetJS&quot;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> wb = <span class="keyword">new</span> <span class="title class_">Workbook</span>(),</span><br><span class="line">    ws = <span class="title function_">sheet_from_array_of_arrays</span>(data);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* add ranges to worksheet */</span></span><br><span class="line">  <span class="comment">// ws[&#x27;!cols&#x27;] = [&#x27;apple&#x27;, &#x27;banan&#x27;];</span></span><br><span class="line">  ws[<span class="string">&quot;!merges&quot;</span>] = ranges;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* add worksheet to workbook */</span></span><br><span class="line">  wb.<span class="property">SheetNames</span>.<span class="title function_">push</span>(ws_name);</span><br><span class="line">  wb.<span class="property">Sheets</span>[ws_name] = ws;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> wbout = <span class="variable constant_">XLSX</span>.<span class="title function_">write</span>(wb, &#123;</span><br><span class="line">    <span class="attr">bookType</span>: <span class="string">&quot;xlsx&quot;</span>,</span><br><span class="line">    <span class="attr">bookSST</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">type</span>: <span class="string">&quot;binary&quot;</span>,</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="title function_">saveAs</span>(</span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">Blob</span>([<span class="title function_">s2ab</span>(wbout)], &#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="string">&quot;application/octet-stream&quot;</span>,</span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="string">&quot;test.xlsx&quot;</span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">export_json_to_excel</span>(<span class="params">&#123;</span></span><br><span class="line"><span class="params">  multiHeader = [],</span></span><br><span class="line"><span class="params">  header,</span></span><br><span class="line"><span class="params">  data,</span></span><br><span class="line"><span class="params">  filename,</span></span><br><span class="line"><span class="params">  merges = [],</span></span><br><span class="line"><span class="params">  autoWidth = <span class="literal">true</span>,</span></span><br><span class="line"><span class="params">  bookType = <span class="string">&quot;xlsx&quot;</span>,</span></span><br><span class="line"><span class="params">&#125; = &#123;&#125;</span>) &#123;</span><br><span class="line">  <span class="comment">/* original data */</span></span><br><span class="line">  filename = filename || <span class="string">&quot;excel-list&quot;</span>;</span><br><span class="line">  data = [...data];</span><br><span class="line">  data.<span class="title function_">unshift</span>(header);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = multiHeader.<span class="property">length</span> - <span class="number">1</span>; i &gt; -<span class="number">1</span>; i--) &#123;</span><br><span class="line">    data.<span class="title function_">unshift</span>(multiHeader[i]);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> ws_name = <span class="string">&quot;SheetJS&quot;</span>;</span><br><span class="line">  <span class="keyword">var</span> wb = <span class="keyword">new</span> <span class="title class_">Workbook</span>(),</span><br><span class="line">    ws = <span class="title function_">sheet_from_array_of_arrays</span>(data);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (merges.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!ws[<span class="string">&quot;!merges&quot;</span>]) ws[<span class="string">&quot;!merges&quot;</span>] = [];</span><br><span class="line">    merges.<span class="title function_">forEach</span>(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span><br><span class="line">      ws[<span class="string">&quot;!merges&quot;</span>].<span class="title function_">push</span>(<span class="variable constant_">XLSX</span>.<span class="property">utils</span>.<span class="title function_">decode_range</span>(item));</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (autoWidth) &#123;</span><br><span class="line">    <span class="comment">/*设置worksheet每列的最大宽度*/</span></span><br><span class="line">    <span class="keyword">const</span> colWidth = data.<span class="title function_">map</span>(<span class="function">(<span class="params">row</span>) =&gt;</span></span><br><span class="line">      row.<span class="title function_">map</span>(<span class="function">(<span class="params">val</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">/*先判断是否为null/undefined*/</span></span><br><span class="line">        <span class="keyword">if</span> (val == <span class="literal">null</span>) &#123;</span><br><span class="line">          <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="attr">wch</span>: <span class="number">10</span>,</span><br><span class="line">          &#125;;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (val.<span class="title function_">toString</span>().<span class="title function_">charCodeAt</span>(<span class="number">0</span>) &gt; <span class="number">255</span>) &#123;</span><br><span class="line">          <span class="comment">/*再判断是否为中文*/</span></span><br><span class="line">          <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="attr">wch</span>: val.<span class="title function_">toString</span>().<span class="property">length</span> * <span class="number">2</span>,</span><br><span class="line">          &#125;;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="attr">wch</span>: val.<span class="title function_">toString</span>().<span class="property">length</span>,</span><br><span class="line">          &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    );</span><br><span class="line">    <span class="comment">/*以第一行为初始值*/</span></span><br><span class="line">    <span class="keyword">let</span> result = colWidth[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt; colWidth.<span class="property">length</span>; i++) &#123;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; colWidth[i].<span class="property">length</span>; j++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (result[j][<span class="string">&quot;wch&quot;</span>] &lt; colWidth[i][j][<span class="string">&quot;wch&quot;</span>]) &#123;</span><br><span class="line">          result[j][<span class="string">&quot;wch&quot;</span>] = colWidth[i][j][<span class="string">&quot;wch&quot;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ws[<span class="string">&quot;!cols&quot;</span>] = result;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* add worksheet to workbook */</span></span><br><span class="line">  wb.<span class="property">SheetNames</span>.<span class="title function_">push</span>(ws_name);</span><br><span class="line">  wb.<span class="property">Sheets</span>[ws_name] = ws;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> wbout = <span class="variable constant_">XLSX</span>.<span class="title function_">write</span>(wb, &#123;</span><br><span class="line">    <span class="attr">bookType</span>: bookType,</span><br><span class="line">    <span class="attr">bookSST</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">type</span>: <span class="string">&quot;binary&quot;</span>,</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="title function_">saveAs</span>(</span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">Blob</span>([<span class="title function_">s2ab</span>(wbout)], &#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="string">&quot;application/octet-stream&quot;</span>,</span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="string">`<span class="subst">$&#123;filename&#125;</span>.<span class="subst">$&#123;bookType&#125;</span>`</span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="三、导出功能"><a href="#三、导出功能" class="headerlink" title="三、导出功能"></a>三、导出功能</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;el-button type=&quot;primary&quot; @click=&quot;exportTable&quot;&gt;导出&lt;/el-button&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">// 导出功能</span><br><span class="line">// 用户菜单表头与数据字段对应关系</span><br><span class="line">const userMenuHeader = &#123;</span><br><span class="line">  流程模板: &quot;wf_type_name&quot;,</span><br><span class="line">  审批编号: &quot;apply_id&quot;,</span><br><span class="line">  发起人: &quot;staff_name&quot;,</span><br><span class="line">  审批流程标题: &quot;apply_title&quot;,</span><br><span class="line">  审批金额: &quot;apply_fee&quot;,</span><br><span class="line">  发起时间: &quot;create_date&quot;,</span><br><span class="line">  流程状态: &quot;proc_state_name&quot;,</span><br><span class="line">  当前环节: &quot;node_name&quot;,</span><br><span class="line">  处理人: &quot;username&quot;,</span><br><span class="line">&#125;;</span><br><span class="line">const exportTable = () =&gt; &#123;</span><br><span class="line">  //  做操作</span><br><span class="line">  const excelData = [];</span><br><span class="line">  // 这里后端返回的数据不能直接用作excel的data，不然浏览器会卡死，必须先将数据转化为表格需要的[[]]的形式</span><br><span class="line">  tableData.value.forEach((item) =&gt; &#123;</span><br><span class="line">    const arr = [];</span><br><span class="line">    for (const key in userMenuHeader) &#123;</span><br><span class="line">      arr.push(item[userMenuHeader[key]]);</span><br><span class="line">    &#125;</span><br><span class="line">    excelData.push(arr);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  // 懒加载</span><br><span class="line">  try &#123;</span><br><span class="line">    import(&quot;@/utils/Export2Excel&quot;).then(async (excel) =&gt; &#123;</span><br><span class="line">      excel.export_json_to_excel(&#123;</span><br><span class="line">        header: Object.keys(userMenuHeader),</span><br><span class="line">        data: excelData,</span><br><span class="line">        filename: &quot;费用冲调审批流程查询清单&quot;,</span><br><span class="line">        autoWidth: true,</span><br><span class="line">        bookType: &quot;xlsx&quot;,</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125; catch &#123;</span><br><span class="line">    ElMessage.error(&quot;导出失败，请重试！&quot;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<h2 id="四、导入功能"><a href="#四、导入功能" class="headerlink" title="四、导入功能"></a>四、导入功能</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;el-upload</span><br><span class="line">    ref=&quot;uploadRef&quot;</span><br><span class="line">    class=&quot;upload-demo&quot;</span><br><span class="line">    v-model:file-list=&quot;accList&quot;</span><br><span class="line">    :on-remove=&quot;handleRemove&quot;</span><br><span class="line">    :on-change=&quot;handleChangeBusiness&quot;</span><br><span class="line">    :http-request=&quot;upload&quot;</span><br><span class="line">    action=&quot;#&quot;</span><br><span class="line">    :auto-upload=&quot;false&quot;</span><br><span class="line">    style=&quot;display: flex; margin-bottom: 10px&quot;</span><br><span class="line">  &gt;</span><br><span class="line">    &lt;template #trigger&gt;</span><br><span class="line">      &lt;el-button type=&quot;primary&quot; :icon=&quot;Document&quot; style=&quot;margin-right: 150px&quot;</span><br><span class="line">        &gt;选择文件&lt;/el-button</span><br><span class="line">      &gt;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">    &lt;template #tip v-if=&quot;!accList.length&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;el-upload__tip&quot; style=&quot;margin: 10px 0 0 -445px&quot;&gt;</span><br><span class="line">        未选择任何文件</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">    &lt;el-button</span><br><span class="line">      class=&quot;ml-3&quot;</span><br><span class="line">      :icon=&quot;Upload&quot;</span><br><span class="line">      type=&quot;success&quot;</span><br><span class="line">      @click=&quot;getServByAccNbrImport&quot;</span><br><span class="line">      style=&quot;margin-top: 2px&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      批量导入费用争议数据</span><br><span class="line">    &lt;/el-button&gt;</span><br><span class="line">    &lt;el-button type=&quot;primary&quot; :icon=&quot;Download&quot;</span><br><span class="line">      &gt;&lt;el-link href=&quot;/approve/static/费用争议导入模板.xls&quot;</span><br><span class="line">        &gt;下载附件模板&lt;/el-link</span><br><span class="line">      &gt;&lt;/el-button</span><br><span class="line">    &gt;</span><br><span class="line">  &lt;/el-upload&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">// 批量上传</span><br><span class="line">// 上传的文件</span><br><span class="line">const accList = ref([]);</span><br><span class="line">const businessFileList = ref([]);</span><br><span class="line">const accountDetailList = ref([]); // 这是账期明细</span><br><span class="line">// 进出物品对应关系</span><br><span class="line">const businessRelation = &#123;</span><br><span class="line">  0: &quot;bz&quot;,</span><br><span class="line">  1: &quot;phone_number&quot;,</span><br><span class="line">  2: &quot;spje&quot;,</span><br><span class="line">  3: &quot;serv_id&quot;,</span><br><span class="line">  4: &quot;acct_id&quot;,</span><br><span class="line">  5: &quot;cust_name&quot;,</span><br><span class="line">  6: &quot;acct_name&quot;,</span><br><span class="line">  7: &quot;sqr&quot;,</span><br><span class="line">  8: &quot;sqrdh&quot;,</span><br><span class="line">  9: &quot;sqyy&quot;,</span><br><span class="line">  10: &quot;sqyy_name&quot;,</span><br><span class="line">  11: &quot;oper_type&quot;,</span><br><span class="line">  12: &quot;oper_type_name&quot;,</span><br><span class="line">  13: &quot;ctlx_id&quot;,</span><br><span class="line">  14: &quot;ctlx&quot;,</span><br><span class="line">  15: &quot;phone_local&quot;,</span><br><span class="line">&#125;;</span><br><span class="line">const accountDetailRelation = &#123;</span><br><span class="line">  0: &quot;phone_number&quot;,</span><br><span class="line">  1: &quot;fee_month&quot;,</span><br><span class="line">  2: &quot;charge&quot;,</span><br><span class="line">  3: &quot;fee_acct_type&quot;,</span><br><span class="line">  4: &quot;fee_acct_type_name&quot;,</span><br><span class="line">&#125;;</span><br><span class="line">const handleChangeBusiness = (file) =&gt; &#123;</span><br><span class="line">  const reader = new FileReader();</span><br><span class="line">  reader.onload = async (e) =&gt; &#123;</span><br><span class="line">    const data = e.target.result;</span><br><span class="line">    const workbook = XLSX.read(data, &#123; type: &quot;array&quot; &#125;);</span><br><span class="line">    const sheetName = workbook.SheetNames[0];</span><br><span class="line">    const worksheet = workbook.Sheets[sheetName];</span><br><span class="line">    const json = XLSX.utils.sheet_to_json(worksheet, &#123; header: 1 &#125;);</span><br><span class="line">    json.forEach((item) =&gt; &#123;</span><br><span class="line">      const obj = &#123;&#125;;</span><br><span class="line">      for (const key in businessRelation) &#123;</span><br><span class="line">        obj[businessRelation[key]] = item[key];</span><br><span class="line">      &#125;</span><br><span class="line">      businessFileList.value.push(obj);</span><br><span class="line">    &#125;);</span><br><span class="line">    // 对businessFileList去重</span><br><span class="line">    businessFileList.value = [...new Set(businessFileList.value)];</span><br><span class="line">    // 把这个数据传给后端，获取到后端返回的数据，渲染列表</span><br><span class="line">    // 因为表格中可能会有空白的数据，上传上来的数据就会有undefined，所以要过滤掉</span><br><span class="line">    businessFileList.value = businessFileList.value.filter((item) =&gt; item);</span><br><span class="line">    // 因为批量上传的没有acc_nbr，所以要把phone_number赋值给acc_nbr</span><br><span class="line">    businessFileList.value.forEach((item) =&gt; &#123;</span><br><span class="line">      item.acc_nbr = item.phone_number;</span><br><span class="line">    &#125;);</span><br><span class="line">    const sheetName1 = workbook.SheetNames[1];</span><br><span class="line">    const worksheet1 = workbook.Sheets[sheetName1];</span><br><span class="line">    const json1 = XLSX.utils.sheet_to_json(worksheet1, &#123; header: 1 &#125;);</span><br><span class="line">    json1.forEach((item) =&gt; &#123;</span><br><span class="line">      const obj = &#123;&#125;;</span><br><span class="line">      for (const key in accountDetailRelation) &#123;</span><br><span class="line">        obj[accountDetailRelation[key]] = item[key];</span><br><span class="line">      &#125;</span><br><span class="line">      accountDetailList.value.push(obj);</span><br><span class="line">    &#125;);</span><br><span class="line">    // 对accountDetailList去重</span><br><span class="line">    accountDetailList.value = [...new Set(accountDetailList.value)];</span><br><span class="line">    accountDetailList.value = accountDetailList.value.filter((item) =&gt; item);</span><br><span class="line">    // 将accountDetailList与businessFileList关联</span><br><span class="line">    businessFileList.value.forEach((item) =&gt; &#123;</span><br><span class="line">      item.fee_list_month = accountDetailList.value.filter((item2) =&gt; &#123;</span><br><span class="line">        return item.phone_number === item2.phone_number;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  reader.readAsArrayBuffer(file.raw);</span><br><span class="line">&#125;;</span><br><span class="line">const getServByAccNbrImport = async () =&gt; &#123;</span><br><span class="line">  if (businessFileList.value.length === 0) &#123;</span><br><span class="line">    ElMessage.error(&quot;请先选择文件&quot;);</span><br><span class="line">    return;</span><br><span class="line">  &#125;</span><br><span class="line">  if (businessFileList.value.length &gt; 2000) &#123;</span><br><span class="line">    ElMessage.error(</span><br><span class="line">      &quot;上传的数据超过2000条，可能会导致查询时间过长，请分批次上传！&quot;</span><br><span class="line">    );</span><br><span class="line">    return;</span><br><span class="line">  &#125;</span><br><span class="line">  applyForm.feeListData = businessFileList.value;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p>最终的效果是这样的：可以看到，每一行数据下面关联了一个子表</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20240313093547041.png" alt="image-20240313093547041"></p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title>一个简单的后台管理类项目</title>
    <url>/2023/09/12/%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E7%B1%BB%E9%A1%B9%E7%9B%AE/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="一、项目概述"><a href="#一、项目概述" class="headerlink" title="一、项目概述"></a>一、项目概述</h2><p>这是一个专门用于运营商后台发起靓号审批申请的项目。技术选型：vue3+elementplus+vite+vue-router+pinia.</p>
<p>用到的插件主要有：</p>
<ul>
<li>axios 请求后台数据</li>
<li>crypto-js 加解密</li>
<li>dayjs 日期处理</li>
<li>nanoid 生成 id</li>
<li>vue3-print-nb 打印文件插件</li>
<li>xlsx 处理 excel 文件</li>
<li>pinia-plugin-persistedstate 配合 pinia 实现数据持久化</li>
</ul>
<h2 id="二、工具文件夹"><a href="#二、工具文件夹" class="headerlink" title="二、工具文件夹"></a>二、工具文件夹</h2><h3 id="1-crypto-js-加解密"><a href="#1-crypto-js-加解密" class="headerlink" title="1.crypto-js 加解密"></a>1.crypto-js 加解密</h3><p>因为在实际上线后，本项目主要是从另外一个项目跳转登录，在跳转时携带了用户身份标识的参数。而这个参数不能使用明文传递，因此使用 crypto-js 进行了加密，在跳转到本项目后使用 crypto-js 将加密的参数解密处理进行用户身份认证，继而实现登录。在 src&#x2F;utils 下新建 encipher.js 文件。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">CryptoJS</span> <span class="keyword">from</span> <span class="string">&quot;crypto-js&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 加密</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">encrypt</span>(<span class="params">message = <span class="string">&quot;&quot;</span>, key = <span class="string">&quot;&quot;</span></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> srcs = <span class="title class_">CryptoJS</span>.<span class="property">enc</span>.<span class="property">Utf8</span>.<span class="title function_">parse</span>(message);</span><br><span class="line">  <span class="keyword">const</span> encrypted = <span class="title class_">CryptoJS</span>.<span class="property">AES</span>.<span class="title function_">encrypt</span>(srcs, key);</span><br><span class="line">  <span class="keyword">return</span> encrypted.<span class="title function_">toString</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 解密</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">decrypt</span>(<span class="params">encrypted = <span class="string">&quot;&quot;</span>, key = <span class="string">&quot;&quot;</span></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> decrypt = <span class="title class_">CryptoJS</span>.<span class="property">AES</span>.<span class="title function_">decrypt</span>(encrypted, key);</span><br><span class="line">  <span class="keyword">const</span> decrypted = <span class="title class_">CryptoJS</span>.<span class="property">enc</span>.<span class="property">Utf8</span>.<span class="title function_">stringify</span>(decrypt).<span class="title function_">toString</span>();</span><br><span class="line">  <span class="keyword">return</span> decrypted;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-request-js-封装-axios"><a href="#2-request-js-封装-axios" class="headerlink" title="2.request.js 封装 axios"></a>2.request.js 封装 axios</h3><p>在 src&#x2F;utils 下新建 encipher.js 文件。</p>
<p>因为项目的网络请求调用了多个地方的接口，可以看到我这里封装了多个 request 实例</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 封装 axios 请求模块</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&quot;axios&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useUserInfoStore &#125; <span class="keyword">from</span> <span class="string">&quot;@/store/useUserInfoStore&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; toRefs &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> request = axios.<span class="title function_">create</span>(&#123;</span><br><span class="line">  <span class="attr">baseURL</span>: <span class="string">&quot;http://133.0.109.121:31455&quot;</span>, <span class="comment">// 上云data地址</span></span><br><span class="line">  <span class="comment">// baseURL: &#x27;http://192.168.137.63:8081&#x27;, // 后端测试地址</span></span><br><span class="line">  <span class="comment">// baseURL: &#x27;http://localhost:8081&#x27;, // 本机测试</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">timeout</span>: <span class="number">5000</span>, <span class="comment">// 单位毫秒</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> requestExpress = axios.<span class="title function_">create</span>(&#123;</span><br><span class="line">  <span class="attr">baseURL</span>: <span class="string">&quot;http://133.0.109.121:31456&quot;</span>, <span class="comment">// 上云express地址</span></span><br><span class="line">  <span class="attr">timeout</span>: <span class="number">5000</span>, <span class="comment">// 单位毫秒</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> requestCRM = axios.<span class="title function_">create</span>(&#123;</span><br><span class="line">  <span class="attr">baseURL</span>: <span class="string">&quot;http://133.0.109.121:31896&quot;</span>, <span class="comment">// CRM地址</span></span><br><span class="line">  <span class="comment">// baseURL: &#x27;http://localhost:8085&#x27;,</span></span><br><span class="line">  <span class="attr">timeout</span>: <span class="number">5000</span>, <span class="comment">// 单位毫秒</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 请求拦截器，统一注入token</span></span><br><span class="line">request.<span class="property">interceptors</span>.<span class="property">request</span>.<span class="title function_">use</span>(<span class="function">(<span class="params">config</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; userInfo &#125; = <span class="title function_">toRefs</span>(<span class="title function_">useUserInfoStore</span>());</span><br><span class="line">  <span class="keyword">if</span> (userInfo.<span class="property">value</span>.<span class="property">staffCode</span>) &#123;</span><br><span class="line">    config.<span class="property">headers</span>.<span class="property">Authorization</span> = userInfo.<span class="property">value</span>.<span class="property">staffCode</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 在最后必须 return config</span></span><br><span class="line">  <span class="keyword">return</span> config;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 响应拦截器，剥离一层data数据</span></span><br><span class="line">request.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">//统一解决后端返回的错误信息</span></span><br><span class="line">  <span class="keyword">if</span> (res.<span class="property">data</span>.<span class="property">code</span> !== <span class="number">200</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(res.<span class="property">data</span>.<span class="property">message</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> res.<span class="property">data</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h2 id="三、路由配置"><a href="#三、路由配置" class="headerlink" title="三、路由配置"></a>三、路由配置</h2><p>在 src&#x2F;router 下新建 index.js 文件</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createRouter, createWebHashHistory &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useUserInfoStore &#125; <span class="keyword">from</span> <span class="string">&quot;@/store/useUserInfoStore&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Home</span> <span class="keyword">from</span> <span class="string">&quot;../views/home.vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; toRefs &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; loginAPI &#125; <span class="keyword">from</span> <span class="string">&quot;@/api/login&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ElMessage</span> &#125; <span class="keyword">from</span> <span class="string">&quot;element-plus&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; decrypt &#125; <span class="keyword">from</span> <span class="string">&quot;@/utils/encipher&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> routes = [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&quot;/&quot;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;Home&quot;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="title class_">Home</span>,</span><br><span class="line">    <span class="attr">redirect</span>: <span class="string">&quot;/NumberApplication&quot;</span>,</span><br><span class="line">    <span class="attr">children</span>: [</span><br><span class="line">      <span class="comment">// &#123;</span></span><br><span class="line">      <span class="comment">//   path: &#x27;&#x27;,</span></span><br><span class="line">      <span class="comment">//   name: &#x27;dashboard&#x27;,</span></span><br><span class="line">      <span class="comment">//   hidden: true,</span></span><br><span class="line">      <span class="comment">//   meta: &#123;</span></span><br><span class="line">      <span class="comment">//     title: &#x27;系统首页&#x27;,</span></span><br><span class="line">      <span class="comment">//     permiss: &#x27;1&#x27;</span></span><br><span class="line">      <span class="comment">//   &#125;,</span></span><br><span class="line">      <span class="comment">//   component: () =&gt;</span></span><br><span class="line">      <span class="comment">//     import(/* webpackChunkName: &quot;dashboard&quot; */ &#x27;../views/dashboard.vue&#x27;)</span></span><br><span class="line">      <span class="comment">// &#125;,</span></span><br><span class="line">      <span class="comment">//靓号申请（发起申请页）</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&quot;NumberApplication&quot;</span>,</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&quot;NumberApplication&quot;</span>,</span><br><span class="line">        <span class="attr">meta</span>: &#123;</span><br><span class="line">          <span class="attr">title</span>: <span class="string">&quot;靓号申请&quot;</span>,</span><br><span class="line">          <span class="attr">permiss</span>: <span class="string">&quot;2&quot;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/NumberApplication/index.vue&quot;</span>),</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">//靓号申请(填写表单页)</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&quot;NumberApplication2&quot;</span>,</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&quot;NumberApplication2&quot;</span>,</span><br><span class="line">        <span class="attr">meta</span>: &#123;</span><br><span class="line">          <span class="attr">title</span>: <span class="string">&quot;填写申请表单&quot;</span>,</span><br><span class="line">          <span class="attr">permiss</span>: <span class="string">&quot;3&quot;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/NumberApplication2/index.vue&quot;</span>),</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">//靓号申请3(指定号码)</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&quot;NumberApplication3&quot;</span>,</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&quot;NumberApplication3&quot;</span>,</span><br><span class="line">        <span class="attr">meta</span>: &#123;</span><br><span class="line">          <span class="attr">title</span>: <span class="string">&quot;查询指定号码&quot;</span>,</span><br><span class="line">          <span class="attr">permiss</span>: <span class="string">&quot;4&quot;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/NumberApplication3/index.vue&quot;</span>),</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">//靓号申请4（不指定号码）</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&quot;NumberApplication4&quot;</span>,</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&quot;NumberApplication4&quot;</span>,</span><br><span class="line">        <span class="attr">meta</span>: &#123;</span><br><span class="line">          <span class="attr">title</span>: <span class="string">&quot;不指定号码查询&quot;</span>,</span><br><span class="line">          <span class="attr">permiss</span>: <span class="string">&quot;5&quot;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/NumberApplication4/index.vue&quot;</span>),</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">//虚拟成本管理</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&quot;VirtualCost&quot;</span>,</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&quot;VirtualCost&quot;</span>,</span><br><span class="line">        <span class="attr">meta</span>: &#123;</span><br><span class="line">          <span class="attr">title</span>: <span class="string">&quot;虚拟成本管理&quot;</span>,</span><br><span class="line">          <span class="attr">permiss</span>: <span class="string">&quot;999&quot;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/VirtualCost.vue&quot;</span>),</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">//用户权限管理</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&quot;UserAccessConfig&quot;</span>,</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&quot;UserAccessConfig&quot;</span>,</span><br><span class="line">        <span class="attr">meta</span>: &#123;</span><br><span class="line">          <span class="attr">title</span>: <span class="string">&quot;用户访问权限管理&quot;</span>,</span><br><span class="line">          <span class="attr">permiss</span>: <span class="string">&quot;999&quot;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/UserAccessConfig.vue&quot;</span>),</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">//客户类型管理</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&quot;CustomerTypeConfig&quot;</span>,</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&quot;CustomerTypeConfig&quot;</span>,</span><br><span class="line">        <span class="attr">meta</span>: &#123;</span><br><span class="line">          <span class="attr">title</span>: <span class="string">&quot;客户类型管理&quot;</span>,</span><br><span class="line">          <span class="attr">permiss</span>: <span class="string">&quot;999&quot;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/CustomerTypeConfig.vue&quot;</span>),</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">//补充号码等级</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&quot;AddNumberLevel&quot;</span>,</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&quot;AddNumberLevel&quot;</span>,</span><br><span class="line">        <span class="attr">meta</span>: &#123;</span><br><span class="line">          <span class="attr">title</span>: <span class="string">&quot;补充号码等级&quot;</span>,</span><br><span class="line">          <span class="attr">permiss</span>: <span class="string">&quot;999&quot;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/AddNumberLevel.vue&quot;</span>),</span><br><span class="line">      &#125;,</span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&quot;/login&quot;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;Login&quot;</span>,</span><br><span class="line">    <span class="attr">meta</span>: &#123;</span><br><span class="line">      <span class="attr">title</span>: <span class="string">&quot;登录&quot;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">component</span>: <span class="function">() =&gt;</span></span><br><span class="line">      <span class="keyword">import</span>(<span class="comment">/* webpackChunkName: &quot;login&quot; */</span> <span class="string">&quot;../views/login.vue&quot;</span>),</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&quot;/403&quot;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;403&quot;</span>,</span><br><span class="line">    <span class="attr">meta</span>: &#123;</span><br><span class="line">      <span class="attr">title</span>: <span class="string">&quot;没有权限&quot;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="comment">/* webpackChunkName: &quot;403&quot; */</span> <span class="string">&quot;../views/403.vue&quot;</span>),</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&quot;/:pathMatch(.*)&quot;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;404&quot;</span>,</span><br><span class="line">    <span class="attr">meta</span>: &#123;</span><br><span class="line">      <span class="attr">title</span>: <span class="string">&quot;页面不存在&quot;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/404.vue&quot;</span>),</span><br><span class="line">  &#125;,</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">history</span>: <span class="title function_">createWebHashHistory</span>(),</span><br><span class="line">  routes,</span><br><span class="line">  <span class="comment">// scrollBehavior: () =&gt; (&#123; top: 0 &#125;)  这里配置滚动条位置并不能生效，因为scrollBehavior配置的只对滚动容器是HTML，也就是整个页面才生效。而该项目的滚动容器并不是整个页面，而是home组件中的一个dom！！！</span></span><br><span class="line">&#125;);</span><br><span class="line">router.<span class="title function_">beforeEach</span>(<span class="keyword">async</span> (to, <span class="keyword">from</span>, next) =&gt; &#123;</span><br><span class="line">  <span class="variable language_">document</span>.<span class="property">title</span> = <span class="string">`<span class="subst">$&#123;to.meta.title&#125;</span> | 湖北电信靓号管理系统`</span>;</span><br><span class="line">  <span class="keyword">const</span> &#123; userInfo, getUserInfo, keys &#125; = <span class="title function_">toRefs</span>(<span class="title function_">useUserInfoStore</span>());</span><br><span class="line">  <span class="keyword">const</span> staffCode = <span class="title function_">decrypt</span>(to.<span class="property">query</span>.<span class="property">staffCode</span>);</span><br><span class="line">  <span class="keyword">if</span> (staffCode) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> &#123; data &#125; = <span class="keyword">await</span> <span class="title function_">loginAPI</span>(&#123;</span><br><span class="line">        <span class="attr">password</span>: <span class="string">&quot;111111&quot;</span>,</span><br><span class="line">        <span class="attr">staff_code</span>: staffCode,</span><br><span class="line">      &#125;);</span><br><span class="line">      getUserInfo.<span class="title function_">value</span>(&#123; <span class="attr">staff_code</span>: data.<span class="property">staffCode</span> &#125;);</span><br><span class="line">      <span class="title function_">next</span>(<span class="string">&quot;/&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> &#123;</span><br><span class="line">      <span class="title class_">ElMessage</span>.<span class="title function_">error</span>(<span class="string">&quot;登录失败&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (!userInfo.<span class="property">value</span>.<span class="property">staffCode</span> &amp;&amp; to.<span class="property">path</span> !== <span class="string">&quot;/login&quot;</span>) &#123;</span><br><span class="line">    <span class="title function_">next</span>(<span class="string">&quot;/login&quot;</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (</span><br><span class="line">    to.<span class="property">meta</span>.<span class="property">permiss</span> &amp;&amp;</span><br><span class="line">    keys.<span class="property">value</span> &amp;&amp;</span><br><span class="line">    !keys.<span class="property">value</span>.<span class="title function_">includes</span>(to.<span class="property">meta</span>.<span class="property">permiss</span>)</span><br><span class="line">  ) &#123;</span><br><span class="line">    <span class="comment">// 如果没有权限，则进入403</span></span><br><span class="line">    <span class="title function_">next</span>(<span class="string">&quot;/403&quot;</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title function_">next</span>();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router;</span><br></pre></td></tr></table></figure>

<p>这里值得注意的点有：</p>
<h3 id="1-页面滚动条"><a href="#1-页面滚动条" class="headerlink" title="1.页面滚动条"></a>1.页面滚动条</h3><p>在路由这里我想通过 scrollBehavior 来控制页面的滚动行为，以达到无论上一个页面滚动条是否在顶部，在切换页面（路由）后，页面始终置顶的效果。</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20240312105629967.png" alt="image-20240312105629967"></p>
<p>正如我在代码注释中所写，如果我将 scrollBehavior 配置在路由中，那么它针对的将是整个页面即 app.vue（包含 header、菜单栏 sider-bar、以及主体显示部分 home），这样配置的话只有在一级路由切换时滚动条才会生效。而我想要的是只在 home 页切换时生效即可。</p>
<p>因此，在 home.vue 中配合路由后置守卫实现滚动条置顶效果</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">v-header</span> /&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">v-sidebar</span> /&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content-box&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;&#123; &#x27;content-collapse&#x27;: sidebar.collapse &#125;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">v-tags</span>&gt;</span><span class="tag">&lt;/<span class="name">v-tags</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="comment">&lt;!-- 这个才是真正的滚动容器，需要在这里配合路由守卫去控制滚动条的位置！！！ --&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;content&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;scrollContainer&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">router-view</span> <span class="attr">v-slot</span>=<span class="string">&quot;&#123; Component &#125;&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;key&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">transition</span> <span class="attr">name</span>=<span class="string">&quot;move&quot;</span> <span class="attr">mode</span>=<span class="string">&quot;out-in&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="comment">&lt;!-- &lt;keep-alive :include=&quot;tags.nameList&quot;&gt; --&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">component</span> <span class="attr">:is</span>=<span class="string">&quot;Component&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;route.fullPath&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">component</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="comment">&lt;!-- &lt;/keep-alive&gt; --&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">transition</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> &#123; useSidebarStore &#125; <span class="keyword">from</span> <span class="string">&#x27;../store/sidebar&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="comment">// import &#123; useTagsStore &#125; from &#x27;../store/tags&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> vHeader <span class="keyword">from</span> <span class="string">&#x27;../components/header.vue&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> vSidebar <span class="keyword">from</span> <span class="string">&#x27;../components/sidebar.vue&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> vTags <span class="keyword">from</span> <span class="string">&#x27;../components/tags.vue&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> &#123; ref, computed &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;@/router/index.js&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> &#123; useRoute &#125; <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">const</span> sidebar = <span class="title function_">useSidebarStore</span>()</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="comment">// const tags = useTagsStore()</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">const</span> scrollContainer = <span class="title function_">ref</span>()</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="comment">// 控制滚动条的位置</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">router.<span class="title function_">afterEach</span>(<span class="function">(<span class="params">to, <span class="keyword">from</span></span>) =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  scrollContainer.<span class="property">value</span>.<span class="property">scrollTop</span> = <span class="number">0</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">const</span> route = <span class="title function_">useRoute</span>()</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">const</span> key = <span class="title function_">computed</span>(<span class="function">() =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="keyword">return</span> route.<span class="property">path</span> + <span class="title class_">Math</span>.<span class="title function_">random</span>()</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<h3 id="2-路由前置守卫拦截逻辑"><a href="#2-路由前置守卫拦截逻辑" class="headerlink" title="2.路由前置守卫拦截逻辑"></a>2.路由前置守卫拦截逻辑</h3><p>这里的拦截逻辑是：</p>
<ul>
<li>如果是从另一个项目携带用户名跳转而来，则使用该用户名和默认密码’111111’进行登录，登录成功，获取用户信息存储到 store 中。从而实现跨一个平台免登录的效果。</li>
<li>如果 store 中没有存储用户信息，说明用户未登录</li>
<li>每个页面具有对应的权限等级标识，通过 meta 中的 permiss 标识。在 store 中简单的将用户角色分为了管理员和普通用户两种（当然也可以根据需求进行多样化的调整），通过 store 中存储的用户信息判断该用户是普通用户还是管理员。这样就可以在路由中判断用户是否具有要去的页面的权限了。</li>
</ul>
<p>由此引出 store 中的 useUserInfo.js</p>
<h2 id="四、store-中存放用户信息"><a href="#四、store-中存放用户信息" class="headerlink" title="四、store 中存放用户信息"></a>四、store 中存放用户信息</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineStore &#125; <span class="keyword">from</span> <span class="string">&quot;pinia&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; ref, computed &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; getUserInfoAPI &#125; <span class="keyword">from</span> <span class="string">&quot;@/api/login.js&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; getRegion &#125; <span class="keyword">from</span> <span class="string">&quot;@/api/NumberApplication.js&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ElMessage</span> &#125; <span class="keyword">from</span> <span class="string">&quot;element-plus&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&quot;@/router/index.js&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; verifyPageAccessAPI &#125; <span class="keyword">from</span> <span class="string">&quot;@/api/login.js&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useUserInfoStore = <span class="title function_">defineStore</span>(</span><br><span class="line">  <span class="string">&quot;userInfo&quot;</span>,</span><br><span class="line">  <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> userInfo = <span class="title function_">ref</span>(&#123;&#125;);</span><br><span class="line">    <span class="comment">// 获取用户信息</span></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">getUserInfo</span> = <span class="keyword">async</span> (<span class="params">value</span>) =&gt; &#123;</span><br><span class="line">      <span class="keyword">const</span> userRegionInfo = &#123;</span><br><span class="line">        <span class="attr">new_region_id</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="attr">region_id</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="attr">region_name</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">      &#125;;</span><br><span class="line">      <span class="keyword">const</span> &#123; data &#125; = <span class="keyword">await</span> <span class="title function_">getUserInfoAPI</span>(value);</span><br><span class="line">      <span class="keyword">const</span> result = <span class="keyword">await</span> <span class="title function_">getRegion</span>(&#123; <span class="attr">staff_code</span>: value.<span class="property">staff_code</span> &#125;);</span><br><span class="line">      <span class="comment">// 如果工号以hb开头，先用部门去匹配，如果匹配不到，则region_id为1000</span></span><br><span class="line">      <span class="keyword">if</span> (value.<span class="property">staff_code</span>.<span class="title function_">startsWith</span>(<span class="string">&quot;HB&quot;</span>)) &#123;</span><br><span class="line">        <span class="keyword">const</span> temp = result.<span class="property">data</span>.<span class="title function_">find</span>(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">return</span> item.<span class="property">region_name</span> === data[<span class="number">0</span>].<span class="property">dept</span>;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">if</span> (!temp) &#123;</span><br><span class="line">          userRegionInfo.<span class="property">region_id</span> = <span class="number">1000</span>;</span><br><span class="line">          userRegionInfo.<span class="property">new_region_id</span> = <span class="number">0</span>;</span><br><span class="line">          userRegionInfo.<span class="property">region_name</span> = <span class="string">&quot;其他&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          userRegionInfo.<span class="property">new_region_id</span> = temp.<span class="property">new_region_id</span></span><br><span class="line">            ? temp.<span class="property">new_region_id</span></span><br><span class="line">            : <span class="number">0</span>;</span><br><span class="line">          userRegionInfo.<span class="property">region_id</span> = temp.<span class="property">region_id</span>;</span><br><span class="line">          userRegionInfo.<span class="property">region_name</span> = temp.<span class="property">region_name</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        userRegionInfo.<span class="property">new_region_id</span> = result.<span class="property">data</span>[<span class="number">0</span>].<span class="property">new_region_id</span>;</span><br><span class="line">        userRegionInfo.<span class="property">region_name</span> = result.<span class="property">data</span>[<span class="number">0</span>].<span class="property">region_name</span>;</span><br><span class="line">        userRegionInfo.<span class="property">region_id</span> = result.<span class="property">data</span>[<span class="number">0</span>].<span class="property">region_id</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">//userAccessList就是用户所拥有的权限列表</span></span><br><span class="line">      <span class="keyword">const</span> userAccessList = <span class="keyword">await</span> <span class="title function_">verifyPageAccessAPI</span>(&#123;</span><br><span class="line">        <span class="attr">staff_code</span>: value.<span class="property">staff_code</span>,</span><br><span class="line">      &#125;);</span><br><span class="line">      <span class="comment">// 目前的逻辑是如果该用户同时拥有菜单配置menu_id为3031和审批人配置menu_id为3032的权限，那么他就是管理员</span></span><br><span class="line">      <span class="keyword">const</span> hasAccess1 = userAccessList.<span class="property">data</span>.<span class="title function_">some</span>(</span><br><span class="line">        <span class="function">(<span class="params">item</span>) =&gt;</span> item.<span class="property">menu_id</span> === <span class="string">&quot;3031&quot;</span></span><br><span class="line">      );</span><br><span class="line">      <span class="keyword">const</span> hasAccess2 = userAccessList.<span class="property">data</span>.<span class="title function_">some</span>(</span><br><span class="line">        <span class="function">(<span class="params">item</span>) =&gt;</span> item.<span class="property">menu_id</span> === <span class="string">&quot;3032&quot;</span></span><br><span class="line">      );</span><br><span class="line">      <span class="keyword">const</span> isAdmin = hasAccess1 &amp;&amp; hasAccess2;</span><br><span class="line">      userInfo.<span class="property">value</span> = &#123;</span><br><span class="line">        ...data[<span class="number">0</span>],</span><br><span class="line">        <span class="attr">staffCode</span>: value.<span class="property">staff_code</span>,</span><br><span class="line">        ...userRegionInfo,</span><br><span class="line">        isAdmin,</span><br><span class="line">      &#125;;</span><br><span class="line">      <span class="title class_">ElMessage</span>.<span class="title function_">success</span>(<span class="string">&quot;登录成功&quot;</span>);</span><br><span class="line">      router.<span class="title function_">replace</span>(<span class="string">&quot;/&quot;</span>);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">// 更改用户信息</span></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">setUserInfo</span> = (<span class="params">value</span>) =&gt; &#123;</span><br><span class="line">      userInfo.<span class="property">value</span> = value;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">// 清除用户信息</span></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">clearUserInfo</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">      userInfo.<span class="property">value</span> = &#123;&#125;;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">const</span> defaultList = <span class="title function_">ref</span>(&#123;</span><br><span class="line">      <span class="attr">admin</span>: [</span><br><span class="line">        <span class="string">&quot;1&quot;</span>,</span><br><span class="line">        <span class="string">&quot;2&quot;</span>,</span><br><span class="line">        <span class="string">&quot;3&quot;</span>,</span><br><span class="line">        <span class="string">&quot;4&quot;</span>,</span><br><span class="line">        <span class="string">&quot;5&quot;</span>,</span><br><span class="line">        <span class="string">&quot;6&quot;</span>,</span><br><span class="line">        <span class="string">&quot;7&quot;</span>,</span><br><span class="line">        <span class="string">&quot;8&quot;</span>,</span><br><span class="line">        <span class="string">&quot;9&quot;</span>,</span><br><span class="line">        <span class="string">&quot;10&quot;</span>,</span><br><span class="line">        <span class="string">&quot;11&quot;</span>,</span><br><span class="line">        <span class="string">&quot;12&quot;</span>,</span><br><span class="line">        <span class="string">&quot;13&quot;</span>,</span><br><span class="line">        <span class="string">&quot;14&quot;</span>,</span><br><span class="line">        <span class="string">&quot;15&quot;</span>,</span><br><span class="line">        <span class="string">&quot;16&quot;</span>,</span><br><span class="line">        <span class="string">&quot;999&quot;</span>, <span class="comment">//这是虚拟成本的权限标识</span></span><br><span class="line">      ],</span><br><span class="line">      <span class="attr">user</span>: [<span class="string">&quot;1&quot;</span>, <span class="string">&quot;2&quot;</span>, <span class="string">&quot;3&quot;</span>, <span class="string">&quot;4&quot;</span>, <span class="string">&quot;5&quot;</span>, <span class="string">&quot;6&quot;</span>, <span class="string">&quot;7&quot;</span>, <span class="string">&quot;8&quot;</span>, <span class="string">&quot;9&quot;</span>, <span class="string">&quot;10&quot;</span>],</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">//在此表中的人员都是管理员</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(userInfo.<span class="property">value</span>.<span class="property">isAdmin</span>, <span class="string">&quot;111&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> keys = <span class="title function_">computed</span>(</span><br><span class="line">      <span class="function">() =&gt;</span> defaultList.<span class="property">value</span>[userInfo.<span class="property">value</span>.<span class="property">isAdmin</span> ? <span class="string">&quot;admin&quot;</span> : <span class="string">&quot;user&quot;</span>]</span><br><span class="line">    );</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(keys);</span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">handleSet</span> = (<span class="params">val</span>) =&gt; &#123;</span><br><span class="line">      keys.<span class="property">value</span> = val;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      userInfo,</span><br><span class="line">      getUserInfo,</span><br><span class="line">      setUserInfo,</span><br><span class="line">      clearUserInfo,</span><br><span class="line">      keys,</span><br><span class="line">      defaultList,</span><br><span class="line">      handleSet,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">// persist:true</span></span><br><span class="line">    <span class="attr">persist</span>: &#123;</span><br><span class="line">      <span class="attr">storage</span>: sessionStorage, <span class="comment">//localStorage</span></span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<ul>
<li>可以看到这里定义了获取用户信息、清除用户信息的方法。可以在登录和退出登录时调用。其中的用户信息可以在项目需要的时候随时随地方便获取，同时还定义了修改用户信息的方法，不过它一般应该只用来将一些信息添加到用户信息身上。</li>
<li>本项目目前只有管理员和普通用户两种角色，他们被定义在 defaultList 中的 admin 和 user 中，通过用户信息的简单判断来对应 defaultList 中的 admin 和 user。再结合路由守卫，这样他们就分别有了管理员和普通用户的页面权限。当然这里的角色定义和角色判断可以结合后端灵活实现和扩展。</li>
<li>由于使用了 pinia-plugin-persistedstate 插件，可以直接通过 persist 配置选项中的 storage 将数据持久化.注意如果直接给 true 默认使用的是 localStorage。</li>
</ul>
<h2 id="五、自定义指令和组件"><a href="#五、自定义指令和组件" class="headerlink" title="五、自定义指令和组件"></a>五、自定义指令和组件</h2><p>自定义指令放在 src&#x2F;directives&#x2F;index.js</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; useUserInfoStore &#125; <span class="keyword">from</span> <span class="string">&quot;@/store/useUserInfoStore.js&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; toRefs &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="comment">// 自定义权限指令</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> permissDirective = &#123;</span><br><span class="line">  <span class="title function_">install</span>(<span class="params">app</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; keys &#125; = <span class="title function_">toRefs</span>(<span class="title function_">useUserInfoStore</span>());</span><br><span class="line">    app.<span class="title function_">directive</span>(<span class="string">&quot;permiss&quot;</span>, &#123;</span><br><span class="line">      <span class="title function_">mounted</span>(<span class="params">el, binding</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (keys.<span class="property">value</span> &amp;&amp; !keys.<span class="property">value</span>.<span class="title function_">includes</span>(<span class="title class_">String</span>(binding.<span class="property">value</span>))) &#123;</span><br><span class="line">          el[<span class="string">&quot;hidden&quot;</span>] = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>自定义组件放在 src&#x2F;components 中，并最终通过 index.js 进行统一导出</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">TaskDeal</span> <span class="keyword">from</span> <span class="string">&quot;./TaskDeal.vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">TaskDetail</span> <span class="keyword">from</span> <span class="string">&quot;./TaskDetail.vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">TaskDetailDid</span> <span class="keyword">from</span> <span class="string">&quot;./TaskDetailDid.vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">TaskDealNew</span> <span class="keyword">from</span> <span class="string">&quot;./TaskDealNew.vue&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="title function_">install</span>(<span class="params">app</span>) &#123;</span><br><span class="line">    app.<span class="title function_">component</span>(<span class="string">&quot;TaskDeal&quot;</span>, <span class="title class_">TaskDeal</span>);</span><br><span class="line">    app.<span class="title function_">component</span>(<span class="string">&quot;TaskDetail&quot;</span>, <span class="title class_">TaskDetail</span>);</span><br><span class="line">    app.<span class="title function_">component</span>(<span class="string">&quot;TaskDetailDid&quot;</span>, <span class="title class_">TaskDetailDid</span>);</span><br><span class="line">    app.<span class="title function_">component</span>(<span class="string">&quot;TaskDealNew&quot;</span>, <span class="title class_">TaskDealNew</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>最后别忘了在 main.js 中注册使用</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; createPinia &#125; <span class="keyword">from</span> <span class="string">&quot;pinia&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> <span class="title class_">ElementPlusIconsVue</span> <span class="keyword">from</span> <span class="string">&quot;@element-plus/icons-vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&quot;./App.vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&quot;./router/index.js&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;element-plus/dist/index.css&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;./assets/css/icon.css&quot;</span>;</span><br><span class="line"><span class="comment">// 引入pinia数据持久化插件</span></span><br><span class="line"><span class="keyword">import</span> piniaPluginPersistedstate <span class="keyword">from</span> <span class="string">&quot;pinia-plugin-persistedstate&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; permissDirective &#125; <span class="keyword">from</span> <span class="string">&quot;@/directives/index.js&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Components</span> <span class="keyword">from</span> <span class="string">&quot;@/components/index.js&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&quot;axios&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> print <span class="keyword">from</span> <span class="string">&quot;vue3-print-nb&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">createApp</span>(<span class="title class_">App</span>);</span><br><span class="line"><span class="keyword">const</span> pinia = <span class="title function_">createPinia</span>();</span><br><span class="line">app.<span class="title function_">use</span>(pinia);</span><br><span class="line">pinia.<span class="title function_">use</span>(piniaPluginPersistedstate);</span><br><span class="line">app.<span class="title function_">use</span>(router);</span><br><span class="line">app.<span class="title function_">use</span>(permissDirective);</span><br><span class="line"><span class="comment">// 注册elementplus图标</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">const</span> [key, component] <span class="keyword">of</span> <span class="title class_">Object</span>.<span class="title function_">entries</span>(<span class="title class_">ElementPlusIconsVue</span>)) &#123;</span><br><span class="line">  app.<span class="title function_">component</span>(key, component);</span><br><span class="line">&#125;</span><br><span class="line">app.<span class="property">config</span>.<span class="property">globalProperties</span>.<span class="property">$http</span> = axios;</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(<span class="title class_">Components</span>).<span class="title function_">use</span>(print);</span><br><span class="line">app.<span class="title function_">mount</span>(<span class="string">&quot;#app&quot;</span>);</span><br></pre></td></tr></table></figure>

<h2 id="六、用户信息脱敏处理"><a href="#六、用户信息脱敏处理" class="headerlink" title="六、用户信息脱敏处理"></a>六、用户信息脱敏处理</h2><p>​ 对于像客户的电话号码、姓名、身份证号这些敏感数据，需要进行脱敏后再显示，为此可在 src&#x2F;utils 下新建 sensitiveDataHandle.js 进行数据脱敏处理</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 信息脱敏处理</span></span><br><span class="line"><span class="comment">// beginLen:开始脱敏的字符下标; endLen:结束脱敏的字符下标; str:需要脱敏的字符串; max:掩码最大的重复数量，若不传，则默认为20</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">getStr</span>(<span class="params">beginLen, endLen, str, max = <span class="number">20</span></span>) &#123;</span><br><span class="line">  <span class="comment">// substr(begin,length),begin:需要截取的字符串的下标,必须是数值，若为负数,则从字符串最后一位向左数;</span></span><br><span class="line">  <span class="comment">// length:需要截取的字符串长度,若不写此参数,则返回从开始位置到结束的所有字符</span></span><br><span class="line">  <span class="keyword">const</span> firstStr = str.<span class="title function_">substr</span>(<span class="number">0</span>, beginLen);</span><br><span class="line">  <span class="comment">// 结束脱敏的字符下标是否为0，为0则返回空，不为0则返回截取的字符</span></span><br><span class="line">  <span class="keyword">const</span> lastStr = endLen == <span class="number">0</span> ? <span class="string">&quot;&quot;</span> : str.<span class="title function_">substr</span>(endLen);</span><br><span class="line">  <span class="comment">// Math.max(x,y,z,...,n),返回x,y,z,...,n中的最大值</span></span><br><span class="line">  <span class="comment">// Math.abs(x),返回x的绝对值</span></span><br><span class="line">  <span class="comment">// Math.min(x,y,z,...,n),返回x,y,z,...,n中的最小值</span></span><br><span class="line">  <span class="comment">// 开始脱敏的下标 加上 结束脱敏的下标是否小于字符串总长度</span></span><br><span class="line">  <span class="keyword">let</span> repeatNum = <span class="title class_">Math</span>.<span class="title function_">max</span>(<span class="number">0</span>, str.<span class="property">length</span> - (beginLen + <span class="title class_">Math</span>.<span class="title function_">abs</span>(endLen)));</span><br><span class="line">  <span class="comment">// 若传了最大掩码重复数，则取数值小的那个</span></span><br><span class="line">  repeatNum = <span class="title class_">Math</span>.<span class="title function_">min</span>(max, repeatNum);</span><br><span class="line">  <span class="comment">// 字符串复制指定次数，语法: string.repeat(count), count:设置需要重复的次数</span></span><br><span class="line">  <span class="keyword">const</span> middleStr = <span class="string">&quot;*&quot;</span>.<span class="title function_">repeat</span>(repeatNum); <span class="comment">// 掩码要重复的数量</span></span><br><span class="line">  <span class="keyword">return</span> firstStr + middleStr + lastStr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="七、客户类别互斥多选"><a href="#七、客户类别互斥多选" class="headerlink" title="七、客户类别互斥多选"></a>七、客户类别互斥多选</h2><p>原先客户类别选择框只是简单的多选，比如我可以在所有的选项中随意的选取几项。但是其实选项里面是有分组和互斥关系的，比如市州政府、事业单位客户和省级政府、事业单位客户和省级政府、事业单位关键人这三个应该是一组的，只能从这组中选择一个。基于此又提出了更高的需求：要求选项之间分组，选择时互斥的多选</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20240312151003640.png" alt="image-20240312151003640"></p>
<p>我将客户类型数据定义在了 src&#x2F;constant&#x2F;customerType.js 的常量中，用的时候直接引入</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//四级手机靓号客户类型</span></span><br><span class="line"><span class="comment">// export const customerTypeLvl4 = [</span></span><br><span class="line"><span class="comment">//   &#123; label: &#x27;市州政府、事业单位客户&#x27;, value: &#x27;市州政府、事业单位客户&#x27; &#125;,</span></span><br><span class="line"><span class="comment">//   &#123; label: &#x27;县市级别关键人&#x27;, value: &#x27;县市级别关键人&#x27; &#125;,</span></span><br><span class="line"><span class="comment">//   &#123; label: &#x27;政企团购80户以上关键人&#x27;, value: &#x27;政企团购80户以上关键人&#x27; &#125;,</span></span><br><span class="line"><span class="comment">//   &#123; label: &#x27;年收入超过30万客户&#x27;, value: &#x27;年收入超过30万客户&#x27; &#125;,</span></span><br><span class="line"><span class="comment">//   &#123; label: &#x27;产数项目超100万客户&#x27;, value: &#x27;产数项目超100万客户&#x27; &#125;,</span></span><br><span class="line"><span class="comment">//   &#123; label: &#x27;省级政府、事业单位客户&#x27;, value: &#x27;省级政府、事业单位客户&#x27; &#125;,</span></span><br><span class="line"><span class="comment">//   &#123; label: &#x27;市州级别关键人&#x27;, value: &#x27;市州级别关键人&#x27; &#125;,</span></span><br><span class="line"><span class="comment">//   &#123; label: &#x27;政企团购150户以上关键人&#x27;, value: &#x27;政企团购150户以上关键人&#x27; &#125;,</span></span><br><span class="line"><span class="comment">//   &#123; label: &#x27;年收入超过100万客户&#x27;, value: &#x27;年收入超过100万客户&#x27; &#125;,</span></span><br><span class="line"><span class="comment">//   &#123; label: &#x27;产数项目超300万客户&#x27;, value: &#x27;产数项目超300万客户&#x27; &#125;,</span></span><br><span class="line"><span class="comment">//   &#123; label: &#x27;省级政府、事业单位关键人&#x27;, value: &#x27;省级政府、事业单位关键人&#x27; &#125;,</span></span><br><span class="line"><span class="comment">//   &#123; label: &#x27;重点大型企业集团客户关键人&#x27;, value: &#x27;重点大型企业集团客户关键人&#x27; &#125;,</span></span><br><span class="line"><span class="comment">//   &#123; label: &#x27;政企团购300户以上关键人&#x27;, value: &#x27;政企团购300户以上关键人&#x27; &#125;,</span></span><br><span class="line"><span class="comment">//   &#123; label: &#x27;年收入超过200万客户&#x27;, value: &#x27;年收入超过200万客户&#x27; &#125;,</span></span><br><span class="line"><span class="comment">//   &#123; label: &#x27;产数项目超500万客户&#x27;, value: &#x27;产数项目超500万客户&#x27; &#125;</span></span><br><span class="line"><span class="comment">// ]</span></span><br><span class="line"><span class="comment">// //五级手机靓号客户类型</span></span><br><span class="line"><span class="comment">// export const customerTypeLvl5 = [</span></span><br><span class="line"><span class="comment">//   &#123; label: &#x27;省级政府、事业单位客户&#x27;, value: &#x27;省级政府、事业单位客户&#x27; &#125;,</span></span><br><span class="line"><span class="comment">//   &#123; label: &#x27;市州级别关键人&#x27;, value: &#x27;市州级别关键人&#x27; &#125;,</span></span><br><span class="line"><span class="comment">//   &#123; label: &#x27;政企团购150户以上关键人&#x27;, value: &#x27;政企团购150户以上关键人&#x27; &#125;,</span></span><br><span class="line"><span class="comment">//   &#123; label: &#x27;年收入超过100万客户&#x27;, value: &#x27;年收入超过100万客户&#x27; &#125;,</span></span><br><span class="line"><span class="comment">//   &#123; label: &#x27;产数项目超300万客户&#x27;, value: &#x27;产数项目超300万客户&#x27; &#125;,</span></span><br><span class="line"><span class="comment">//   &#123; label: &#x27;省级政府、事业单位关键人&#x27;, value: &#x27;省级政府、事业单位关键人&#x27; &#125;,</span></span><br><span class="line"><span class="comment">//   &#123; label: &#x27;重点大型企业集团客户关键人&#x27;, value: &#x27;重点大型企业集团客户关键人&#x27; &#125;,</span></span><br><span class="line"><span class="comment">//   &#123; label: &#x27;政企团购300户以上关键人&#x27;, value: &#x27;政企团购300户以上关键人&#x27; &#125;,</span></span><br><span class="line"><span class="comment">//   &#123; label: &#x27;年收入超过200万客户&#x27;, value: &#x27;年收入超过200万客户&#x27; &#125;,</span></span><br><span class="line"><span class="comment">//   &#123; label: &#x27;产数项目超500万客户&#x27;, value: &#x27;产数项目超500万客户&#x27; &#125;</span></span><br><span class="line"><span class="comment">// ]</span></span><br><span class="line"><span class="comment">// //六级手机靓号客户类型</span></span><br><span class="line"><span class="comment">// export const customerTypeLvl6 = [</span></span><br><span class="line"><span class="comment">//   &#123; label: &#x27;省级政府、事业单位关键人&#x27;, value: &#x27;省级政府、事业单位关键人&#x27; &#125;,</span></span><br><span class="line"><span class="comment">//   &#123; label: &#x27;重点大型企业集团客户关键人&#x27;, value: &#x27;重点大型企业集团客户关键人&#x27; &#125;,</span></span><br><span class="line"><span class="comment">//   &#123; label: &#x27;政企团购300户以上关键人&#x27;, value: &#x27;政企团购300户以上关键人&#x27; &#125;,</span></span><br><span class="line"><span class="comment">//   &#123; label: &#x27;年收入超过200万客户&#x27;, value: &#x27;年收入超过200万客户&#x27; &#125;,</span></span><br><span class="line"><span class="comment">//   &#123; label: &#x27;产数项目超500万客户&#x27;, value: &#x27;产数项目超500万客户&#x27; &#125;</span></span><br><span class="line"><span class="comment">// ]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> customerTypeLvl4 = [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">label</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">    <span class="attr">options</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">label</span>: <span class="string">&quot;市州政府、事业单位客户&quot;</span>,</span><br><span class="line">        <span class="attr">value</span>: <span class="string">&quot;市州政府、事业单位客户&quot;</span>,</span><br><span class="line">        <span class="attr">state</span>: <span class="literal">false</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">label</span>: <span class="string">&quot;省级政府、事业单位客户&quot;</span>,</span><br><span class="line">        <span class="attr">value</span>: <span class="string">&quot;省级政府、事业单位客户&quot;</span>,</span><br><span class="line">        <span class="attr">state</span>: <span class="literal">false</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">label</span>: <span class="string">&quot;省级政府、事业单位关键人&quot;</span>,</span><br><span class="line">        <span class="attr">value</span>: <span class="string">&quot;省级政府、事业单位关键人&quot;</span>,</span><br><span class="line">        <span class="attr">state</span>: <span class="literal">false</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">label</span>: <span class="string">&quot;2&quot;</span>,</span><br><span class="line">    <span class="attr">options</span>: [</span><br><span class="line">      &#123; <span class="attr">label</span>: <span class="string">&quot;县市级别关键人&quot;</span>, <span class="attr">value</span>: <span class="string">&quot;县市级别关键人&quot;</span>, <span class="attr">state</span>: <span class="literal">false</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">label</span>: <span class="string">&quot;市州级别关键人&quot;</span>, <span class="attr">value</span>: <span class="string">&quot;市州级别关键人&quot;</span>, <span class="attr">state</span>: <span class="literal">false</span> &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">label</span>: <span class="string">&quot;重点大型企业集团客户关键人&quot;</span>,</span><br><span class="line">        <span class="attr">value</span>: <span class="string">&quot;重点大型企业集团客户关键人&quot;</span>,</span><br><span class="line">        <span class="attr">state</span>: <span class="literal">false</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">label</span>: <span class="string">&quot;3&quot;</span>,</span><br><span class="line">    <span class="attr">options</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">label</span>: <span class="string">&quot;政企团购80户以上关键人&quot;</span>,</span><br><span class="line">        <span class="attr">value</span>: <span class="string">&quot;政企团购80户以上关键人&quot;</span>,</span><br><span class="line">        <span class="attr">state</span>: <span class="literal">false</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">label</span>: <span class="string">&quot;政企团购150户以上关键人&quot;</span>,</span><br><span class="line">        <span class="attr">value</span>: <span class="string">&quot;政企团购150户以上关键人&quot;</span>,</span><br><span class="line">        <span class="attr">state</span>: <span class="literal">false</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">label</span>: <span class="string">&quot;政企团购300户以上关键人&quot;</span>,</span><br><span class="line">        <span class="attr">value</span>: <span class="string">&quot;政企团购300户以上关键人&quot;</span>,</span><br><span class="line">        <span class="attr">state</span>: <span class="literal">false</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">label</span>: <span class="string">&quot;4&quot;</span>,</span><br><span class="line">    <span class="attr">options</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">label</span>: <span class="string">&quot;年收入超过30万客户&quot;</span>,</span><br><span class="line">        <span class="attr">value</span>: <span class="string">&quot;年收入超过30万客户&quot;</span>,</span><br><span class="line">        <span class="attr">state</span>: <span class="literal">false</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">label</span>: <span class="string">&quot;年收入超过100万客户&quot;</span>,</span><br><span class="line">        <span class="attr">value</span>: <span class="string">&quot;年收入超过100万客户&quot;</span>,</span><br><span class="line">        <span class="attr">state</span>: <span class="literal">false</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">label</span>: <span class="string">&quot;年收入超过200万客户&quot;</span>,</span><br><span class="line">        <span class="attr">value</span>: <span class="string">&quot;年收入超过200万客户&quot;</span>,</span><br><span class="line">        <span class="attr">state</span>: <span class="literal">false</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">label</span>: <span class="string">&quot;5&quot;</span>,</span><br><span class="line">    <span class="attr">options</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">label</span>: <span class="string">&quot;产数项目超100万客户&quot;</span>,</span><br><span class="line">        <span class="attr">value</span>: <span class="string">&quot;产数项目超100万客户&quot;</span>,</span><br><span class="line">        <span class="attr">state</span>: <span class="literal">false</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">label</span>: <span class="string">&quot;产数项目超300万客户&quot;</span>,</span><br><span class="line">        <span class="attr">value</span>: <span class="string">&quot;产数项目超300万客户&quot;</span>,</span><br><span class="line">        <span class="attr">state</span>: <span class="literal">false</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">label</span>: <span class="string">&quot;产数项目超500万客户&quot;</span>,</span><br><span class="line">        <span class="attr">value</span>: <span class="string">&quot;产数项目超500万客户&quot;</span>,</span><br><span class="line">        <span class="attr">state</span>: <span class="literal">false</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line">];</span><br><span class="line"><span class="comment">//五级手机靓号客户类型</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> customerTypeLvl5 = [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">label</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">    <span class="attr">options</span>: [</span><br><span class="line">      &#123; <span class="attr">label</span>: <span class="string">&quot;省级政府、事业单位客户&quot;</span>, <span class="attr">value</span>: <span class="string">&quot;省级政府、事业单位客户&quot;</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">label</span>: <span class="string">&quot;省级政府、事业单位关键人&quot;</span>, <span class="attr">value</span>: <span class="string">&quot;省级政府、事业单位关键人&quot;</span> &#125;,</span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">label</span>: <span class="string">&quot;2&quot;</span>,</span><br><span class="line">    <span class="attr">options</span>: [</span><br><span class="line">      &#123; <span class="attr">label</span>: <span class="string">&quot;市州级别关键人&quot;</span>, <span class="attr">value</span>: <span class="string">&quot;市州级别关键人&quot;</span> &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">label</span>: <span class="string">&quot;重点大型企业集团客户关键人&quot;</span>,</span><br><span class="line">        <span class="attr">value</span>: <span class="string">&quot;重点大型企业集团客户关键人&quot;</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">label</span>: <span class="string">&quot;3&quot;</span>,</span><br><span class="line">    <span class="attr">options</span>: [</span><br><span class="line">      &#123; <span class="attr">label</span>: <span class="string">&quot;政企团购150户以上关键人&quot;</span>, <span class="attr">value</span>: <span class="string">&quot;政企团购150户以上关键人&quot;</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">label</span>: <span class="string">&quot;政企团购300户以上关键人&quot;</span>, <span class="attr">value</span>: <span class="string">&quot;政企团购300户以上关键人&quot;</span> &#125;,</span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">label</span>: <span class="string">&quot;4&quot;</span>,</span><br><span class="line">    <span class="attr">options</span>: [</span><br><span class="line">      &#123; <span class="attr">label</span>: <span class="string">&quot;年收入超过100万客户&quot;</span>, <span class="attr">value</span>: <span class="string">&quot;年收入超过100万客户&quot;</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">label</span>: <span class="string">&quot;年收入超过200万客户&quot;</span>, <span class="attr">value</span>: <span class="string">&quot;年收入超过200万客户&quot;</span> &#125;,</span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">label</span>: <span class="string">&quot;5&quot;</span>,</span><br><span class="line">    <span class="attr">options</span>: [</span><br><span class="line">      &#123; <span class="attr">label</span>: <span class="string">&quot;产数项目超300万客户&quot;</span>, <span class="attr">value</span>: <span class="string">&quot;产数项目超300万客户&quot;</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">label</span>: <span class="string">&quot;产数项目超500万客户&quot;</span>, <span class="attr">value</span>: <span class="string">&quot;产数项目超500万客户&quot;</span> &#125;,</span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line">];</span><br><span class="line"><span class="comment">//六级手机靓号客户类型</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> customerTypeLvl6 = [</span><br><span class="line">  &#123; <span class="attr">label</span>: <span class="string">&quot;省级政府、事业单位关键人&quot;</span>, <span class="attr">value</span>: <span class="string">&quot;省级政府、事业单位关键人&quot;</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">label</span>: <span class="string">&quot;重点大型企业集团客户关键人&quot;</span>, <span class="attr">value</span>: <span class="string">&quot;重点大型企业集团客户关键人&quot;</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">label</span>: <span class="string">&quot;政企团购300户以上关键人&quot;</span>, <span class="attr">value</span>: <span class="string">&quot;政企团购300户以上关键人&quot;</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">label</span>: <span class="string">&quot;年收入超过200万客户&quot;</span>, <span class="attr">value</span>: <span class="string">&quot;年收入超过200万客户&quot;</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">label</span>: <span class="string">&quot;产数项目超500万客户&quot;</span>, <span class="attr">value</span>: <span class="string">&quot;产数项目超500万客户&quot;</span> &#125;,</span><br><span class="line">];</span><br></pre></td></tr></table></figure>

<p>在具体的业务代码中</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;!-- 只在手机靓号四级、五级、六级时显示 --&gt;</span><br><span class="line">  &lt;el-form-item</span><br><span class="line">    label=&quot;客户类型&quot;</span><br><span class="line">    prop=&quot;customerType&quot;</span><br><span class="line">    v-if=&quot;</span><br><span class="line">      selectFormData.level_name === &#x27;四级手机靓号&#x27; ||</span><br><span class="line">      selectFormData.level_name === &#x27;五级手机靓号&#x27; ||</span><br><span class="line">      selectFormData.level_name === &#x27;六级手机靓号&#x27;</span><br><span class="line">    &quot;</span><br><span class="line">  &gt;</span><br><span class="line">    &lt;el-select</span><br><span class="line">      style=&quot;width: 250px&quot;</span><br><span class="line">      v-model=&quot;selectFormData.customerType&quot;</span><br><span class="line">      placeholder=&quot;请选择&quot;</span><br><span class="line">      multiple</span><br><span class="line">      collapse-tags</span><br><span class="line">      collapse-tags-tooltip</span><br><span class="line">      @change=&quot;selectChange&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;template v-if=&quot;selectFormData.level_name === &#x27;六级手机靓号&#x27;&quot;&gt;</span><br><span class="line">        &lt;el-option</span><br><span class="line">          v-for=&quot;item in customerTypeList&quot;</span><br><span class="line">          :key=&quot;item.value&quot;</span><br><span class="line">          :label=&quot;item.label&quot;</span><br><span class="line">          :value=&quot;item.value&quot;</span><br><span class="line">        &gt;&lt;/el-option&gt;</span><br><span class="line">      &lt;/template&gt;</span><br><span class="line">      &lt;template v-else&gt;</span><br><span class="line">        &lt;el-option-group</span><br><span class="line">          v-for=&quot;group in customerTypeList&quot;</span><br><span class="line">          :key=&quot;group.label&quot;</span><br><span class="line">          :label=&quot;group.label&quot;</span><br><span class="line">        &gt;</span><br><span class="line">          &lt;el-option</span><br><span class="line">            v-for=&quot;item in group.options&quot;</span><br><span class="line">            :key=&quot;item.value&quot;</span><br><span class="line">            :label=&quot;item.label&quot;</span><br><span class="line">            :value=&quot;item.value&quot;</span><br><span class="line">            :disabled=&quot;item.state&quot;</span><br><span class="line">          /&gt;</span><br><span class="line">        &lt;/el-option-group&gt;</span><br><span class="line">      &lt;/template&gt;</span><br><span class="line">    &lt;/el-select&gt;</span><br><span class="line">  &lt;/el-form-item&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">const customerTypeList = ref([])</span><br><span class="line">watchEffect(() =&gt; &#123;</span><br><span class="line">  if (selectFormData.value.level_name === &#x27;四级手机靓号&#x27;) &#123;</span><br><span class="line">    customerTypeList.value = customerTypeLvl4</span><br><span class="line">  &#125; else if (selectFormData.value.level_name === &#x27;五级手机靓号&#x27;) &#123;</span><br><span class="line">    customerTypeList.value = customerTypeLvl5</span><br><span class="line">  &#125; else if (selectFormData.value.level_name === &#x27;六级手机靓号&#x27;) &#123;</span><br><span class="line">    customerTypeList.value = customerTypeLvl6</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    customerTypeList.value = []</span><br><span class="line">  &#125;</span><br><span class="line">  const selectChange = (val) =&gt; &#123;</span><br><span class="line">  if (val.length === 0) &#123;</span><br><span class="line">    customerTypeList.value.forEach((item) =&gt;</span><br><span class="line">      item.options.forEach((ele) =&gt; (ele.state = false))</span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">  const tempList = ref([])</span><br><span class="line">  customerTypeList.value.forEach((item) =&gt; &#123;</span><br><span class="line">    const tempArr = item.options.find((ele) =&gt; &#123;</span><br><span class="line">      return ele.label === val[val.length - 1]</span><br><span class="line">    &#125;)</span><br><span class="line">    if (tempArr) &#123;</span><br><span class="line">      tempList.value = item.options</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">  tempList.value.forEach((item) =&gt; &#123;</span><br><span class="line">    if (item.label !== val[val.length - 1]) &#123;</span><br><span class="line">      item.state = true</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p>这里我为了实现组内互斥效果，在选项上加了一个 state 字段控制选项的可选状态。当本组内已经有选项被选择时，则将该组内其他选项的可选状态禁用。同时不影响其他组的可选状态。具体逻辑在 selectChange 函数中实现。</p>
<h2 id="八、文件上传下载功能"><a href="#八、文件上传下载功能" class="headerlink" title="八、文件上传下载功能"></a>八、文件上传下载功能</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;!-- 上传附件区域 --&gt;</span><br><span class="line">  &lt;div class=&quot;container&quot; style=&quot;margin-bottom: 10px&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;title&quot;&gt;</span><br><span class="line">      &lt;span&gt;上传附件&lt;/span&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;el-upload</span><br><span class="line">      v-model:file-list=&quot;fileList&quot;</span><br><span class="line">      ref=&quot;uploadRef&quot;</span><br><span class="line">      class=&quot;upload-demo&quot;</span><br><span class="line">      :on-remove=&quot;handleRemove&quot;</span><br><span class="line">      :on-change=&quot;changeFile&quot;</span><br><span class="line">      :http-request=&quot;upload&quot;</span><br><span class="line">      action=&quot;#&quot;</span><br><span class="line">      :auto-upload=&quot;false&quot;</span><br><span class="line">      multiple</span><br><span class="line">      style=&quot;display: flex; margin-bottom: 10px&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;template #trigger&gt;</span><br><span class="line">        &lt;el-button type=&quot;primary&quot; :icon=&quot;Document&quot; style=&quot;margin-right: 150px&quot;</span><br><span class="line">          &gt;选择文件&lt;/el-button</span><br><span class="line">        &gt;</span><br><span class="line">      &lt;/template&gt;</span><br><span class="line">      &lt;template #tip v-if=&quot;!tempList.length&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;el-upload__tip&quot; style=&quot;margin: 10px 0 0 -216px&quot;&gt;</span><br><span class="line">          未选择任何文件</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/template&gt;</span><br><span class="line">      &lt;el-button</span><br><span class="line">        class=&quot;ml-3&quot;</span><br><span class="line">        :icon=&quot;Upload&quot;</span><br><span class="line">        type=&quot;success&quot;</span><br><span class="line">        @click=&quot;handleUpload&quot;</span><br><span class="line">        style=&quot;margin-top: 2px&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        上传</span><br><span class="line">      &lt;/el-button&gt;</span><br><span class="line">    &lt;/el-upload&gt;</span><br><span class="line">    &lt;span style=&quot;font-size: 14px; color: #606266&quot;&gt;附件列表&lt;/span&gt;</span><br><span class="line">    &lt;el-table</span><br><span class="line">      :data=&quot;fileTableData&quot;</span><br><span class="line">      border</span><br><span class="line">      class=&quot;table&quot;</span><br><span class="line">      header-cell-class-name=&quot;table-header&quot;</span><br><span class="line">      highlight-current-row</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;el-table-column</span><br><span class="line">        prop=&quot;uid&quot;</span><br><span class="line">        label=&quot;附件编号&quot;</span><br><span class="line">        width=&quot;155&quot;</span><br><span class="line">        align=&quot;center&quot;</span><br><span class="line">      &gt;&lt;/el-table-column&gt;</span><br><span class="line">      &lt;el-table-column prop=&quot;filename&quot; label=&quot;附件名称&quot;&gt; &lt;/el-table-column&gt;</span><br><span class="line">      &lt;el-table-column prop=&quot;size&quot; label=&quot;附件大小&quot;&gt; &lt;/el-table-column&gt;</span><br><span class="line">      &lt;el-table-column label=&quot;操作&quot; width=&quot;220&quot; align=&quot;center&quot;&gt;</span><br><span class="line">        &lt;template #default=&quot;scope&quot;&gt;</span><br><span class="line">          &lt;el-button</span><br><span class="line">            type=&quot;warning&quot;</span><br><span class="line">            size=&quot;small&quot;</span><br><span class="line">            :icon=&quot;Delete&quot;</span><br><span class="line">            @click=&quot;handleDel(scope.$index, scope.row)&quot;</span><br><span class="line">          &gt;</span><br><span class="line">            删除</span><br><span class="line">          &lt;/el-button&gt;</span><br><span class="line">          &lt;el-button</span><br><span class="line">            type=&quot;primary&quot;</span><br><span class="line">            class=&quot;red&quot;</span><br><span class="line">            size=&quot;small&quot;</span><br><span class="line">            :icon=&quot;Download&quot;</span><br><span class="line">            @click=&quot;handleDownload(scope.$index, scope.row)&quot;</span><br><span class="line">          &gt;</span><br><span class="line">            下载</span><br><span class="line">          &lt;/el-button&gt;</span><br><span class="line">        &lt;/template&gt;</span><br><span class="line">      &lt;/el-table-column&gt;</span><br><span class="line">    &lt;/el-table&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">// 文件上传</span><br><span class="line">// 文件上传列表</span><br><span class="line">const fileTableData = ref([]);</span><br><span class="line">onMounted(() =&gt; &#123;</span><br><span class="line">  if (applyForm.fileTableData) &#123;</span><br><span class="line">    fileTableData.value = applyForm.fileTableData;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line">const fileList = ref([]);</span><br><span class="line">const uploadRef = ref();</span><br><span class="line">const tempList = ref([]);</span><br><span class="line">// file就是要删除的file</span><br><span class="line">const handleRemove = (file) =&gt; &#123;&#125;;</span><br><span class="line">// 不能够一味 的进行push 因为该函数会被多次调用 fileList其实就是当前最新的文件列表</span><br><span class="line">const changeFile = (file) =&gt; &#123;</span><br><span class="line">  // params参数中的file就是要上传的文件</span><br><span class="line">  // 文件类型不限制</span><br><span class="line">  // const isIMAGE = (file.raw.type === &#x27;image/jpeg&#x27; || file.raw.type === &#x27;image/png&#x27; || file.raw.type === &#x27;image/gif&#x27;)</span><br><span class="line">  const isLt25M = file.size / 1024 / 1024 &lt; 25;</span><br><span class="line">  // 文件大小限制</span><br><span class="line">  if (!isLt25M) &#123;</span><br><span class="line">    return ElMessage.error(&quot;上传文件大小不能超过25MB!&quot;);</span><br><span class="line">  &#125;</span><br><span class="line">  const reader = new FileReader();</span><br><span class="line">  reader.readAsDataURL(file.raw);</span><br><span class="line">  reader.onload = function () &#123;</span><br><span class="line">    // console.log(&#x27;文件的base64数据&#x27;, this.result)// 文件的base64数据</span><br><span class="line"></span><br><span class="line">    const fileInstance = &#123;</span><br><span class="line">      filename: &quot;&quot;,</span><br><span class="line">      size: &quot;&quot;,</span><br><span class="line">      filenameHandler: &quot;&quot;,</span><br><span class="line">      fileContent: &quot;&quot;,</span><br><span class="line">      username: applyForm.staff_name,</span><br><span class="line">      nodeCode: &quot;100&quot;,</span><br><span class="line">      uid: &quot;&quot;,</span><br><span class="line">    &#125;;</span><br><span class="line">    const milliseconds = getCurrentMilliseconds();</span><br><span class="line">    // console.log(&#x27;milliseconds&#x27;, milliseconds)</span><br><span class="line">    fileInstance.filename = file.name;</span><br><span class="line">    fileInstance.size = file.size;</span><br><span class="line">    fileInstance.filenameHandler = milliseconds + file.name;</span><br><span class="line">    fileInstance.fileContent = this.result.split(&quot;,&quot;)[1];</span><br><span class="line">    fileInstance.uid = file.uid;</span><br><span class="line">    tempList.value.push(fileInstance);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br><span class="line">// 后端要求filename加前缀New做新旧平台存储文件的区分</span><br><span class="line">//tempFileListTableData是给最后提交时用的</span><br><span class="line">const tempFileListTableData = computed(() =&gt; &#123;</span><br><span class="line">  return fileTableData.value.map((item) =&gt; &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      filename: item.filename,</span><br><span class="line">      size: item.size,</span><br><span class="line">      filenameHandler: &quot;New&quot; + item.filenameHandler,</span><br><span class="line">      fileContent: item.fileContent,</span><br><span class="line">      username: item.username,</span><br><span class="line">      nodeCode: item.nodeCode,</span><br><span class="line">      uid: item.uid,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line">//tempFileList是给上传按钮用的</span><br><span class="line">const tempFileList = computed(() =&gt; &#123;</span><br><span class="line">  return tempList.value.map((item) =&gt; &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      filename: item.filename,</span><br><span class="line">      size: item.size,</span><br><span class="line">      filenameHandler: &quot;New&quot; + item.filenameHandler,</span><br><span class="line">      fileContent: item.fileContent,</span><br><span class="line">      username: item.username,</span><br><span class="line">      nodeCode: item.nodeCode,</span><br><span class="line">      uid: item.uid,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const upload = () =&gt; &#123;&#125;;</span><br><span class="line">const handleUpload = async () =&gt; &#123;</span><br><span class="line">  try &#123;</span><br><span class="line">    await uploadAPI(&#123; fileList: tempFileList.value &#125;);</span><br><span class="line">    fileTableData.value.push(...tempList.value);</span><br><span class="line">    ElMessage.success(&quot;上传成功&quot;);</span><br><span class="line">    tempFileListTableData.value = [];</span><br><span class="line">    tempList.value = [];</span><br><span class="line">    fileList.value = [];</span><br><span class="line">  &#125; catch &#123;</span><br><span class="line">    ElMessage.error(&quot;上传失败&quot;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  uploadRef.value.submit();</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<h2 id="九、其他"><a href="#九、其他" class="headerlink" title="九、其他"></a>九、其他</h2><p>剩下的就是按照业务需求开发了</p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title>Node.js</title>
    <url>/2023/04/20/Node.js/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h1><h2 id="一、Node-js-基础"><a href="#一、Node-js-基础" class="headerlink" title="一、Node.js 基础"></a>一、Node.js 基础</h2><h3 id="1、Node-js-是什么"><a href="#1、Node-js-是什么" class="headerlink" title="1、Node.js 是什么"></a>1、Node.js 是什么</h3><p>Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境，用于后端 开发。通俗来讲，Node.js 就是一款应用程序、一款软件，它可以运行 JavaScript 。</p>
<p>JavaScript 有两种运行环境：浏览器和 Node.js。在浏览器中 JavaScript 通过调用浏览器内置的 DOM、BOM 这样的 API 函数（接口）操作 DOM 和 BOM，并被浏览器的 JavaScript 解析引擎（例如 Chrome 的 V8 引擎）所解析运行。同样在 Node.js 中也是这样，只不过他们各自的内置 API 不同</p>
<h3 id="2、Node-js-可以做什么"><a href="#2、Node-js-可以做什么" class="headerlink" title="2、Node.js 可以做什么"></a>2、Node.js 可以做什么</h3><ul>
<li>基于 Express 框架（<a href="http://www.expressjs.com.cn/%EF%BC%89%EF%BC%8C%E5%8F%AF%E4%BB%A5%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BA">http://www.expressjs.com.cn/），可以快速构建</a> <em>Web 应用</em></li>
<li>基于 Electron 框架（<a href="https://electronjs.org/%EF%BC%89%EF%BC%8C%E5%8F%AF%E4%BB%A5%E6%9E%84%E5%BB%BA%E8%B7%A8%E5%B9%B3%E5%8F%B0%E7%9A%84*%E6%A1%8C%E9%9D%A2">https://electronjs.org/），可以构建跨平台的*桌面</a> 应用*</li>
<li>基于 restify 框架（<a href="http://restify.com/%EF%BC%89%EF%BC%8C%E5%8F%AF%E4%BB%A5%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BA">http://restify.com/），可以快速构建</a> <em>API 接口项目</em></li>
<li>_读写和操作数据库_、创建实用的命令行工具辅助前端开发、etc…</li>
</ul>
<h2 id="二、计算机基础知识"><a href="#二、计算机基础知识" class="headerlink" title="二、计算机基础知识"></a>二、计算机基础知识</h2><h3 id="1、计算机基本组成"><a href="#1、计算机基本组成" class="headerlink" title="1、计算机基本组成"></a>1、计算机基本组成</h3><p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230411101544829.png" alt="image-20230411101544829"></p>
<p>计算机由硬件和软件两大部分组成。硬件主要有以下部分：</p>
<p>CPU：中央处理器，计算机最核心的配件，负责所有的计算、逻辑处理</p>
<p>内存：用来存储数据。程序、运行的游戏、打开的浏览器都要加载到内存中才能运行，程序读取的数据、计算的结果也都在内存中，内存的大小决定了能加载的东西的多少。特点是读写速度较快，断电丢失数据</p>
<p>硬盘：用来存储数据。特点是读写数据较慢，断电不丢失数据</p>
<p>主板：存放在内存中数据需要被 CPU 读取，CPU 计算完成后，还要把数据写入到内存中，然而 CPU 不能直接插在内存上，这就需要主板出马了，主板上很多个插槽，CPU 和内存都是插在主板上，主板的芯片组和总线解决了 CPU 和内存之间的通讯问题，芯片组控制数据传输的流转，决定数据从哪里流向哪里，总线是实际数据传输的告诉公里，总线速度决定了数据的传输速度</p>
<p>显卡：显卡里有 GPU 图形处理器，主要负责图形渲染，它将处理完的信号传递给显示器，最终由显示器呈现画面。使用图形界面操作系统的计算机，显卡是必不可少的。现在的主板都带了内置的显卡，如果想玩游戏、做图形渲染，一般需要一张单独的显卡，插在主板上</p>
<p>计算机软件分为系统软件和应用软件两大类。系统软件是指各类操作系统，如 Windows、Linux、UNIX、MacOS 等。操作系统本质上也是一种应用程序，用来管理和调度硬件资源。比如操作系统可以决定 CPU 处理哪些程序，比如操作系统可以与硬盘交互，读写文件。可以还包括操作系统的补丁程序及硬件驱动程序都属于系统类软件。应用程序是指用户可以使用的各种程序设计语言，以及各种程序设计语言编制的应用程序的集合。</p>
<h3 id="2、程序运行的基本流程"><a href="#2、程序运行的基本流程" class="headerlink" title="2、程序运行的基本流程"></a>2、程序运行的基本流程</h3><p>当我们打开一个程序的时候，首先系统会将程序从硬盘中载入到内存中，再交由 CPU 处理。CPU 处理完之后如果遇到图形信号将其交由显卡做进一步处理，最终呈现图像。遇到声音信号交由声卡处理最终呈现声音。</p>
<h3 id="3、进程与线程"><a href="#3、进程与线程" class="headerlink" title="3、进程与线程"></a>3、进程与线程</h3><p>进程：可以理解为程序的一次执行过程。比如打开资源管理器，我们可以看到计算机正在执行的进程</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230411104135960.png" alt="image-20230411104135960"></p>
<p>线程：线程是一个进程中执行的一个执行流。一个线程一定是属于某个进程的。一个进程可以分成很多个线程。可以将进程理解为一个完整的大的项目，而线程是这个项目中的某一个功能模块</p>
<h2 id="三、内置模块-Buffer（缓冲器）"><a href="#三、内置模块-Buffer（缓冲器）" class="headerlink" title="三、内置模块 Buffer（缓冲器）"></a>三、内置模块 Buffer（缓冲器）</h2><h3 id="1、概念"><a href="#1、概念" class="headerlink" title="1、概念"></a>1、概念</h3><p>Buffer 是一个<em>类似于数组的对象</em> ，用于表示固定长度的字节序列。 Buffer 本质是一段<em>内存空间</em>，专门用来处理 二进制数据</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230411104858494.png" alt="image-20230411104858494"></p>
<h3 id="2、特点"><a href="#2、特点" class="headerlink" title="2、特点"></a>2、特点</h3><ul>
<li>Buffer 大小固定且无法调整</li>
<li>Buffer 性能较好，可以直接对计算机内存进行操作</li>
<li>每个元素的大小为 1 字节（byte）</li>
</ul>
<h3 id="3、使用"><a href="#3、使用" class="headerlink" title="3、使用"></a>3、使用</h3><p>Buffer.alloc 创建 Buffer</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230411105148681.png" alt="image-20230411105148681"></p>
<p>Buffer.allocUnsafe 创建 Buffer</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230411105210601.png" alt="image-20230411105210601"></p>
<p>Buffer.from 创建 Buffer</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230411105231269.png" alt="image-20230411105231269"></p>
<p>toString 方法将 Buffer 转为字符串</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230411105335016.png" alt="image-20230411105335016"></p>
<p><em>toString 默认是按照 utf-8 编码方式进行转换的</em></p>
<h2 id="四、内置模块-fs-文件系统"><a href="#四、内置模块-fs-文件系统" class="headerlink" title="四、内置模块 fs 文件系统"></a>四、内置模块 fs 文件系统</h2><p>fs 全称为 file system ，称为文件系统 ，是 Node.js 中的内置模块，可以对计算机中的磁盘进行操作</p>
<h3 id="1、文件写入"><a href="#1、文件写入" class="headerlink" title="1、文件写入"></a>1、文件写入</h3><p>文件写入就是将数据保存到文件中，我们可以使用如下几个方法来实现该效果</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230411105732751.png" alt="image-20230411105732751"></p>
<p>writeFile 异步写入</p>
<p>语法： <code>fs.writeFile(file, data[, options], callback)</code></p>
<p>参数说明：</p>
<ul>
<li>file 文件路径</li>
<li>data 待写入的数据</li>
<li>options 选项设置 （可选）</li>
<li>callback 写入 err 回调</li>
</ul>
<p>返回值： undefined</p>
<p>代码示例：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// require 是 Node.js 环境中的&#x27;全局&#x27;变量，用来导入模块</span></span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>);</span><br><span class="line"><span class="comment">//将 『三人行，必有我师焉。』 写入到当前文件夹下的『座右铭.txt』文件中</span></span><br><span class="line">fs.<span class="title function_">writeFile</span>(<span class="string">&quot;./座右铭.txt&quot;</span>, <span class="string">&quot;三人行，必有我师焉。&quot;</span>, <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">//如果写入失败，则回调函数调用时，会传入错误对象，如写入成功，会传入 null</span></span><br><span class="line">  <span class="keyword">if</span> (err) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(err);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;写入成功&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>writeFileSync 同步写入</p>
<p>语法: <code>fs.writeFileSync(file, data[, options])</code></p>
<p>参数与 fs.writeFile 大体一致，只是没有 callback 参数</p>
<p>返回值： undefined</p>
<p>代码示例：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">  fs.<span class="title function_">writeFileSync</span>(<span class="string">&quot;./座右铭.txt&quot;</span>, <span class="string">&quot;三人行，必有我师焉。&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(e);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>注意 writeFile 和 writeFileSync 会将文件中原有的内容覆盖掉，因此有了追加写入</p>
<p>appendFile &#x2F; appendFileSync 追加写入</p>
<p>appendFile 作用是在文件尾部追加内容，appendFile 语法与 writeFile 语法完全相同</p>
<p>代码示例：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">fs.<span class="title function_">appendFile</span>(<span class="string">&quot;./座右铭.txt&quot;</span>, <span class="string">&quot;择其善者而从之，其不善者而改之。&quot;</span>, <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (err) <span class="keyword">throw</span> err;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;追加成功&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line">fs.<span class="title function_">appendFileSync</span>(<span class="string">&quot;./座右铭.txt&quot;</span>, <span class="string">&quot;\r\n温故而知新, 可以为师矣&quot;</span>);</span><br></pre></td></tr></table></figure>

<p>createWriteStream 流式写入</p>
<p>语法： <code>fs.createWriteStream(path[, options])</code></p>
<p>返回值： Object</p>
<p>代码示例：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> ws = fs.<span class="title function_">createWriteStream</span>(<span class="string">&quot;./观书有感.txt&quot;</span>);</span><br><span class="line">ws.<span class="title function_">write</span>(<span class="string">&quot;半亩方塘一鉴开\r\n&quot;</span>);</span><br><span class="line">ws.<span class="title function_">write</span>(<span class="string">&quot;天光云影共徘徊\r\n&quot;</span>);</span><br><span class="line">ws.<span class="title function_">write</span>(<span class="string">&quot;问渠那得清如许\r\n&quot;</span>);</span><br><span class="line">ws.<span class="title function_">write</span>(<span class="string">&quot;为有源头活水来\r\n&quot;</span>);</span><br><span class="line">ws.<span class="title function_">end</span>();</span><br></pre></td></tr></table></figure>

<p><em>程序打开一个文件是需要消耗资源的 ，流式写入可以减少打开关闭文件的次数。 流式写入方式适用于 大文件写入或者频繁写入 的场景, writeFile 适合于 写入频率较低的场景</em></p>
<p>写入文件的场景</p>
<p>文件写入 在计算机中是一个非常常见的操作，下面的场景都用到了文件写入</p>
<ul>
<li>下载文件</li>
<li>安装软件</li>
<li>保存程序日志，如 Git</li>
<li>编辑器保存文件</li>
<li>视频录制</li>
</ul>
<p>当 需要持久化保存数据 的时候，应该想到 文件写入</p>
<h3 id="2、文件读取"><a href="#2、文件读取" class="headerlink" title="2、文件读取"></a>2、文件读取</h3><p>文件读取顾名思义，就是通过程序从文件中取出其中的数据，我们可以使用如下几种方式：</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230411111625646.png" alt="image-20230411111625646"></p>
<p>readFile 异步读取</p>
<p>语法： <code>fs.readFile(path[, options], callback)</code></p>
<p>返回值： undefined</p>
<p>代码示例：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//导入 fs 模块</span></span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>);</span><br><span class="line">fs.<span class="title function_">readFile</span>(<span class="string">&quot;./座右铭.txt&quot;</span>, <span class="function">(<span class="params">err, data</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (err) <span class="keyword">throw</span> err;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">&#125;);</span><br><span class="line">fs.<span class="title function_">readFile</span>(<span class="string">&quot;./座右铭.txt&quot;</span>, <span class="string">&quot;utf-8&quot;</span>, <span class="function">(<span class="params">err, data</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (err) <span class="keyword">throw</span> err;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>readFileSync 同步读取</p>
<p>语法： <code>fs.readFileSync(path[, options])</code></p>
<p>返回值： string | Buffer</p>
<p>代码示例：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> data = fs.<span class="title function_">readFileSync</span>(<span class="string">&quot;./座右铭.txt&quot;</span>);</span><br><span class="line"><span class="keyword">let</span> data2 = fs.<span class="title function_">readFileSync</span>(<span class="string">&quot;./座右铭.txt&quot;</span>, <span class="string">&quot;utf-8&quot;</span>);</span><br></pre></td></tr></table></figure>

<p>createReadStream 流式读取</p>
<p>语法： <code>fs.createReadStream(path[, options])</code></p>
<p>返回值： Object</p>
<p>代码示例：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//创建读取流对象</span></span><br><span class="line"><span class="keyword">let</span> rs = fs.<span class="title function_">createReadStream</span>(<span class="string">&quot;./观书有感.txt&quot;</span>);</span><br><span class="line"><span class="comment">//每次取出 64k 数据后执行一次 data 回调</span></span><br><span class="line">rs.<span class="title function_">on</span>(<span class="string">&quot;data&quot;</span>, <span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(data.<span class="property">length</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//读取完毕后, 执行 end 回调</span></span><br><span class="line">rs.<span class="title function_">on</span>(<span class="string">&quot;end&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;读取完成&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>读取文件应用场景</p>
<ul>
<li>电脑开机</li>
<li>程序运行</li>
<li>编辑器打开文件</li>
<li>查看图片</li>
<li>播放视频</li>
<li>播放音乐</li>
<li>Git 查看日志</li>
<li>上传文件</li>
<li>查看聊天记录</li>
</ul>
<h3 id="3、文件移动与重命名"><a href="#3、文件移动与重命名" class="headerlink" title="3、文件移动与重命名"></a>3、文件移动与重命名</h3><p>在 Node.js 中，我们可以使用 rename 或 renameSync 来移动或重命名文件或文件夹</p>
<p>语法：<code>fs.rename(oldPath, newPath, callback)</code></p>
<p><code>fs.renameSync(oldPath, newPath)</code></p>
<p>代码示例：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">fs.<span class="title function_">rename</span>(<span class="string">&quot;./观书有感.txt&quot;</span>, <span class="string">&quot;./论语/观书有感.txt&quot;</span>, <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (err) <span class="keyword">throw</span> err;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;移动完成&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line">fs.<span class="title function_">renameSync</span>(<span class="string">&quot;./座右铭.txt&quot;</span>, <span class="string">&quot;./论语/我的座右铭.txt&quot;</span>);</span><br></pre></td></tr></table></figure>

<h3 id="4、文件删除"><a href="#4、文件删除" class="headerlink" title="4、文件删除"></a>4、文件删除</h3><p>在 Node.js 中，我们可以使用 unlink 或 unlinkSync 来删除文件</p>
<p>语法：</p>
<p><code>fs.unlink(path, callback)</code></p>
<p><code>fs.unlinkSync(path)</code></p>
<p>代码示例：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>);</span><br><span class="line">fs.<span class="title function_">unlink</span>(<span class="string">&quot;./test.txt&quot;</span>, <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (err) <span class="keyword">throw</span> err;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;删除成功&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line">fs.<span class="title function_">unlinkSync</span>(<span class="string">&quot;./test2.txt&quot;</span>);</span><br></pre></td></tr></table></figure>

<h3 id="5、文件夹操作"><a href="#5、文件夹操作" class="headerlink" title="5、文件夹操作"></a>5、文件夹操作</h3><p>借助 Node.js 的能力，我们可以对文件夹进行 创建 、 读取 、 删除 等操作</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230411112549100.png" alt="image-20230411112549100"></p>
<p>mkdir 创建文件夹</p>
<p>在 Node.js 中，我们可以使用 mkdir 或 mkdirSync 来创建文件夹</p>
<p>语法：<code>fs.mkdir(path[, options], callback)</code></p>
<p><code>fs.mkdirSync(path[, options])</code></p>
<p>示例代码：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//异步创建文件夹</span></span><br><span class="line">fs.<span class="title function_">mkdir</span>(<span class="string">&quot;./page&quot;</span>, <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (err) <span class="keyword">throw</span> err;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;创建成功&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//递归异步创建</span></span><br><span class="line">fs.<span class="title function_">mkdir</span>(<span class="string">&quot;./1/2/3&quot;</span>, &#123; <span class="attr">recursive</span>: <span class="literal">true</span> &#125;, <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (err) <span class="keyword">throw</span> err;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;递归创建成功&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//递归同步创建文件夹</span></span><br><span class="line">fs.<span class="title function_">mkdirSync</span>(<span class="string">&quot;./x/y/z&quot;</span>, &#123; <span class="attr">recursive</span>: <span class="literal">true</span> &#125;);</span><br></pre></td></tr></table></figure>

<p>readdir 读取文件夹</p>
<p>在 Node.js 中，我们可以使用 readdir 或 readdirSync 来读取文件夹</p>
<p>语法：<code>fs.readdir(path[, options], callback)</code></p>
<p><code>fs.readdirSync(path[, options])</code></p>
<p>示例代码：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//异步读取</span></span><br><span class="line">fs.<span class="title function_">readdir</span>(<span class="string">&quot;./论语&quot;</span>, <span class="function">(<span class="params">err, data</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (err) <span class="keyword">throw</span> err;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//同步读取</span></span><br><span class="line"><span class="keyword">let</span> data = fs.<span class="title function_">readdirSync</span>(<span class="string">&quot;./论语&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br></pre></td></tr></table></figure>

<p>rmdir 删除文件夹</p>
<p>在 Node.js 中，我们可以使用 rmdir 或 rmdirSync 来删除文件夹</p>
<p>语法： <code>fs.rmdir(path[, options], callback)</code></p>
<p><code>fs.rmdirSync(path[, options])</code></p>
<p>示例代码：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//异步删除文件夹</span></span><br><span class="line">fs.<span class="title function_">rmdir</span>(<span class="string">&quot;./page&quot;</span>, <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (err) <span class="keyword">throw</span> err;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;删除成功&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//异步递归删除文件夹</span></span><br><span class="line">fs.<span class="title function_">rmdir</span>(<span class="string">&quot;./1&quot;</span>, &#123; <span class="attr">recursive</span>: <span class="literal">true</span> &#125;, <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (err) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(err);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;递归删除&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//同步递归删除文件夹</span></span><br><span class="line">fs.<span class="title function_">rmdirSync</span>(<span class="string">&quot;./x&quot;</span>, &#123; <span class="attr">recursive</span>: <span class="literal">true</span> &#125;);</span><br></pre></td></tr></table></figure>

<h3 id="6、路径问题"><a href="#6、路径问题" class="headerlink" title="6、路径问题"></a>6、路径问题</h3><p>fs 模块对资源进行操作时，路径的写法有两种：</p>
<p>相对路径</p>
<ul>
<li>.&#x2F;座右铭.txt 当前目录下的座右铭.txt</li>
<li>座右铭.txt 等效于上面的写法</li>
<li>..&#x2F;座右铭.txt 当前目录的上一级目录中的座右铭.txt</li>
</ul>
<p>绝对路径</p>
<ul>
<li>D:&#x2F;Program Files windows 系统下的绝对路径</li>
<li>&#x2F;usr&#x2F;bin Linux 系统下的绝对路径</li>
</ul>
<p><em>相对路径中所谓的 当前目录 ，指的是 命令行的工作目录 ，而并非是文件的所在目录。所以当命令行的工作目录与文件所在目录不一致时，会出现一些 BUG。因此可以使用 <strong>dirname 与文件名拼接成绝对路径。</strong>dirname 与 require 类似，都是 Node.js 环境中的’全局’变量。**dirname 保存着 当前文件所在目录的绝对路径。使用 fs 模块的时候，尽量使用 **dirname 将路径转化为绝对路径，这样可以避免相对路径产生的 Bug</em></p>
<h2 id="五、内置模块-path"><a href="#五、内置模块-path" class="headerlink" title="五、内置模块 path"></a>五、内置模块 path</h2><p>path 模块提供了操作路径的功能，几个较为常用的 API：</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230411140339021.png" alt="image-20230411140339021"></p>
<p>代码示例：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&quot;path&quot;</span>);</span><br><span class="line"><span class="comment">//获取路径分隔符</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(path.<span class="property">sep</span>);</span><br><span class="line"><span class="comment">//拼接绝对路径</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(path.<span class="title function_">resolve</span>(__dirname, <span class="string">&quot;test&quot;</span>));</span><br><span class="line"><span class="comment">//解析路径</span></span><br><span class="line"><span class="keyword">let</span> pathname = <span class="string">&quot;D:/program file/nodejs/node.exe&quot;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(path.<span class="title function_">parse</span>(pathname));</span><br><span class="line"><span class="comment">//获取路径基础名称</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(path.<span class="title function_">basename</span>(pathname));</span><br><span class="line"><span class="comment">//获取路径的目录名</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(path.<span class="title function_">dirname</span>(pathname));</span><br><span class="line"><span class="comment">//获取路径的扩展名</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(path.<span class="title function_">extname</span>(pathname));</span><br></pre></td></tr></table></figure>

<h2 id="六、http"><a href="#六、http" class="headerlink" title="六、http"></a>六、http</h2><h3 id="1、http-协议"><a href="#1、http-协议" class="headerlink" title="1、http 协议"></a>1、http 协议</h3><p>HTTP（hypertext transport protocol）协议，中文叫超文本传输协议。是一种基于 TCP&#x2F;IP 的应用层通信协议，它详细规定了 浏览器 和万维网 服务器 之间互相通信的规则</p>
<p>协议中主要规定了两个方面的内容</p>
<ul>
<li>客户端：用来向服务器发送数据，可以被称之为请求报文</li>
<li>服务端：向客户端返回数据，可以被称之为响应报文</li>
</ul>
<p>请求报文的组成</p>
<ul>
<li>请求行</li>
<li>请求头</li>
<li>空行</li>
<li>请求体</li>
</ul>
<p>HTTP 的请求行</p>
<ul>
<li>请求方法（get、post、put、delete 等）</li>
<li>请求 URL（统一资源定位器）</li>
<li>HTTP 协议版本号</li>
</ul>
<p>HTTP 请求头</p>
<p>常见的请求头有：</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230411141601604.png" alt="image-20230411141601604"></p>
<p>HTTP 的请求体</p>
<p>请求体内容的格式是非常灵活的， （可以是空）&#x3D;&#x3D;&gt; GET 请求， （也可以是字符串，还可以是 JSON）&#x3D;&#x3D;&#x3D;&gt; POST 请求</p>
<p>例如：</p>
<ul>
<li>字符串：keywords&#x3D;手机&amp;price&#x3D;2000</li>
<li>JSON：{“keywords”:”手机”,”price”:2000}</li>
</ul>
<p>响应报文的组成</p>
<p>响应行</p>
<p><em>HTTP&#x2F;1.1 200 OK</em></p>
<ul>
<li>HTTP&#x2F;1.1：HTTP 协议版本号</li>
<li>200：响应状态码</li>
<li>OK：响应状态描述</li>
</ul>
<p>响应头</p>
<ul>
<li>Cache-Control:缓存控制 private 私有的，只允许客户端缓存数据</li>
<li>Connection: 链接设置</li>
<li>Content-Type:text&#x2F;html;charset&#x3D;utf-8 设置响应体的数据类型以及字符集,响应体为 html，字符集 utf-8</li>
<li>Content-Length:响应体的长度，单位为字节</li>
</ul>
<p>空行</p>
<p>响应体</p>
<p>响应体内容的类型是非常灵活的，常见的类型有 HTML、CSS、JS、图片、JSON</p>
<h3 id="2、IP-地址"><a href="#2、IP-地址" class="headerlink" title="2、IP 地址"></a>2、IP 地址</h3><p>IP 地址就是接入互联网的每台计算机的唯一地址，用来标识接入互联网的设备。通常用“点分十进制”表示成（a.b.c.d）的形式，其中，a,b,c,d 都是 0~255 之间的十进制整数。例如：用 点分十进表示的 IP 地址 （192.168.1.1）</p>
<p>共享 IP</p>
<p>为了更好的利用 IP 地址，节省资源。以家庭为例，手机、电脑、打印机、电视连接到同一路由器，路由器为他们分配各自的 IP，这就形成了一个<em>局域网（私网）</em>，局域网中的设备之间可以互相通信。为了能够访问外部资源，还需接入到互联网才行。这样一个家庭中的所有设备就可以通过一个<em>公网（广域网）</em>IP 访问互联网了，实现了 IP 共享</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230411143956542.png" alt="image-20230411143956542"></p>
<p>此外，还有一类 IP 称为本机回环 IP 地址，比如 127.0.0.1，访问这个 IP 地址实际上就是访问本机，等价于 loacalhost</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230411144603448.png" alt="image-20230411144603448"></p>
<p>端口号</p>
<p>在一台电脑中，可以运行成百上千个 web 服务。每个 web 服 务都对应一个唯一的端口号。客户端发送过来的 网络请求，通过端口号，可以 被准确地交给对应的 web 服务进行处理</p>
<p>域名和域名服务器</p>
<p>尽管 IP 地址能够唯一地标记网络上的计算机，但 IP 地址是一长串数字， 不直观，而且不便于记忆，于是人们又发明了另一套 字符型的地址方案，即所谓的域名（Domain Name）地址。 IP 地址和域名是一一对应的关系，这就好比人名和身份证 ID 一样。这份对应关系存放在一种叫做域名服务器(DNS，Domain name server)的电脑中。使用者只需通过好记的域名访问对应的服务器即可，对应的转换工作由域名服务器 实现。因此，域名服务器就是提供 IP 地址和域名之间的转换服务的服务器</p>
<h3 id="3、创建-http-服务"><a href="#3、创建-http-服务" class="headerlink" title="3、创建 http 服务"></a>3、创建 http 服务</h3><p>使用 nodejs 创建 HTTP 服务</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1. 导入 http 模块</span></span><br><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">&quot;http&quot;</span>);</span><br><span class="line"><span class="comment">//2. 创建服务对象 create 创建 server 服务</span></span><br><span class="line"><span class="comment">// request 意为请求. 是对请求报文的封装对象, 通过 request 对象可以获得请求报文的数据</span></span><br><span class="line"><span class="comment">// response 意为响应. 是对响应报文的封装对象, 通过 response 对象可以设置响应报文</span></span><br><span class="line"><span class="keyword">const</span> server = http.<span class="title function_">createServer</span>(<span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  response.<span class="title function_">end</span>(<span class="string">&quot;Hello HTTP server&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//3. 监听端口, 启动服务</span></span><br><span class="line">server.<span class="title function_">listen</span>(<span class="number">9000</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;服务已经启动, 端口 9000 监听中...&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>注意事项</p>
<p>响应内容中文乱码的解决办法</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">response.<span class="title function_">setHeader</span>(<span class="string">&quot;content-type&quot;</span>, <span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br></pre></td></tr></table></figure>

<p>HTTP 协议默认端口是 80 。HTTPS 协议的默认端口是 443, HTTP 服务开发常用端口有 3000， 8080，8090，9000 等</p>
<p>获取 HTTP 请求报文</p>
<p>想要获取请求的数据，需要通过 request 对象</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230411145259166.png" alt="image-20230411145259166"></p>
<p>注意事项：</p>
<ul>
<li>request.url 只能获取路径以及查询字符串(端口号以后的内容)，无法获取 URL 中的域名以及协议的内容</li>
<li>request.headers 将请求信息转化成一个对象，并将属性名都转化成了『小写』</li>
<li>关于路径：如果访问网站的时候，只填写了 IP 地址或者是域名信息，此时请求的路径为『 &#x2F; 』</li>
<li>关于 favicon.ico：这个请求是属于浏览器自动发送的请求</li>
</ul>
<p>设置 HTTP 响应报文</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230411145717348.png" alt="image-20230411145717348"></p>
<p>练习</p>
<p>搭建 HTTP 服务，响应一个 4 行 3 列的表格，并且要求表格有 隔行换色效果 ，且 点击 单元格能 高亮显示</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//导入 http 模块</span></span><br><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">&quot;http&quot;</span>);</span><br><span class="line"><span class="comment">//创建服务对象</span></span><br><span class="line"><span class="keyword">const</span> server = http.<span class="title function_">createServer</span>(<span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  response.<span class="title function_">end</span>(<span class="string">`</span></span><br><span class="line"><span class="string">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="string">&lt;html lang=&quot;en&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;head&gt;</span></span><br><span class="line"><span class="string">&lt;meta charset=&quot;UTF-8&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;title&gt;Document&lt;/title&gt;</span></span><br><span class="line"><span class="string">&lt;style&gt;</span></span><br><span class="line"><span class="string">td&#123;</span></span><br><span class="line"><span class="string">padding: 20px 40px;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">table tr:nth-child(odd)&#123;</span></span><br><span class="line"><span class="string">background: #aef;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">table tr:nth-child(even)&#123;</span></span><br><span class="line"><span class="string">background: #fcb;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">table, td&#123;</span></span><br><span class="line"><span class="string">border-collapse: collapse;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&lt;/style&gt;</span></span><br><span class="line"><span class="string">&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">&lt;table border=&quot;1&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;</span></span><br><span class="line"><span class="string">&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;</span></span><br><span class="line"><span class="string">&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;</span></span><br><span class="line"><span class="string">&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;</span></span><br><span class="line"><span class="string">&lt;/table&gt;</span></span><br><span class="line"><span class="string">&lt;script&gt;</span></span><br><span class="line"><span class="string">//获取所有的 td</span></span><br><span class="line"><span class="string">let tds = document.querySelectorAll(&#x27;td&#x27;);</span></span><br><span class="line"><span class="string">//遍历</span></span><br><span class="line"><span class="string">tds.forEach(item =&gt; &#123;</span></span><br><span class="line"><span class="string">item.onclick = function()&#123;</span></span><br><span class="line"><span class="string">this.style.background = &#x27;#222&#x27;;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;)</span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br><span class="line"><span class="string">`</span>); <span class="comment">//设置响应体</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//监听端口, 启动服务</span></span><br><span class="line">server.<span class="title function_">listen</span>(<span class="number">9000</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;服务已经启动....&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>网页资源的基本加载过程</p>
<p>网页资源的加载都是循序渐进的，首先获取 HTML 的内容， 然后解析 HTML 在发送其他资源的请求，如 CSS，Javascript，图片等</p>
<p>静态资源服务</p>
<p>静态资源是指 内容长时间不发生改变的资源 ，例如图片，视频，CSS 文件，JS 文件，HTML 文件，字体文 件等</p>
<p>动态资源是指 内容经常更新的资源 ，例如百度首页，网易首页，京东搜索列表页面等</p>
<p>网站根目录或静态资源目录</p>
<p>HTTP 服务在哪个文件夹中寻找静态资源，那个文件夹就是 静态资源目录 ，也称之为 网站根目录</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">require</span>(<span class="string">&quot;http&quot;</span>)</span><br><span class="line">  .<span class="title function_">createServer</span>(<span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">//获取请求的方法已经路径</span></span><br><span class="line">    <span class="keyword">let</span> &#123; url, method &#125; = request;</span><br><span class="line">    <span class="comment">//判断请求方式以及请求路径</span></span><br><span class="line">    <span class="keyword">if</span> (method == <span class="string">&quot;GET&quot;</span> &amp;&amp; url == <span class="string">&quot;/index.html&quot;</span>) &#123;</span><br><span class="line">      <span class="comment">//需要响应文件中的内容</span></span><br><span class="line">      <span class="keyword">let</span> data = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>).<span class="title function_">readFileSync</span>(__dirname + <span class="string">&quot;/index.html&quot;</span>);</span><br><span class="line">      response.<span class="title function_">end</span>(data);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (method == <span class="string">&quot;GET&quot;</span> &amp;&amp; url == <span class="string">&quot;/css/app.css&quot;</span>) &#123;</span><br><span class="line">      <span class="comment">//需要响应文件中的内容</span></span><br><span class="line">      <span class="keyword">let</span> data = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>).<span class="title function_">readFileSync</span>(__dirname + <span class="string">&quot;/public/css/app.css&quot;</span>);</span><br><span class="line">      response.<span class="title function_">end</span>(data);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (method == <span class="string">&quot;GET&quot;</span> &amp;&amp; url == <span class="string">&quot;/js/app.js&quot;</span>) &#123;</span><br><span class="line">      <span class="comment">//需要响应文件中的内容</span></span><br><span class="line">      <span class="keyword">let</span> data = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>).<span class="title function_">readFileSync</span>(__dirname + <span class="string">&quot;/public/js/app.js&quot;</span>);</span><br><span class="line">      response.<span class="title function_">end</span>(data);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">//404响应</span></span><br><span class="line">      response.<span class="property">statusCode</span> = <span class="number">404</span>;</span><br><span class="line">      response.<span class="title function_">end</span>(<span class="string">&quot;&lt;h1&gt;404 Not Found&lt;/h1&gt;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">  .<span class="title function_">listen</span>(<span class="number">80</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;80端口正在启动中....&quot;</span>);</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure>

<p>上面这段代码根据路径和方法相应不同的资源，显然这种方式不够完美，我们需要更简洁的方法</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">require</span>(<span class="string">&quot;http&quot;</span>)</span><br><span class="line">  .<span class="title function_">createServer</span>(<span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">//获取请求的方法已经路径</span></span><br><span class="line">    <span class="keyword">let</span> &#123; url, method &#125; = request;</span><br><span class="line">    <span class="comment">//文件夹路径</span></span><br><span class="line">    <span class="keyword">let</span> rootDir = __dirname + <span class="string">&quot;/public&quot;</span>;</span><br><span class="line">    <span class="comment">//拼接文件路径</span></span><br><span class="line">    <span class="keyword">let</span> filePath = rootDir + url;</span><br><span class="line">    <span class="comment">//读取文件内容</span></span><br><span class="line">    fs.<span class="title function_">readFile</span>(filePath, <span class="function">(<span class="params">err, data</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">//判断</span></span><br><span class="line">      <span class="keyword">if</span> (err) &#123;</span><br><span class="line">        <span class="comment">//如果出现错误，响应404状态码</span></span><br><span class="line">        response.<span class="property">statusCode</span> = <span class="number">404</span>;</span><br><span class="line">        response.<span class="title function_">end</span>(<span class="string">&quot;&lt;h1&gt;404 Not Found&lt;/h1&gt;&quot;</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//响应文件内容</span></span><br><span class="line">        response.<span class="title function_">end</span>(data);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;)</span><br><span class="line">  .<span class="title function_">listen</span>(<span class="number">80</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;80端口正在启动中....&quot;</span>);</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure>

<p><em>通过这种方法可以根据请求路径动态响应资源</em></p>
<p>设置资源类型（mime 类型）</p>
<p>媒体类型（通常称为 Multipurpose Internet Mail Extensions 或 MIME 类型 ）是一种标准，用来表示文档、 文件或字节流的性质和格式。</p>
<p>HTTP 服务可以设置响应头 Content-Type 来表明响应体的 MIME 类型，浏览器会根据该类型决定如何处理 资源</p>
<p>下面是常见文件对应的 mime 类型</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230411150517785.png" alt="image-20230411150517785"></p>
<p>GET 和 POST</p>
<ul>
<li>GET 主要用来获取数据，POST 主要用来提交数据</li>
<li>GET 带参数请求是将参数缀到 URL 之后，在地址栏中输入 url 访问网站就是 GET 请求， POST 带参数请求是将参数放到请求体中</li>
<li>POST 请求相对 GET 安全一些，因为在浏览器中参数会暴露在地址栏</li>
<li>GET 请求大小有限制，一般为 2K，而 POST 请求则没有大小限制</li>
</ul>
<p>以下均为 GET 请求：</p>
<ul>
<li>在地址栏直接输入 url 访问</li>
<li>点击 a 链接</li>
<li>link 标签引入 css</li>
<li>script 标签引入 js</li>
<li>img 标签引入图片</li>
<li>form 标签中的 method 为 get （不区分大小写）</li>
<li>ajax 中的 get 请求</li>
</ul>
<p>以下均为 POST 请求：</p>
<ul>
<li>form 标签中的 method 为 post（不区分大小写）</li>
<li>AJAX 的 post 请求</li>
</ul>
<h2 id="七、模块化"><a href="#七、模块化" class="headerlink" title="七、模块化"></a>七、模块化</h2><p>模块化是指解决一个复杂问题时，自顶向下逐层把系统划分成若干模块的过 程。对于整个系统来说，模块是可组 合、分解和更换的单元 编程领域中的模块化，就是遵守固定的规则，把一个大文件拆成独立并互相 依赖的多个小模块</p>
<p>把代码进行模块化拆分的好处</p>
<ul>
<li>防止命名冲突</li>
<li>高复用性</li>
<li>高维护性</li>
</ul>
<p>common.js 暴露数据</p>
<ul>
<li>module.exports &#x3D; value</li>
<li>exports.name &#x3D; value</li>
</ul>
<p>注意</p>
<ul>
<li>module.exports 可以暴露 任意 数据</li>
<li>不能使用 exports &#x3D; value 的形式暴露数据。exports &#x3D; module.exports &#x3D; {} ，require 返回的永远是目标模块中 module.exports 的值（因为 exports 和 module.exports 是对象，存的是引用。如果直接使用 exports &#x3D; value 赋值，相当于将 exports 与原来 module.exports 的链接断开了 ）</li>
</ul>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230411154508882.png" alt="image-20230411154508882"></p>
<p>common.js 导入（引入、加载）模块</p>
<p>在模块中使用 require 传入文件路径即可引入文件</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> test = <span class="built_in">require</span>(<span class="string">&quot;./me.js&quot;</span>);</span><br></pre></td></tr></table></figure>

<p>require 使用的一些注意事项：</p>
<ul>
<li>对于自定义模块，导入时路径建议写相对路径 ，且不能省略 .&#x2F; 和 ..&#x2F;</li>
<li>js 和 json 文件导入时可以不用写后缀，c&#x2F;c++编写的 node 扩展文件也可以不写后缀，但是一 般用不到</li>
<li>如果导入的路径是个文件夹，则会 首先 检测该文件夹下 package.json 文件中 main 属性对应 的文件。如果存在则导入，反之如果文件不存在会报错。如果 main 属性不存在，或者 package.json 不存在，则会尝试导入文件夹下的 index.js 和 index.json 。如果还是没找到，就会报错</li>
<li>导入 node.js 内置模块时，直接 require 模块的名字即可，无需加路径</li>
</ul>
<h2 id="八、包管理工具"><a href="#八、包管理工具" class="headerlink" title="八、包管理工具"></a>八、包管理工具</h2><p>包管理工具是一个通用的概念，很多编程语言都有包管理工具</p>
<p>npm 全称 Node Package Manager ，翻译为中文意思是『Node 的包管理工具』。它是 node.js 官方内置的包管理工具</p>
<p>npm 初始化</p>
<p>npm init 命令的作用是将文件夹初始化为一个『包』， 交互式创建 package.json 文件。package.json 是包的配置文件，每个包都必须要有 package.json。也可以使用 npm init -y 或者 npm init –yes 极速创建 package.json。下面是一个 package.json 的示例</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1-npm&quot;</span><span class="punctuation">,</span> #包的名字</span><br><span class="line"><span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1.0.0&quot;</span><span class="punctuation">,</span> #包的版本</span><br><span class="line"><span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> #包的描述</span><br><span class="line"><span class="attr">&quot;main&quot;</span><span class="punctuation">:</span> <span class="string">&quot;index.js&quot;</span><span class="punctuation">,</span> #包的入口文件</span><br><span class="line"><span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> #脚本配置</span><br><span class="line"><span class="attr">&quot;test&quot;</span><span class="punctuation">:</span> <span class="string">&quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;author&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> #作者</span><br><span class="line"><span class="attr">&quot;license&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ISC&quot;</span> #开源证书</span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>node<em>modules 文件夹用来存放所有已安装到项目中的包。</em>注意：今后在项目开发中，一定要把 node<em>modules 文件夹，添加 到 .gitignore 忽略文件中</em></p>
<p>package-lock.json 配置文件用来记录 node_modules 目录下的每一个包 的下载信息，例如包的名字、版本号、下载地址等</p>
<p>生产依赖与开发依赖</p>
<p>我们可以在安装时设置选项来区分 依赖的类型 ，目前分为两类：</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230412111619541.png" alt="image-20230412111619541"></p>
<p>全局安装</p>
<p>我们可以执行安装选项 -g 进行全局安装</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm i -g nodemon</span><br></pre></td></tr></table></figure>

<p>全局安装完成之后就可以在命令行的任何位置运行 nodemon 命令</p>
<p>环境变量 Path</p>
<p>Path 是操作系统的一个环境变量，可以设置一些文件夹的路径，在当前工作目录下找不到可执行文件 时，就会在环境变量 Path 的目录中挨个的查找，如果找到则执行，如果没有找到就会报错</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230412112453900.png" alt="image-20230412112453900"></p>
<p>如果希望某个程序在任何工作目录下都能正常运行，可以将该程序的所在目录配置到环境 变量 Path 中</p>
<p>安装包依赖</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm i</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>

<p>安装指定版本的包</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 格式</span></span><br><span class="line">npm i &lt;包名@版本号&gt;</span><br><span class="line"><span class="comment">## 示例</span></span><br><span class="line">npm i jquery@1.11.2</span><br></pre></td></tr></table></figure>

<p>删除依赖</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 局部删除</span></span><br><span class="line">npm remove <span class="built_in">uniq</span></span><br><span class="line">npm r <span class="built_in">uniq</span></span><br><span class="line"><span class="comment">## 全局删除</span></span><br><span class="line">npm remove -g nodemon</span><br></pre></td></tr></table></figure>

<p>yarn</p>
<p>yarn 是由 Facebook 在 2016 年推出的新的 Javascript 包管理工具，官方网址：<a href="https://yarnpkg.com/">https://yarnpkg.com/</a></p>
<p>yarn 官方宣称的一些特点</p>
<ul>
<li>速度超快：yarn 缓存了每个下载过的包，所以再次使用时无需重复下载。 同时利用并行下载以最大 化资源利用率，因此安装速度更快</li>
<li>超级安全：在执行代码之前，yarn 会通过算法校验每个安装包的完整性</li>
<li>超级可靠：使用详细、简洁的锁文件格式和明确的安装算法，yarn 能够保证在不同系统上无差异的 工作</li>
</ul>
<p>yarn 常用命令</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230412120849488.png" alt="image-20230412120849488"></p>
<p>nvm</p>
<p>nvm 全称 Node Version Manager 顾名思义它是用来管理 node 版本的工具，方便切换不同版本的 Node.js</p>
<p>nvm 的使用非常的简单，跟 npm 的使用方法类似</p>
<p>首先先下载 nvm，下载地址 <a href="https://github.com/coreybutler/nvm-windows/releases%EF%BC%8C%E9%80%89%E6%8B%A9">https://github.com/coreybutler/nvm-windows/releases，选择</a> nvm-setup.exe 下载即可</p>
<p>常用命令</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230412121724550.png" alt="image-20230412121724550"></p>
<h2 id="九、express-框架"><a href="#九、express-框架" class="headerlink" title="九、express 框架"></a>九、express 框架</h2><p>Express 是基于 Node.js 平台，快速、开放、极简的 Web 开发框架<a href="http://www.expressjs.com.cn/">http://www.expressjs.com.cn/</a></p>
<p>对于前端程序员来说，最常见的两种服务器分别是：</p>
<ul>
<li>Web 网站服务器：专门对外提供 Web 网页资源的服务器</li>
<li>API 接口服务器：专门对外提供 API 接口的服务器</li>
</ul>
<p>使用 Express，我们可以方便、快速的创建 Web 网站的服务器或 API 接口 的服务器</p>
<h3 id="1、express-使用"><a href="#1、express-使用" class="headerlink" title="1、express 使用"></a>1、express 使用</h3><p>express 本身是一个 npm 包，所以可以通过 npm 安装</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm i express</span><br></pre></td></tr></table></figure>

<p>express 初体验</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1. 导入 express</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="comment">//2. 创建应用对象</span></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="comment">//3. 创建路由规则</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/home&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.<span class="title function_">send</span>(<span class="string">&quot;hello express server&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//4. 监听端口 启动服务</span></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">3000</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;服务已经启动, 端口监听为 3000...&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>在浏览器访问 <a href="http://127.0.0.1:3000/home">http://127.0.0.1:3000/home</a></p>
<h3 id="2、express-路由"><a href="#2、express-路由" class="headerlink" title="2、express 路由"></a>2、express 路由</h3><p>官方定义： 路由确定了应用程序如何响应客户端对特定端点的请求</p>
<p>路由的使用</p>
<p>一个路由的组成有请求方法 ， 路径和回调函数 组成</p>
<p>express 中提供了一系列方法，可以很方便的使用路由，使用格式如下：</p>
<p>app.<method>(path，callback)</p>
<p>代码示例：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//导入 express</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="comment">//创建应用对象</span></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="comment">//创建 get 路由</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/home&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.<span class="title function_">send</span>(<span class="string">&quot;网站首页&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//首页路由</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.<span class="title function_">send</span>(<span class="string">&quot;我才是真正的首页&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//创建 post 路由</span></span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&quot;/login&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.<span class="title function_">send</span>(<span class="string">&quot;登录成功&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//匹配所有的请求方法</span></span><br><span class="line">app.<span class="title function_">all</span>(<span class="string">&quot;/search&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.<span class="title function_">send</span>(<span class="string">&quot;1 秒钟为您找到相关结果约 100,000,000 个&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//自定义 404 路由</span></span><br><span class="line">app.<span class="title function_">all</span>(<span class="string">&quot;*&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.<span class="title function_">send</span>(<span class="string">&quot;&lt;h1&gt;404 Not Found&lt;/h1&gt;&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//监听端口 启动服务</span></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">3000</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;服务已经启动, 端口监听为 3000&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>路由的匹配过程</p>
<p>每当一个请求到达服务器之后，需要先经过路由的匹配，只有匹配成功之后， 才会调用对应的处理函数</p>
<p>在匹配时，会按照路由的顺序进行匹配，如果请求类型和请求的 URL 同时 匹配成功，则 Express 会将这次请求，转交给对应的 function 函数进行处理</p>
<p>注意</p>
<ul>
<li>路由匹配按照定义的先后顺序进行匹配</li>
<li>请求类型和请求的 URL 同时匹配成功， 才会调用对应的处理函数</li>
</ul>
<p>模块化路由</p>
<p>为了方便对路由进行模块化的管理，Express 不建议将路由直接挂载到 app 上，而是推荐将路由抽离为单独的模块。 将路由抽离为单独模块的步骤如下：</p>
<ul>
<li>创建路由模块对应的 .js 文件</li>
<li>调用 express.Router() 函数创建路由对象</li>
<li>向路由对象上挂载具体的路由</li>
<li>使用 module.exports 向外共享路由对象</li>
<li>使用 app.use() 函数注册路由模块</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1. 导入 express</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="comment">//2. 创建路由器对象</span></span><br><span class="line"><span class="keyword">const</span> router = express.<span class="title class_">Router</span>();</span><br><span class="line"><span class="comment">//3. 在 router 对象身上添加路由</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&quot;/&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.<span class="title function_">send</span>(<span class="string">&quot;首页&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&quot;/cart&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.<span class="title function_">send</span>(<span class="string">&quot;购物车&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//4. 暴露</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = router;</span><br></pre></td></tr></table></figure>

<p>express 中的 Router 是一个完整的中间件和路由系统，可以看做是一个小型的 app 对象</p>
<p>导入使用路由</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="comment">//5.引入子路由文件</span></span><br><span class="line"><span class="keyword">const</span> homeRouter = <span class="built_in">require</span>(<span class="string">&quot;./routes/homeRouter&quot;</span>);</span><br><span class="line"><span class="comment">//6.设置和使用中间件</span></span><br><span class="line">app.<span class="title function_">use</span>(homeRouter);</span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">3000</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;3000 端口启动....&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>为路由模块添加前缀</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1、导入路由模块</span></span><br><span class="line"><span class="keyword">const</span> userRouter = <span class="built_in">require</span>(<span class="string">&quot;./router/user.js&quot;</span>);</span><br><span class="line"><span class="comment">//2、使用app.use()注册路由模块，并添加统一的访问前缀 /api</span></span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&quot;/api&quot;</span>, userRouter);</span><br></pre></td></tr></table></figure>

<p>获取 URL 中的查询参数</p>
<p>通过 req.query 对象，可以访问到客户端通过查询字符串的形式，发送到 服务器的参数：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// req.query默认是一个空对象</span></span><br><span class="line">  <span class="comment">//  客户端使用?name=zs&amp;age=20这种查询字符串的形式发送到服务器的参数，</span></span><br><span class="line">  <span class="comment">//  可以通过req.query对象访问到</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(req.<span class="property">query</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>获取 URL 中的动态参数</p>
<p>通过 req.params 对象，可以访问到 URL 中，通过 : 匹配到的动态参数</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/user/:id&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// req.params默认是一个空对象</span></span><br><span class="line">  <span class="comment">//  里面存放着通过:动态匹配到的参数值</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(req.<span class="property">params</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>express 响应设置</p>
<p>express 框架封装了一些 API 来方便给客户端响应数据，并且兼容原生 HTTP 模块的获取方式</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//获取请求的路由规则</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/response&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">//1. express 中设置响应的方式兼容 HTTP 模块的方式</span></span><br><span class="line">  res.<span class="property">statusCode</span> = <span class="number">404</span>;</span><br><span class="line">  res.<span class="property">statusMessage</span> = <span class="string">&quot;xxx&quot;</span>;</span><br><span class="line">  res.<span class="title function_">setHeader</span>(<span class="string">&quot;abc&quot;</span>, <span class="string">&quot;xyz&quot;</span>);</span><br><span class="line">  res.<span class="title function_">write</span>(<span class="string">&quot;响应体&quot;</span>);</span><br><span class="line">  res.<span class="title function_">end</span>(<span class="string">&quot;xxx&quot;</span>);</span><br><span class="line">  <span class="comment">//2. express 的响应方法</span></span><br><span class="line">  res.<span class="title function_">status</span>(<span class="number">500</span>); <span class="comment">//设置响应状态码</span></span><br><span class="line">  res.<span class="title function_">set</span>(<span class="string">&quot;xxx&quot;</span>, <span class="string">&quot;yyy&quot;</span>); <span class="comment">//设置响应头</span></span><br><span class="line">  res.<span class="title function_">send</span>(<span class="string">&quot;中文响应不乱码&quot;</span>); <span class="comment">//设置响应体</span></span><br><span class="line">  <span class="comment">//连贯操作</span></span><br><span class="line">  res.<span class="title function_">status</span>(<span class="number">404</span>).<span class="title function_">set</span>(<span class="string">&quot;xxx&quot;</span>, <span class="string">&quot;yyy&quot;</span>).<span class="title function_">send</span>(<span class="string">&quot;你好朋友&quot;</span>);</span><br><span class="line">  <span class="comment">//3. 其他响应</span></span><br><span class="line">  res.<span class="title function_">redirect</span>(<span class="string">&quot;http://atguigu.com&quot;</span>); <span class="comment">//重定向</span></span><br><span class="line">  res.<span class="title function_">download</span>(<span class="string">&quot;./package.json&quot;</span>); <span class="comment">//下载响应</span></span><br><span class="line">  res.<span class="title function_">json</span>(); <span class="comment">//响应 JSON</span></span><br><span class="line">  res.<span class="title function_">sendFile</span>(__dirname + <span class="string">&quot;/home.html&quot;</span>); <span class="comment">//响应文件内容</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>注意，使用 res.send()发送的中文并没有乱码，这是因为 express 自动在响应头添加了<em>res.setHeader(‘content-type’,’text&#x2F;html;charset&#x3D;utf-8’);</em></p>
<h3 id="3、express-中间件"><a href="#3、express-中间件" class="headerlink" title="3、express 中间件"></a>3、express 中间件</h3><p>中间件（Middleware）本质是一个回调函数</p>
<p>中间件函数 可以像路由回调一样访问 请求对象（request） ， 响应对象（response）</p>
<p>中间件的作用 就是 使用函数封装公共操作，简化代码</p>
<p>当一个请求到达 Express 的服务器之后，可以连续调用多个中间件，从而 对这次请求进行预处理</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230412153639589.png" alt="image-20230412153639589"></p>
<p><em>注意：中间件函数的形参列表中，必须包含 next 参数。而路由处理函数中 只包含 req 和 res。**next 函数是实现多个中间件连续调用的关键，它表示把流转关系转交给下 一个中间件或路由</em></p>
<p>定义全局中间件</p>
<p>客户端发起的任何请求，到达服务器之后，都会触发的中间件，叫做全局生 效的中间件</p>
<p>声明中间件函数</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> recordMiddleware = <span class="keyword">function</span> (<span class="params">request, response, next</span>) &#123;</span><br><span class="line">  <span class="comment">//实现功能代码</span></span><br><span class="line">  <span class="comment">//.....</span></span><br><span class="line">  <span class="comment">//执行next函数(当如果希望执行完中间件函数之后，仍然继续执行路由中的回调函数，必须调用next)</span></span><br><span class="line">  <span class="title function_">next</span>();</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>应用中间件</p>
<p>通过调用 app.use(中间件函数)，即可定义一个全局生效的中间件</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">app.<span class="title function_">use</span>(recordMiddleware);</span><br></pre></td></tr></table></figure>

<p>声明时可以直接将匿名函数传递给 use</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">app.<span class="title function_">use</span>(<span class="keyword">function</span> (<span class="params">request, response, next</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;定义第一个中间件&quot;</span>);</span><br><span class="line">  <span class="title function_">next</span>();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>定义多个全局中间件</p>
<p>可以使用 app.use() 连续定义多个全局中间件。客户端请求到达服务器之 后，会按照中间件定义的先后顺序依次进行调用</p>
<p>局部生效的中间件(路由中间件)</p>
<p>如果只需要对某一些路由进行功能封装 ，则就需要路由中间件。路由中间件不使用 app.use() 定义,调用格式如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/路径&quot;</span>, <span class="string">`中间件函数`</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;&#125;);</span><br><span class="line"><span class="comment">// 使用多个路由中间件</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/路径&quot;</span>, <span class="string">`中间件函数1`</span>, <span class="string">`中间件函数2`</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;&#125;);</span><br></pre></td></tr></table></figure>

<p>中间件的 几个使用注意事项</p>
<ul>
<li>一定要在路由之前注册中间件</li>
<li>客户端发送过来的请求，可以连续调用多个中间件进行处理</li>
<li>执行完中间件的业务代码之后，不要忘记调用 next() 函数</li>
<li>为了防止代码逻辑混乱，调用 next() 函数后不要再写额外的代码</li>
<li>连续调用多个中间件时，多个中间件之间，共享 req 和 res 对象</li>
</ul>
<p>Express 内置的中间件</p>
<p>自 Express 4.16.0 版本开始，Express 内置了 3 个常用的中间件，极大 的提高了 Express 项目的开发效率和体验</p>
<ul>
<li>express.static 快速托管静态资源的内置中间件，例如： HTML 文件、 图片、CSS 样式等（无兼容性）</li>
<li>express.json 解析 JSON 格式的请求体数据（有兼容性，仅在 4.16.0+ 版本中可用）</li>
<li>express.urlencoded 解析 URL-encoded 格式的请求体数据（有兼容性， 仅在 4.16.0+ 版本中可用）</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//引入express框架</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="comment">//创建服务对象</span></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="comment">// 配置解析application/json格式数据的内置中间件</span></span><br><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">json</span>());</span><br><span class="line"><span class="comment">// 配置解析application/x-www-form-urlencoded格式数据的内置中间件</span></span><br><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">urlencoded</span>(&#123; <span class="attr">extended</span>: <span class="literal">false</span> &#125;));</span><br><span class="line"><span class="comment">//静态资源中间件的设置，将当前文件夹下的public目录作为网站的根目录</span></span><br><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">static</span>(<span class="string">&quot;./public&quot;</span>)); <span class="comment">//当然这个目录中都是一些静态资源</span></span><br><span class="line"><span class="comment">//如果访问的内容经常变化，还是需要设置路由</span></span><br><span class="line"><span class="comment">//但是，在这里有一个问题，如果public目录下有index.html文件，单独也有index.html的路由，</span></span><br><span class="line"><span class="comment">//则谁书写在前，优先执行谁</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/index.html&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  response.<span class="title function_">send</span>(<span class="string">&quot;首页&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//监听端口</span></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">3000</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;3000 端口启动....&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h3 id="4、防盗链"><a href="#4、防盗链" class="headerlink" title="4、防盗链"></a>4、防盗链</h3><p>我们在访问第三方资源（如图片）的时候，有时可能会出现资源 403、404 的情况，这是因为服务端做了防盗链处理，只允许指定的域名访问资源</p>
<p>服务端一般使用 Referer 请求头识别访问来源，然后处理资源访问。</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230413085043838.png" alt="image-20230413085043838"></p>
<p><em>Referer 是 HTTP 请求头的一部分，当浏览器向 Web 服务器发送请求的时候，一般会带上 Referer，它包含了当前请求资源的来源页面的地址。服务端一般使用 Referer 请求头识别访问来源，可能会以此进行统计分析、日志记录以及缓存优化等。</em></p>
<p>实现防盗链</p>
<p>在服务端只需通过中间件即可实现防盗链</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">app.<span class="title function_">use</span>(<span class="function">(<span class="params">req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">//检测请求头中的referer是否为127.0.0.1</span></span><br><span class="line">  <span class="comment">//获取referer</span></span><br><span class="line">  <span class="keyword">let</span> referer = req.<span class="title function_">get</span>(<span class="string">&quot;referer&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span> (referer) &#123;</span><br><span class="line">    <span class="comment">//实例化</span></span><br><span class="line">    <span class="keyword">let</span> url = <span class="keyword">new</span> <span class="title function_">URL</span>(referer);</span><br><span class="line">    <span class="comment">//获取hostname</span></span><br><span class="line">    <span class="keyword">let</span> hostname = url.<span class="property">hostname</span>;</span><br><span class="line">    <span class="comment">//判断</span></span><br><span class="line">    <span class="keyword">if</span> (hostname !== <span class="string">&quot;127.0.0.1&quot;</span>) &#123;</span><br><span class="line">      <span class="comment">//响应404</span></span><br><span class="line">      res.<span class="title function_">status</span>(<span class="number">404</span>).<span class="title function_">send</span>(<span class="string">&quot;&lt;h1&gt;404 Not Found&lt;/h1&gt;&quot;</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">next</span>();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>如果第三方设置了防盗链，我们又想访问该怎么做呢</p>
<p>设置不发送 referrer 就行了</p>
<p>用 <code>&lt;a&gt;</code>、<code>&lt;area&gt;</code>、<code>&lt;img&gt;</code>、<code>&lt;iframe&gt;</code>、<code>&lt;script&gt;</code> 或者 <code>&lt;link&gt;</code> 元素上的 <code>referrerpolicy</code> 属性为其设置独立的请求策略，例如：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;http://……&quot;</span> <span class="attr">referrerpolicy</span>=<span class="string">&quot;no-referrer&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<p>或者直接在 HTMl 页面头中通过 meta 属性全局配置：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;referrer&quot;</span> <span class="attr">content</span>=<span class="string">&quot;no-referrer&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<p><em>扩展参考：<a href="http://www.ruanyifeng.com/blog/2019/06/http-referer.html">http://www.ruanyifeng.com/blog/2019/06/http-referer.html</a></em></p>
<h3 id="5、EJS-模板引擎"><a href="#5、EJS-模板引擎" class="headerlink" title="5、EJS 模板引擎"></a>5、EJS 模板引擎</h3><p>模板引擎是分离用户界面和业务数据 的一种技术</p>
<p>EJS 是一个高效的 Javascript 的模板引擎。官网: <a href="https://ejs.co/">https://ejs.co/</a></p>
<p>中文站：<a href="https://ejs.bootcss.com/">https://ejs.bootcss.com/</a></p>
<p>EJS 使用</p>
<p>下载安装 EJS</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm i ejs --save</span><br></pre></td></tr></table></figure>

<p>代码示例</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1.引入ejs</span></span><br><span class="line"><span class="keyword">const</span> ejs = <span class="built_in">require</span>(<span class="string">&#x27;ejs&#x27;</span>);</span><br><span class="line"><span class="comment">//2.定义数据</span></span><br><span class="line"><span class="keyword">let</span> person = [<span class="string">&#x27;张三&#x27;</span>,<span class="string">&#x27;李四&#x27;</span>,<span class="string">&#x27;王二麻子&#x27;</span>];</span><br><span class="line"><span class="comment">//3.ejs解析模板返回结构</span></span><br><span class="line"><span class="comment">//&lt;%= %&gt; 是ejs解析内容的标记，作用是输出当前表达式的执行结构</span></span><br><span class="line"><span class="keyword">let</span> html = ejs.<span class="title function_">render</span>(‘&lt;%= person.<span class="title function_">join</span>(<span class="string">&quot;,&quot;</span>) %&gt;’, &#123;<span class="attr">person</span>:person&#125;);</span><br><span class="line"><span class="comment">//4.输出结果</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(html);</span><br></pre></td></tr></table></figure>

<p>render 渲染函数会将其第一个参数中&lt;% %&gt;中的值替换为第二个参数（也就是数据）进行解析渲染</p>
<p>EJS 常用语法</p>
<p>执行 JS 代码(可以认为里面是 js 语句，如条件语句、循环语句等)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;% code %&gt;</span><br></pre></td></tr></table></figure>

<p>输出转义的数据到模板上(可以认为里面是 js 表达式)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;%= code %&gt;</span><br></pre></td></tr></table></figure>

<p>实际上，我们通常将需要渲染的界面和数据分离开来</p>
<p>新建 test.ejs</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot; /&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot; /&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot; /&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;h2&gt;我爱你&lt;%=name%&gt;&lt;/h2&gt;</span><br><span class="line">    &lt;hr /&gt;</span><br><span class="line">    &lt;h4&gt;&lt;%=word%&gt;&lt;/h4&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>主文件中</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> ejs = <span class="built_in">require</span>(<span class="string">&quot;ejs&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="keyword">const</span> name = <span class="string">&quot;中国&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> word = <span class="string">&quot;亲爱的母亲&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> str = fs.<span class="title function_">readFileSync</span>(__dirname + <span class="string">&quot;/test.ejs&quot;</span>).<span class="title function_">toString</span>();</span><br><span class="line"><span class="keyword">const</span> result = ejs.<span class="title function_">render</span>(str, &#123; <span class="attr">name</span>: name, <span class="attr">word</span>: word &#125;);</span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.<span class="title function_">send</span>(result);</span><br><span class="line">&#125;);</span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">3000</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;服务器启动了...&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>EJS 列表渲染</p>
<p>test.ejs 中</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot; /&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot; /&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot; /&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">      &lt;%name.forEach(item=&gt;&#123;%&gt;</span><br><span class="line">      &lt;li&gt;&lt;%=item%&gt;&lt;/li&gt;</span><br><span class="line">      &lt;%&#125;)%&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>EJS 条件渲染</p>
<p>test.ejs 中</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot; /&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot; /&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot; /&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;%if(isLogin)&#123;%&gt;</span><br><span class="line">    &lt;span&gt;欢迎回来&lt;/span&gt;</span><br><span class="line">    &lt;%&#125;else&#123;%&gt; &lt;button&gt;登录&lt;/button&gt;&lt;button&gt;注册&lt;/button&gt; &lt;%&#125;%&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>express 中使用 EJS</p>
<p>在之前我们使用 fs 去手动读取 ejs 中的数据并交给 ejs.render 函数去渲染。但在 express 中我们有更简便的方法，无需手动读取</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&quot;path&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> ejs = <span class="built_in">require</span>(<span class="string">&quot;ejs&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="comment">//将express中的模板引擎设置为ejs</span></span><br><span class="line">app.<span class="title function_">set</span>(<span class="string">&quot;view engine&quot;</span>, <span class="string">&quot;ejs&quot;</span>);</span><br><span class="line"><span class="comment">//设置模板文件的存放位置</span></span><br><span class="line">app.<span class="title function_">set</span>(<span class="string">&quot;views&quot;</span>, path.<span class="title function_">resolve</span>(__dirname, <span class="string">&quot;./views&quot;</span>));</span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> title = <span class="string">&quot;人生得意须尽欢&quot;</span>;</span><br><span class="line">  res.<span class="title function_">render</span>(<span class="string">&quot;test&quot;</span>, &#123; title &#125;);</span><br><span class="line">&#125;);</span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">3000</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;服务器启动了...&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h3 id="6、express-generator"><a href="#6、express-generator" class="headerlink" title="6、express-generator"></a>6、express-generator</h3><p>express-generator 是一款官方推荐的 Express 应用程序生成器，通过它可以快速创建一个 Express 应用骨架</p>
<p>可以通过 npx（包含在 Node.js8.2.0 及更高版本中）命令来运行 Express 应用程序生成器</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npx express-generator</span><br></pre></td></tr></table></figure>

<p>对于较老的 Node 版本，可以通过 npm 将 Express 应用程序生成器安装到全局环境中并使用</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install -g express-generator</span><br><span class="line">$ express</span><br></pre></td></tr></table></figure>

<p>使用如下命令就可以快速创建一个 Express 应用骨架。其中-e 表示添加 EJS 模板引擎支持，dirname 是要创建的文件夹名称</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ express -e <span class="built_in">dirname</span></span><br></pre></td></tr></table></figure>

<p>文件上传处理</p>
<p>使用如下命令快速创建应用骨架</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ express -e file</span><br></pre></td></tr></table></figure>

<p>在 file&#x2F;routes&#x2F;index.js 中新增两个头像上传的路由</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> router = express.<span class="title class_">Router</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">/* GET home page. */</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&quot;/&quot;</span>, <span class="keyword">function</span> (<span class="params">req, res, next</span>) &#123;</span><br><span class="line">  res.<span class="title function_">render</span>(<span class="string">&quot;index&quot;</span>, &#123; <span class="attr">title</span>: <span class="string">&quot;Express&quot;</span> &#125;);</span><br><span class="line">&#125;);</span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&quot;/portrait&quot;</span>, <span class="keyword">function</span> (<span class="params">req, res, next</span>) &#123;</span><br><span class="line">  res.<span class="title function_">render</span>(<span class="string">&quot;portrait&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line">router.<span class="title function_">post</span>(<span class="string">&quot;/portrait&quot;</span>, <span class="keyword">function</span> (<span class="params">req, res, next</span>) &#123;</span><br><span class="line">  res.<span class="title function_">send</span>(<span class="string">&quot;111&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = router;</span><br></pre></td></tr></table></figure>

<p>对应的在 views 文件下创建 portrait.ejs</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot; /&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot; /&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot; /&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;!-- 对于文件上传，必须将enctype属性设置为multipart/form-data --&gt;</span><br><span class="line">    &lt;form action=&quot;/portrait&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt;</span><br><span class="line">      &lt;input type=&quot;text&quot; name=&quot;username&quot; placeholder=&quot;用户名&quot; /&gt;</span><br><span class="line">      &lt;input type=&quot;file&quot; name=&quot;portrait&quot; placeholder=&quot;上传头像&quot; /&gt;</span><br><span class="line">      &lt;hr /&gt;</span><br><span class="line">      &lt;button&gt;上传&lt;/button&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>接下来需要使用一个包叫 formidable 对上传的文件作进一步处理</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm i formidable</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="comment">//导入formidable</span></span><br><span class="line"><span class="keyword">const</span> formidable = <span class="built_in">require</span>(<span class="string">&quot;formidable&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> router = express.<span class="title class_">Router</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">/* GET home page. */</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&quot;/&quot;</span>, <span class="keyword">function</span> (<span class="params">req, res, next</span>) &#123;</span><br><span class="line">  res.<span class="title function_">render</span>(<span class="string">&quot;index&quot;</span>, &#123; <span class="attr">title</span>: <span class="string">&quot;Express&quot;</span> &#125;);</span><br><span class="line">&#125;);</span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&quot;/portrait&quot;</span>, <span class="keyword">function</span> (<span class="params">req, res, next</span>) &#123;</span><br><span class="line">  res.<span class="title function_">render</span>(<span class="string">&quot;portrait&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line">router.<span class="title function_">post</span>(<span class="string">&quot;/portrait&quot;</span>, <span class="keyword">function</span> (<span class="params">req, res, next</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> form = <span class="title function_">formidable</span>(&#123; <span class="attr">multiples</span>: <span class="literal">true</span> &#125;);</span><br><span class="line">  form.<span class="title function_">parse</span>(req, <span class="function">(<span class="params">err, fields, files</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="title function_">next</span>(err);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    res.<span class="title function_">json</span>(&#123; fields, files &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = router;</span><br></pre></td></tr></table></figure>

<p>查看浏览器，可以看到 fields 里面存放的是一般表单的数据，比如 text、radio、select、checkbox 这种类型。而 files 里面保存的是 file 类型的数据</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230413151158065.png" alt="image-20230413151158065"></p>
<p>一般拿到客户端上传的文件之后，可以将其保存在静态资源目录下以方便用户访问。并将访问的路径保存在数据库里，并且返回给用户。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="comment">//导入formidable</span></span><br><span class="line"><span class="keyword">const</span> formidable = <span class="built_in">require</span>(<span class="string">&quot;formidable&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> router = express.<span class="title class_">Router</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">/* GET home page. */</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&quot;/&quot;</span>, <span class="keyword">function</span> (<span class="params">req, res, next</span>) &#123;</span><br><span class="line">  res.<span class="title function_">render</span>(<span class="string">&quot;index&quot;</span>, &#123; <span class="attr">title</span>: <span class="string">&quot;Express&quot;</span> &#125;);</span><br><span class="line">&#125;);</span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&quot;/portrait&quot;</span>, <span class="keyword">function</span> (<span class="params">req, res, next</span>) &#123;</span><br><span class="line">  res.<span class="title function_">render</span>(<span class="string">&quot;portrait&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line">router.<span class="title function_">post</span>(<span class="string">&quot;/portrait&quot;</span>, <span class="keyword">function</span> (<span class="params">req, res, next</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> form = <span class="title function_">formidable</span>(&#123;</span><br><span class="line">    <span class="attr">multiples</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="comment">//设置文件上传保存的路径</span></span><br><span class="line">    <span class="attr">uploadDir</span>: __dirname + <span class="string">&quot;/../public/images&quot;</span>,</span><br><span class="line">    <span class="comment">//保持文件后缀</span></span><br><span class="line">    <span class="attr">keepExtensions</span>: <span class="literal">true</span>,</span><br><span class="line">  &#125;);</span><br><span class="line">  form.<span class="title function_">parse</span>(req, <span class="function">(<span class="params">err, fields, files</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      <span class="title function_">next</span>(err);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//通过files.portrait.newFilename拼接保存文件上传的路径</span></span><br><span class="line">    <span class="keyword">let</span> url = <span class="string">&quot;/images/&quot;</span> + files.<span class="property">portrait</span>.<span class="property">newFilename</span>;</span><br><span class="line">    res.<span class="title function_">send</span>(url);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = router;</span><br></pre></td></tr></table></figure>

<h3 id="7、账单案例"><a href="#7、账单案例" class="headerlink" title="7、账单案例"></a>7、账单案例</h3><p>使用 express-generator 快速生成一个应用骨架 accounts</p>
<p>在 routes&#x2F;index.js 中新增&#x2F;account 和&#x2F;account&#x2F;create 路由中间件</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> router = express.<span class="title class_">Router</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">/* GET home page. */</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&quot;/&quot;</span>, <span class="keyword">function</span> (<span class="params">req, res, next</span>) &#123;</span><br><span class="line">  res.<span class="title function_">render</span>(<span class="string">&quot;index&quot;</span>, &#123; <span class="attr">title</span>: <span class="string">&quot;Express&quot;</span> &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 账单列表页</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&quot;/account&quot;</span>, <span class="keyword">function</span> (<span class="params">req, res, next</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> accounts = [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">time</span>: <span class="string">&quot;2023-04-01&quot;</span>,</span><br><span class="line">      <span class="attr">title</span>: <span class="string">&quot;吃饭&quot;</span>,</span><br><span class="line">      <span class="attr">type</span>: <span class="string">&quot;-1&quot;</span>,</span><br><span class="line">      <span class="attr">account</span>: <span class="number">36</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">time</span>: <span class="string">&quot;2023-04-20&quot;</span>,</span><br><span class="line">      <span class="attr">title</span>: <span class="string">&quot;发工资&quot;</span>,</span><br><span class="line">      <span class="attr">type</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">      <span class="attr">account</span>: <span class="number">15000</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  ];</span><br><span class="line">  res.<span class="title function_">render</span>(<span class="string">&quot;list&quot;</span>, &#123; accounts &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//新增记录页</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&quot;/account/create&quot;</span>, <span class="keyword">function</span> (<span class="params">req, res, next</span>) &#123;</span><br><span class="line">  res.<span class="title function_">render</span>(<span class="string">&quot;create&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//处理新增记录</span></span><br><span class="line">router.<span class="title function_">post</span>(<span class="string">&quot;/account&quot;</span>, <span class="keyword">function</span> (<span class="params">req, res, next</span>) &#123;</span><br><span class="line">  res.<span class="title function_">send</span>(<span class="string">&quot;提交成功&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = router;</span><br></pre></td></tr></table></figure>

<p>并在 views 中新建 list.ejs 和 create.ejs，这样账单的基本静态页面就搭建起来了</p>
<p>list.ejs</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot; /&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot; /&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot; /&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">    &lt;link</span><br><span class="line">      href=&quot;https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.7/css/bootstrap.css&quot;</span><br><span class="line">      rel=&quot;stylesheet&quot;</span><br><span class="line">    /&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">      label &#123;</span><br><span class="line">        font-weight: normal;</span><br><span class="line">      &#125;</span><br><span class="line">      .panel-body .glyphicon-remove &#123;</span><br><span class="line">        display: none;</span><br><span class="line">      &#125;</span><br><span class="line">      .panel-body:hover .glyphicon-remove &#123;</span><br><span class="line">        display: inline-block;</span><br><span class="line">      &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;row&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;col-xs-12 col-lg-8 col-lg-offset-2&quot;&gt;</span><br><span class="line">          &lt;h2&gt;记账本&lt;/h2&gt;</span><br><span class="line">          &lt;hr /&gt;</span><br><span class="line">          &lt;div class=&quot;accounts&quot;&gt;</span><br><span class="line">            &lt;% accounts.forEach(item =&gt; &#123; %&gt;</span><br><span class="line">            &lt;div</span><br><span class="line">              class=&quot;panel &lt;%= item.type===&#x27;-1&#x27; ? &#x27;panel-danger&#x27; : &#x27;panel-success&#x27; %&gt;&quot;</span><br><span class="line">            &gt;</span><br><span class="line">              &lt;div class=&quot;panel-heading&quot;&gt;&lt;%= item.time %&gt;&lt;/div&gt;</span><br><span class="line">              &lt;div class=&quot;panel-body&quot;&gt;</span><br><span class="line">                &lt;div class=&quot;col-xs-6&quot;&gt;&lt;%= item.title %&gt;&lt;/div&gt;</span><br><span class="line">                &lt;div class=&quot;col-xs-2 text-center&quot;&gt;</span><br><span class="line">                  &lt;span</span><br><span class="line">                    class=&quot;label &lt;%= item.type===&#x27;-1&#x27; ? &#x27;label-warning&#x27; : &#x27;label-success&#x27; %&gt;&quot;</span><br><span class="line">                    &gt;&lt;%= item.type===&#x27;-1&#x27; ? &#x27;支出&#x27; : &#x27;收入&#x27; %&gt;&lt;/span</span><br><span class="line">                  &gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">                &lt;div class=&quot;col-xs-2 text-right&quot;&gt;&lt;%= item.account %&gt; 元&lt;/div&gt;</span><br><span class="line">                &lt;div class=&quot;col-xs-2 text-right&quot;&gt;</span><br><span class="line">                  &lt;a href=&quot;/account/&lt;%= item.id %&gt;&quot;&gt;</span><br><span class="line">                    &lt;span</span><br><span class="line">                      class=&quot;glyphicon glyphicon-remove&quot;</span><br><span class="line">                      aria-hidden=&quot;true&quot;</span><br><span class="line">                    &gt;&lt;/span&gt;</span><br><span class="line">                  &lt;/a&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;% &#125;) %&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>create.ejs</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot; /&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot; /&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot; /&gt;</span><br><span class="line">    &lt;title&gt;添加记录&lt;/title&gt;</span><br><span class="line">    &lt;link href=&quot;/css/bootstrap.css&quot; rel=&quot;stylesheet&quot; /&gt;</span><br><span class="line">    &lt;link href=&quot;/css/bootstrap-datepicker.css&quot; rel=&quot;stylesheet&quot; /&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;row&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;col-xs-12 col-lg-8 col-lg-offset-2&quot;&gt;</span><br><span class="line">          &lt;h2&gt;添加记录&lt;/h2&gt;</span><br><span class="line">          &lt;hr /&gt;</span><br><span class="line">          &lt;form method=&quot;post&quot; action=&quot;/account&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;form-group&quot;&gt;</span><br><span class="line">              &lt;label for=&quot;item&quot;&gt;事项&lt;/label&gt;</span><br><span class="line">              &lt;input name=&quot;title&quot; type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;item&quot; /&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;form-group&quot;&gt;</span><br><span class="line">              &lt;label for=&quot;time&quot;&gt;时间&lt;/label&gt;</span><br><span class="line">              &lt;input name=&quot;time&quot; type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;time&quot; /&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;form-group&quot;&gt;</span><br><span class="line">              &lt;label for=&quot;type&quot;&gt;类型&lt;/label&gt;</span><br><span class="line">              &lt;select name=&quot;type&quot; class=&quot;form-control&quot; id=&quot;type&quot;&gt;</span><br><span class="line">                &lt;option value=&quot;-1&quot;&gt;支出&lt;/option&gt;</span><br><span class="line">                &lt;option value=&quot;1&quot;&gt;收入&lt;/option&gt;</span><br><span class="line">              &lt;/select&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;form-group&quot;&gt;</span><br><span class="line">              &lt;label for=&quot;account&quot;&gt;金额&lt;/label&gt;</span><br><span class="line">              &lt;input</span><br><span class="line">                name=&quot;account&quot;</span><br><span class="line">                type=&quot;text&quot;</span><br><span class="line">                class=&quot;form-control&quot;</span><br><span class="line">                id=&quot;account&quot;</span><br><span class="line">              /&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">            &lt;div class=&quot;form-group&quot;&gt;</span><br><span class="line">              &lt;label for=&quot;remarks&quot;&gt;备注&lt;/label&gt;</span><br><span class="line">              &lt;textarea</span><br><span class="line">                name=&quot;remarks&quot;</span><br><span class="line">                class=&quot;form-control&quot;</span><br><span class="line">                id=&quot;remarks&quot;</span><br><span class="line">              &gt;&lt;/textarea&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;hr /&gt;</span><br><span class="line">            &lt;button type=&quot;submit&quot; class=&quot;btn btn-primary btn-block&quot;&gt;</span><br><span class="line">              添加</span><br><span class="line">            &lt;/button&gt;</span><br><span class="line">          &lt;/form&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;script src=&quot;/js/jquery.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script src=&quot;/js/bootstrap.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script src=&quot;/js/bootstrap-datepicker.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script src=&quot;/js/bootstrap-datepicker.zh-CN.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script src=&quot;/js/main.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p><em>注意：需要将 ejs 文件中引用到的 css 和 js 文件放在静态资源 public 目录下，并将 ejs 文件中的路径设置为绝对路径</em></p>
<h2 id="十、MongoDB"><a href="#十、MongoDB" class="headerlink" title="十、MongoDB"></a>十、MongoDB</h2><h3 id="1、MongoDB-基础知识"><a href="#1、MongoDB-基础知识" class="headerlink" title="1、MongoDB 基础知识"></a>1、MongoDB 基础知识</h3><p>MongoDB 是一个基于分布式文件存储的数据库，官方地址 <a href="https://www.mongodb.com/">https://www.mongodb.com/</a></p>
<p>数据库（DataBase）是按照数据结构来组织、存储和管理数据的 应用程序</p>
<p>数据库的主要作用就是 管理数据 ，对数据进行 增（c）、删（d）、改（u）、查（r）</p>
<p>相比于纯文件管理数据，数据库管理数据有如下特点：</p>
<ul>
<li>速度更快</li>
<li>扩展性更强</li>
<li>安全性更强</li>
</ul>
<p>市面上的数据库有很多种，最常见的数据库有如下几个：</p>
<ul>
<li>MySQL 数据库（目前使用最广泛、流行度最高的开源免费数据库；Community + Enterprise）</li>
<li>Oracle 数据库（收费）</li>
<li>SQL Server 数据库（收费）</li>
<li>Mongodb 数据库（Community + Enterprise）</li>
</ul>
<p>其中，MySQL、Oracle、SQL Server 属于传统型数据库（又叫做：关系型数据库 或 SQL 数据库），这三者的 设计理念相同，用法比较类似</p>
<p>而 Mongodb 属于新型数据库（又叫做：非关系型数据库 或 NoSQL 数据库），它在一定程度上弥补了传统型 数据库的缺陷</p>
<p>Mongodb 中有三个重要概念需要掌握</p>
<ul>
<li>数据库（database） 数据库是一个数据仓库，数据库服务下可以创建很多数据库，数据库中可以存 放很多集合</li>
<li>集合（collection） 集合类似于 JS 中的数组，在集合中可以存放很多文档 文档（document）</li>
<li>文档是数据库中的最小单位，类似于 JS 中的对象</li>
</ul>
<p>Mongodb 下载地址： <a href="https://www.mongodb.com/try/download/community">https://www.mongodb.com/try/download/community</a></p>
<p>配置步骤如下:</p>
<ol>
<li>将压缩包移动到 C:\Program Files 下，然后解压</li>
<li>创建 C:\data\db 目录，mongodb 会将数据默认保存在这个文件夹</li>
<li>以 mongodb 中 bin 目录作为工作目录，启动命令行</li>
<li>运行命令 mongod</li>
</ol>
<p>此时 Mongodb 的数据库服务已经启动了</p>
<p>重新打开一个以 mongodb 中 bin 目录作为工作目录的终端，使用 mongo 命令连接本机的 mongodb 服务</p>
<p><em>注意： 为了方便后续方便使用 mongod 命令，可以将 bin 目录配置到环境变量 Path 中 千万不要选中服务端窗口的内容 ，选中会停止服务，可以 敲回车 取消选中</em></p>
<h3 id="2、命令行交互"><a href="#2、命令行交互" class="headerlink" title="2、命令行交互"></a>2、命令行交互</h3><p>数据库命令</p>
<p>显示所有的数据库</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">show dbs</span><br></pre></td></tr></table></figure>

<p>切换到指定的数据库，如果数据库不存在会自动创建数据库</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">use 数据库名</span><br></pre></td></tr></table></figure>

<p>显示当前所在的数据库</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">db</span><br></pre></td></tr></table></figure>

<p>删除当前数据库</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">use 库名</span><br><span class="line">db.dropDatabase()</span><br></pre></td></tr></table></figure>

<p>集合命令</p>
<p>创建集合</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">db.createCollection(<span class="string">&#x27;集合名称&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>显示当前数据库中的所有集合</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">show collections</span><br></pre></td></tr></table></figure>

<p>删除某个集合</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">db.集合名.drop()</span><br></pre></td></tr></table></figure>

<p>重命名集合</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">db.集合名.renameCollection(<span class="string">&#x27;newName&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>文档命令</p>
<p>插入文档</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">db.集合名.insert(文档对象)</span><br></pre></td></tr></table></figure>

<p>查询文档</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">db.集合名.find(查询条件)</span><br></pre></td></tr></table></figure>

<p><em>_id 是 mongodb 自动生成的唯一编号，用来唯一标识文档</em></p>
<p>更新文档</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">db.集合名.update(查询条件,新的文档)</span><br><span class="line">db.集合名.update(&#123;name:<span class="string">&#x27;张三&#x27;</span>&#125;,&#123;<span class="variable">$set</span>:&#123;age:19&#125;&#125;)</span><br></pre></td></tr></table></figure>

<p><em>直接使用 db.集合名.update(查询条件,新的文档)这种方式，会覆盖式更新，因此可以使用第二种方式精确（局部）更新</em></p>
<p>删除文档</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">db.集合名.remove(查询条件)</span><br></pre></td></tr></table></figure>

<h3 id="3、Mongoose"><a href="#3、Mongoose" class="headerlink" title="3、Mongoose"></a>3、Mongoose</h3><p>Mongoose 是一个对象文档模型库，官网 <a href="http://www.mongoosejs.net/">http://www.mongoosejs.net/</a></p>
<p>它的本质就是一个包，方便使用代码操作 mongodb 数据库。取代我们之前在终端中使用 mongo 命令行的方式操作数据库</p>
<p>使用流程</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1. 安装 mongoose</span></span><br><span class="line"><span class="comment">//2. 导入 mongoose</span></span><br><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">&quot;mongoose&quot;</span>);</span><br><span class="line"><span class="comment">//3. 连接数据库,27017是mongodb的默认端口号，可以省略。如果bilibili数据库不存在则会自动创建</span></span><br><span class="line"><span class="comment">// mongodb是MongoDB的连接协议，正如我们之前http服务使用http协议一样，MongoDB数据库服务使用mongodb协议</span></span><br><span class="line">mongoose.<span class="title function_">connect</span>(<span class="string">&quot;mongodb://127.0.0.1:27017/bilibili&quot;</span>);</span><br><span class="line"><span class="comment">//4. 设置连接回调</span></span><br><span class="line"><span class="comment">//连接成功</span></span><br><span class="line">mongoose.<span class="property">connection</span>.<span class="title function_">on</span>(<span class="string">&quot;open&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;连接成功&quot;</span>);</span><br><span class="line">  <span class="comment">//5. 创建文档结构对象</span></span><br><span class="line">  <span class="keyword">let</span> <span class="title class_">BookSchema</span> = <span class="keyword">new</span> mongoose.<span class="title class_">Schema</span>(&#123;</span><br><span class="line">    <span class="attr">title</span>: <span class="title class_">String</span>,</span><br><span class="line">    <span class="attr">author</span>: <span class="title class_">String</span>,</span><br><span class="line">    <span class="attr">price</span>: <span class="title class_">Number</span>,</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="comment">//6. 创建文档模型对象</span></span><br><span class="line">  <span class="keyword">let</span> <span class="title class_">BookModel</span> = mongoose.<span class="title function_">model</span>(<span class="string">&quot;book&quot;</span>, <span class="title class_">BookSchema</span>);</span><br><span class="line">  <span class="comment">//7. 插入文档</span></span><br><span class="line">  <span class="title class_">BookModel</span>.<span class="title function_">create</span>(&#123;</span><br><span class="line">    <span class="attr">title</span>: <span class="string">&quot;西游记&quot;</span>,</span><br><span class="line">    <span class="attr">author</span>: <span class="string">&quot;吴承恩&quot;</span>,</span><br><span class="line">    <span class="attr">price</span>: <span class="number">19.9</span>,</span><br><span class="line">  &#125;)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function">(<span class="params">data</span>) =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(data))</span><br><span class="line">    .<span class="title function_">catch</span>(<span class="function">(<span class="params">err</span>) =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(err));</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//连接出错</span></span><br><span class="line">mongoose.<span class="property">connection</span>.<span class="title function_">on</span>(<span class="string">&quot;error&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;连接出错~~&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//连接关闭</span></span><br><span class="line">mongoose.<span class="property">connection</span>.<span class="title function_">on</span>(<span class="string">&quot;close&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;连接关闭&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>字段类型</p>
<p>文档结构可选的常用字段类型列表</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230414103504943.png" alt="image-20230414103504943"></p>
<p>字段值验证</p>
<p>Mongoose 有一些内建验证器，可以对字段值进行验证</p>
<p>必填项</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">title</span>: &#123;</span><br><span class="line">  <span class="attr">type</span>: <span class="title class_">String</span>,</span><br><span class="line">  <span class="attr">required</span>: <span class="literal">true</span> <span class="comment">// 设置必填项</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>默认值</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">author</span>: &#123;</span><br><span class="line">  <span class="attr">type</span>: <span class="title class_">String</span>,</span><br><span class="line">  <span class="attr">default</span>: <span class="string">&#x27;匿名&#x27;</span> <span class="comment">//默认值</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>枚举值</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">gender</span>: &#123;</span><br><span class="line">  <span class="attr">type</span>: <span class="title class_">String</span>,</span><br><span class="line">  <span class="attr">enum</span>: [<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;女&#x27;</span>] <span class="comment">//设置的值必须是数组中的</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>唯一值</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="attr">username</span>: &#123;</span><br><span class="line">  <span class="attr">type</span>: <span class="title class_">String</span>,</span><br><span class="line">  <span class="attr">unique</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><em>unique 需要 重建集合 才能有效果</em></p>
<p>Mongoose 操作数据库的基本操作：增加（create），删除（delete），修改（update），查（read）</p>
<p>增加</p>
<p>插入一条</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title class_">BookModel</span>.<span class="title function_">create</span>(&#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="string">&quot;西游记&quot;</span>,</span><br><span class="line">  <span class="attr">author</span>: <span class="string">&quot;吴承恩&quot;</span>,</span><br><span class="line">  <span class="attr">price</span>: <span class="number">19.9</span>,</span><br><span class="line">&#125;)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function">(<span class="params">data</span>) =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(data))</span><br><span class="line">  .<span class="title function_">catch</span>(<span class="function">(<span class="params">err</span>) =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(err));</span><br></pre></td></tr></table></figure>

<p>批量插入</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//批量插入</span></span><br><span class="line"><span class="title class_">BookModel</span>.<span class="title function_">insertMany</span>([</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">title</span>: <span class="string">&quot;红楼梦&quot;</span>,</span><br><span class="line">    <span class="attr">author</span>: <span class="string">&quot;曹雪芹&quot;</span>,</span><br><span class="line">    <span class="attr">price</span>: <span class="number">29.9</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">title</span>: <span class="string">&quot;水浒传&quot;</span>,</span><br><span class="line">    <span class="attr">author</span>: <span class="string">&quot;施耐庵&quot;</span>,</span><br><span class="line">    <span class="attr">price</span>: <span class="number">39.9</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">title</span>: <span class="string">&quot;三国演义&quot;</span>,</span><br><span class="line">    <span class="attr">author</span>: <span class="string">&quot;罗贯中&quot;</span>,</span><br><span class="line">    <span class="attr">price</span>: <span class="number">49.9</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">])</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function">(<span class="params">data</span>) =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(data))</span><br><span class="line">  .<span class="title function_">catch</span>(<span class="function">(<span class="params">err</span>) =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(err));</span><br></pre></td></tr></table></figure>

<p>删除</p>
<p>删除一条数据</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//删除一条</span></span><br><span class="line"><span class="title class_">BookModel</span>.<span class="title function_">deleteOne</span>(&#123; <span class="attr">title</span>: <span class="string">&quot;红楼梦&quot;</span> &#125;)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function">(<span class="params">data</span>) =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(data))</span><br><span class="line">  .<span class="title function_">catch</span>(<span class="function">(<span class="params">err</span>) =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(err));</span><br></pre></td></tr></table></figure>

<p>批量删除</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//批量删除</span></span><br><span class="line"><span class="title class_">BookModel</span>.<span class="title function_">deleteMany</span>(&#123; <span class="attr">author</span>: <span class="string">&quot;罗贯中&quot;</span> &#125;)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function">(<span class="params">data</span>) =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(data))</span><br><span class="line">  .<span class="title function_">catch</span>(<span class="function">(<span class="params">err</span>) =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(err));</span><br></pre></td></tr></table></figure>

<p>更新</p>
<p>更新一条数据</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//更新一条</span></span><br><span class="line"><span class="title class_">BookModel</span>.<span class="title function_">updateOne</span>(&#123; <span class="attr">author</span>: <span class="string">&quot;罗贯中&quot;</span> &#125;, &#123; <span class="attr">price</span>: <span class="number">9.9</span> &#125;)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function">(<span class="params">data</span>) =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(data))</span><br><span class="line">  .<span class="title function_">catch</span>(<span class="function">(<span class="params">err</span>) =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(err));</span><br></pre></td></tr></table></figure>

<p>批量更新数据</p>
<p>同上</p>
<p>查询</p>
<p>查询一条数据</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title class_">BookModel</span>.<span class="title function_">findOne</span>(&#123; <span class="attr">name</span>: <span class="string">&quot;三国演义&quot;</span> &#125;)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function">(<span class="params">data</span>) =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(data))</span><br><span class="line">  .<span class="title function_">catch</span>(<span class="function">(<span class="params">err</span>) =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(err));</span><br><span class="line"><span class="comment">//根据id查询</span></span><br><span class="line"><span class="title class_">BookModel</span>.<span class="title function_">findById</span>(&#123; <span class="attr">_id</span>: <span class="string">&quot;6438c46df163eb812a612bb5&quot;</span> &#125;)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function">(<span class="params">data</span>) =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(data))</span><br><span class="line">  .<span class="title function_">catch</span>(<span class="function">(<span class="params">err</span>) =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(err));</span><br></pre></td></tr></table></figure>

<p>批量查询数据</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//不加条件查询</span></span><br><span class="line"><span class="title class_">BookModel</span>.<span class="title function_">find</span>()</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function">(<span class="params">data</span>) =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(data))</span><br><span class="line">  .<span class="title function_">catch</span>(<span class="function">(<span class="params">err</span>) =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(err));</span><br><span class="line"><span class="comment">//加条件查询</span></span><br><span class="line"><span class="title class_">BookModel</span>.<span class="title function_">find</span>(&#123; <span class="attr">author</span>: <span class="string">&quot;余华&quot;</span> &#125;)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function">(<span class="params">data</span>) =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(data))</span><br><span class="line">  .<span class="title function_">catch</span>(<span class="function">(<span class="params">err</span>) =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(err));</span><br></pre></td></tr></table></figure>

<p>条件控制</p>
<p>Mongoose 中主要有运算符、 逻辑运算、正则匹配三中条件控制</p>
<p>运算符</p>
<p>在 mongodb 不能 &gt; &lt; &gt;&#x3D; &lt;&#x3D; !&#x3D;&#x3D; 等运算符，需要使用替代符号</p>
<ul>
<li>&gt; 使用 $gt</li>
<li>&lt; 使用 $lt</li>
<li>&#x3D; 使用 $gte</li>
<li>&lt;&#x3D; 使用 $lte</li>
<li>!&#x3D;&#x3D; 使用 $ne</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title class_">BookModel</span>.<span class="title function_">find</span>(&#123; <span class="attr">price</span>: &#123; <span class="attr">$gt</span>: <span class="number">60</span> &#125; &#125;)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function">(<span class="params">data</span>) =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(data))</span><br><span class="line">  .<span class="title function_">catch</span>(<span class="function">(<span class="params">err</span>) =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(err));</span><br></pre></td></tr></table></figure>

<p>逻辑运算</p>
<p>$or 逻辑或</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title class_">BookModel</span>.<span class="title function_">find</span>(&#123; <span class="attr">$or</span>: [&#123; <span class="attr">author</span>: <span class="string">&quot;罗贯中&quot;</span> &#125;, &#123; <span class="attr">price</span>: <span class="number">59.8</span> &#125;] &#125;)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function">(<span class="params">data</span>) =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(data))</span><br><span class="line">  .<span class="title function_">catch</span>(<span class="function">(<span class="params">err</span>) =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(err));</span><br></pre></td></tr></table></figure>

<p>$and 逻辑与</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title class_">BookModel</span>.<span class="title function_">find</span>(&#123; <span class="attr">$and</span>: [&#123; <span class="attr">price</span>: &#123; <span class="attr">$gt</span>: <span class="number">20</span> &#125; &#125;, &#123; <span class="attr">price</span>: &#123; <span class="attr">$lt</span>: <span class="number">30</span> &#125; &#125;] &#125;)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function">(<span class="params">data</span>) =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(data))</span><br><span class="line">  .<span class="title function_">catch</span>(<span class="function">(<span class="params">err</span>) =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(err));</span><br></pre></td></tr></table></figure>

<p>正则匹配</p>
<p>条件中可以直接使用 JS 的正则语法，通过正则可以进行模糊查询</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title class_">BookModel</span>.<span class="title function_">find</span>(&#123; <span class="attr">name</span>: <span class="regexp">/三/</span> &#125;)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function">(<span class="params">data</span>) =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(data))</span><br><span class="line">  .<span class="title function_">catch</span>(<span class="function">(<span class="params">err</span>) =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(err));</span><br></pre></td></tr></table></figure>

<p>个性化读取</p>
<p>字段筛选</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//0:不要的字段</span></span><br><span class="line"><span class="comment">//1:要的字段</span></span><br><span class="line"><span class="title class_">BookModel</span>.<span class="title function_">find</span>()</span><br><span class="line">  .<span class="title function_">select</span>(&#123; <span class="attr">name</span>: <span class="number">1</span>, <span class="attr">author</span>: <span class="number">1</span> &#125;)</span><br><span class="line">  .<span class="title function_">exec</span>()</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function">(<span class="params">data</span>) =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(data))</span><br><span class="line">  .<span class="title function_">catch</span>(<span class="function">(<span class="params">err</span>) =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(err));</span><br></pre></td></tr></table></figure>

<p><em>将筛选字段的条件放在 select 函数中，值为 1 表示需要筛选出来，为 0 表示该字段不需要。回调函数放在 exec 中。当然 find 函数中也可以写入筛选条件</em></p>
<p>数据排序</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title class_">BookModel</span>.<span class="title function_">find</span>()</span><br><span class="line">  .<span class="title function_">sort</span>(&#123; <span class="attr">price</span>: <span class="number">1</span> &#125;)</span><br><span class="line">  .<span class="title function_">exec</span>()</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function">(<span class="params">data</span>) =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(data))</span><br><span class="line">  .<span class="title function_">catch</span>(<span class="function">(<span class="params">err</span>) =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(err));</span><br></pre></td></tr></table></figure>

<p><em>sort 函数函数中参数名表示排序的字段名，值为 1 表示升序，-1 表示降序</em></p>
<p>数据截取</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title class_">BookModel</span>.<span class="title function_">find</span>()</span><br><span class="line">  .<span class="title function_">skip</span>(<span class="number">3</span>)</span><br><span class="line">  .<span class="title function_">limit</span>(<span class="number">2</span>)</span><br><span class="line">  .<span class="title function_">then</span>(<span class="function">(<span class="params">data</span>) =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(data))</span><br><span class="line">  .<span class="title function_">catch</span>(<span class="function">(<span class="params">err</span>) =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(err));</span><br></pre></td></tr></table></figure>

<p><em>skip 表示跳过前 3 个，limit 表示取 2 个，因此最终取值结果为第 4 个至第 5 个</em></p>
<p>图形化管理工具</p>
<p>我们可以使用图形化的管理工具来对 Mongodb 进行交互</p>
<ul>
<li>Robo 3T 免费 <a href="https://github.com/Studio3T/robomongo/releases">https://github.com/Studio3T/robomongo/releases</a></li>
<li>Navicat 收费 <a href="https://www.navicat.com.cn/">https://www.navicat.com.cn/</a></li>
</ul>
<p>Mongoose 模块化</p>
<p>随着业务的增多，我们可以将 Mongoose 操作分模块管理</p>
<p>主要思路如下：</p>
<p>将连接成功之后的回调函数里面的操作单独拿出来放在 index.js，剩下的内容以函数的形式进行封装放在 db 目录下的 index.js，并通过 module.exports 暴露出去</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="keyword">function</span> (<span class="params">success, err</span>) &#123;</span><br><span class="line">  <span class="comment">//1. 安装 mongoose</span></span><br><span class="line">  <span class="comment">//2. 导入 mongoose</span></span><br><span class="line">  <span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">&quot;mongoose&quot;</span>);</span><br><span class="line">  <span class="comment">//3. 连接数据库,27017是mongodb的默认端口号，可以省略。如果bilibili数据库不存在则会自动创建</span></span><br><span class="line">  <span class="comment">// mongodb是MongoDB的连接协议，正如我们之前http服务使用http协议一样，MongoDB数据库服务使用mongodb协议</span></span><br><span class="line">  mongoose.<span class="title function_">connect</span>(<span class="string">&quot;mongodb://127.0.0.1:27017/bilibili&quot;</span>);</span><br><span class="line">  <span class="comment">//4. 设置连接回调</span></span><br><span class="line">  <span class="comment">//连接成功</span></span><br><span class="line">  mongoose.<span class="property">connection</span>.<span class="title function_">on</span>(<span class="string">&quot;open&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">success</span>();</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="comment">//连接出错</span></span><br><span class="line">  mongoose.<span class="property">connection</span>.<span class="title function_">on</span>(<span class="string">&quot;error&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">err</span>();</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="comment">//连接关闭</span></span><br><span class="line">  mongoose.<span class="property">connection</span>.<span class="title function_">on</span>(<span class="string">&quot;close&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;连接关闭&quot;</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>index.js 引入 db&#x2F;index.js，并将连接成功之后的回调函数里面的操作作为 success 函数参数传递过去</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="keyword">function</span> (<span class="params">success, err</span>) &#123;</span><br><span class="line">  <span class="comment">//1. 安装 mongoose</span></span><br><span class="line">  <span class="comment">//2. 导入 mongoose</span></span><br><span class="line">  <span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">&quot;mongoose&quot;</span>);</span><br><span class="line">  <span class="comment">//3. 连接数据库,27017是mongodb的默认端口号，可以省略。如果bilibili数据库不存在则会自动创建</span></span><br><span class="line">  <span class="comment">// mongodb是MongoDB的连接协议，正如我们之前http服务使用http协议一样，MongoDB数据库服务使用mongodb协议</span></span><br><span class="line">  mongoose.<span class="title function_">connect</span>(<span class="string">&quot;mongodb://127.0.0.1:27017/bilibili&quot;</span>);</span><br><span class="line">  <span class="comment">//4. 设置连接回调</span></span><br><span class="line">  <span class="comment">//连接成功</span></span><br><span class="line">  mongoose.<span class="property">connection</span>.<span class="title function_">on</span>(<span class="string">&quot;open&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">success</span>();</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="comment">//连接出错</span></span><br><span class="line">  mongoose.<span class="property">connection</span>.<span class="title function_">on</span>(<span class="string">&quot;error&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">err</span>();</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="comment">//连接关闭</span></span><br><span class="line">  mongoose.<span class="property">connection</span>.<span class="title function_">on</span>(<span class="string">&quot;close&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;连接关闭&quot;</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>由于随着业务的增多，后面可能会有越来越多的文档，因此我们可以将创建文档的代码继续拆分出去。在 models 目录下新建 BookModles.js 和 MovieModles.js</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//导入 mongoose</span></span><br><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">&quot;mongoose&quot;</span>);</span><br><span class="line"><span class="comment">//创建文档的结构对象</span></span><br><span class="line"><span class="comment">//设置集合中文档的属性以及属性值的类型</span></span><br><span class="line"><span class="keyword">let</span> <span class="title class_">BookSchema</span> = <span class="keyword">new</span> mongoose.<span class="title class_">Schema</span>(&#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="title class_">String</span>,</span><br><span class="line">  <span class="attr">author</span>: <span class="title class_">String</span>,</span><br><span class="line">  <span class="attr">price</span>: <span class="title class_">Number</span>,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建模型对象  对文档操作的封装对象</span></span><br><span class="line"><span class="keyword">let</span> <span class="title class_">BookModel</span> = mongoose.<span class="title function_">model</span>(<span class="string">&quot;books&quot;</span>, <span class="title class_">BookSchema</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//暴露模型对象</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title class_">BookModel</span>;</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//导入 mongoose</span></span><br><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">&quot;mongoose&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建文档结构</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">MovieSchema</span> = <span class="keyword">new</span> mongoose.<span class="title class_">Schema</span>(&#123;</span><br><span class="line">  <span class="attr">title</span>: <span class="title class_">String</span>,</span><br><span class="line">  <span class="attr">director</span>: <span class="title class_">String</span>,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建模型对象</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">MovieModel</span> = mongoose.<span class="title function_">model</span>(<span class="string">&quot;movie&quot;</span>, <span class="title class_">MovieSchema</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//暴露</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title class_">MovieModel</span>;</span><br></pre></td></tr></table></figure>

<p>index.js 主文件中引入</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//导入 db 文件</span></span><br><span class="line"><span class="keyword">const</span> db = <span class="built_in">require</span>(<span class="string">&quot;./db/db&quot;</span>);</span><br><span class="line"><span class="comment">//导入 mongoose</span></span><br><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">&quot;mongoose&quot;</span>);</span><br><span class="line"><span class="comment">//导入 BookModel</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">BookModel</span> = <span class="built_in">require</span>(<span class="string">&quot;./models/BookModel&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用函数</span></span><br><span class="line"><span class="title function_">db</span>(</span><br><span class="line">  <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">//7. 新增</span></span><br><span class="line">    <span class="title class_">BookModel</span>.<span class="title function_">create</span>(</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&quot;西游记&quot;</span>,</span><br><span class="line">        <span class="attr">author</span>: <span class="string">&quot;吴承恩&quot;</span>,</span><br><span class="line">        <span class="attr">price</span>: <span class="number">19.9</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="function">(<span class="params">err, data</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">//判断是否有错误</span></span><br><span class="line">        <span class="keyword">if</span> (err) &#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(err);</span><br><span class="line">          <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//如果没有出错, 则输出插入后的文档对象</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">        <span class="comment">//8. 关闭数据库连接 (项目运行过程中, 不会添加该代码)</span></span><br><span class="line">        mongoose.<span class="title function_">disconnect</span>();</span><br><span class="line">      &#125;</span><br><span class="line">    );</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;连接失败...&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<p>接下来 db 目录下的 index.js 中我们连接的数据库地址和集合名称是写死的，我们可以新建一个 config&#x2F;config.js 文件单独进行配置</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//配置文件</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">DBHOST</span>: <span class="string">&quot;127.0.0.1&quot;</span>,</span><br><span class="line">  <span class="attr">DBPORT</span>: <span class="number">27017</span>,</span><br><span class="line">  <span class="attr">DBNAME</span>: <span class="string">&quot;bilibili&quot;</span>,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>db 下的 index.js</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">*</span>&#125; success 数据库连接成功的回调</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">*</span>&#125; error 数据库连接失败的回调</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="keyword">function</span> (<span class="params">success, error</span>) &#123;</span><br><span class="line">  <span class="comment">//1. 安装 mongoose</span></span><br><span class="line">  <span class="comment">//2. 导入 mongoose</span></span><br><span class="line">  <span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">&quot;mongoose&quot;</span>);</span><br><span class="line">  <span class="comment">//导入 配置文件</span></span><br><span class="line">  <span class="keyword">const</span> &#123; <span class="variable constant_">DBHOST</span>, <span class="variable constant_">DBPORT</span>, <span class="variable constant_">DBNAME</span> &#125; = <span class="built_in">require</span>(<span class="string">&quot;../config/config.js&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">//设置 strictQuery 为 true</span></span><br><span class="line">  mongoose.<span class="title function_">set</span>(<span class="string">&quot;strictQuery&quot;</span>, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">//3. 连接 mongodb 服务                        数据库的名称</span></span><br><span class="line">  mongoose.<span class="title function_">connect</span>(<span class="string">`mongodb://<span class="subst">$&#123;DBHOST&#125;</span>:<span class="subst">$&#123;DBPORT&#125;</span>/<span class="subst">$&#123;DBNAME&#125;</span>`</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">//4. 设置回调</span></span><br><span class="line">  <span class="comment">// 设置连接成功的回调  once 一次   事件回调函数只执行一次</span></span><br><span class="line">  mongoose.<span class="property">connection</span>.<span class="title function_">once</span>(<span class="string">&quot;open&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">success</span>();</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 设置连接错误的回调</span></span><br><span class="line">  mongoose.<span class="property">connection</span>.<span class="title function_">on</span>(<span class="string">&quot;error&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">error</span>();</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">//设置连接关闭的回调</span></span><br><span class="line">  mongoose.<span class="property">connection</span>.<span class="title function_">on</span>(<span class="string">&quot;close&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;连接关闭&quot;</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p><em>接下来可以对之前做过的账单案例进行优化了。将数据库的操作应用到案例中</em></p>
<h2 id="十一、接口"><a href="#十一、接口" class="headerlink" title="十一、接口"></a>十一、接口</h2><p>接口是 前后端通信的桥梁</p>
<p><em>简单理解：一个接口就是 服务中的一个路由规则 ，根据请求响应结果</em></p>
<p><em>一般情况下，接口返回的都是 json 格式</em></p>
<p>RESTful API</p>
<p>RESTful API 是一种特殊风格的接口，主要特点有如下几个：</p>
<ul>
<li>URL 中的路径表示 资源 ，路径中不能有 动词 ，例如 create , delete , update 等这些都不能有</li>
<li>操作资源要与 HTTP 请求方法对应</li>
<li>操作结果要与 HTTP 响应状态码对应</li>
</ul>
<p>规则示例：</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230418150122166.png" alt="image-20230418150122166"></p>
<p><em>扩展阅读：<a href="https://www.ruanyifeng.com/blog/2014/05/restful_api.html">https://www.ruanyifeng.com/blog/2014/05/restful_api.html</a></em></p>
<p>基于 RESTful API 我们可以给之前的账单案例添加 API 接口</p>
<p>在 routes 目录下新建 web 文件夹（专门用来存放路由文件），将原来 routes 下的 index.js 文件放到 web 文件夹下。在 routes 目录下新建 api 文件夹（专门用来存放对外的 api 接口文件），并将 index.js 文件中的内容复制一份，方便我们进行改造</p>
<p>在 app.js 中引入 account.js 接口文件，并配置中间件，这样外部就可以通过&#x2F;api&#x2F;xxx 来访问接口了</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> accountRouter = <span class="built_in">require</span>(<span class="string">&quot;./routes/api/account&quot;</span>);</span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&quot;/api&quot;</span>, accountRouter);</span><br></pre></td></tr></table></figure>

<p>接下来我们对 account.js 进行改造即可</p>
<p>获取账单列表接口</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">router.<span class="title function_">get</span>(<span class="string">&quot;/account&quot;</span>, checkToken, <span class="keyword">function</span> (<span class="params">req, res, next</span>) &#123;</span><br><span class="line">  <span class="title class_">AccountModel</span>.<span class="title function_">find</span>()</span><br><span class="line">    .<span class="title function_">sort</span>(&#123; <span class="attr">time</span>: -<span class="number">1</span> &#125;)</span><br><span class="line">    .<span class="title function_">exec</span>()</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function">(<span class="params">data</span>) =&gt;</span></span><br><span class="line">      res.<span class="title function_">json</span>(&#123;</span><br><span class="line">        <span class="attr">code</span>: <span class="string">&quot;0000&quot;</span>,</span><br><span class="line">        <span class="attr">msg</span>: <span class="string">&quot;读取成功&quot;</span>,</span><br><span class="line">        <span class="attr">data</span>: data,</span><br><span class="line">      &#125;)</span><br><span class="line">    )</span><br><span class="line">    .<span class="title function_">catch</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      res.<span class="title function_">json</span>(&#123;</span><br><span class="line">        <span class="attr">code</span>: <span class="string">&quot;1001&quot;</span>,</span><br><span class="line">        <span class="attr">msg</span>: <span class="string">&quot;读取失败&quot;</span>,</span><br><span class="line">        <span class="attr">data</span>: <span class="literal">null</span>,</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>添加账单记录接口</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">router.<span class="title function_">post</span>(<span class="string">&quot;/account&quot;</span>, checkToken, <span class="keyword">function</span> (<span class="params">req, res, next</span>) &#123;</span><br><span class="line">  <span class="title class_">AccountModel</span>.<span class="title function_">create</span>(req.<span class="property">body</span>)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">      res.<span class="title function_">json</span>(&#123;</span><br><span class="line">        <span class="attr">code</span>: <span class="string">&quot;0000&quot;</span>,</span><br><span class="line">        <span class="attr">msg</span>: <span class="string">&quot;新增成功&quot;</span>,</span><br><span class="line">        <span class="attr">data</span>: data,</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">catch</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      res.<span class="title function_">json</span>(&#123;</span><br><span class="line">        <span class="attr">code</span>: <span class="string">&quot;1002&quot;</span>,</span><br><span class="line">        <span class="attr">msg</span>: <span class="string">&quot;新增失败&quot;</span>,</span><br><span class="line">        <span class="attr">data</span>: <span class="literal">null</span>,</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>删除账单记录接口</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">router.<span class="title function_">delete</span>(<span class="string">&quot;/account/:id&quot;</span>, checkToken, <span class="keyword">function</span> (<span class="params">req, res, next</span>) &#123;</span><br><span class="line">  <span class="title class_">AccountModel</span>.<span class="title function_">deleteOne</span>(&#123; <span class="attr">_id</span>: req.<span class="property">params</span>.<span class="property">id</span> &#125;)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      res.<span class="title function_">json</span>(&#123;</span><br><span class="line">        <span class="attr">code</span>: <span class="string">&quot;0000&quot;</span>,</span><br><span class="line">        <span class="attr">msg</span>: <span class="string">&quot;删除成功&quot;</span>,</span><br><span class="line">        <span class="attr">data</span>: <span class="literal">null</span>,</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">catch</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      res.<span class="title function_">json</span>(&#123;</span><br><span class="line">        <span class="attr">code</span>: <span class="string">&quot;1003&quot;</span>,</span><br><span class="line">        <span class="attr">msg</span>: <span class="string">&quot;删除失败&quot;</span>,</span><br><span class="line">        <span class="attr">data</span>: <span class="literal">null</span>,</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>获取单条账单记录接口</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//获取单条记录</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&quot;/account/:id&quot;</span>, checkToken, <span class="keyword">function</span> (<span class="params">req, res, next</span>) &#123;</span><br><span class="line">  <span class="title class_">AccountModel</span>.<span class="title function_">find</span>(&#123; <span class="attr">_id</span>: req.<span class="property">params</span>.<span class="property">id</span> &#125;)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">      res.<span class="title function_">json</span>(&#123;</span><br><span class="line">        <span class="attr">code</span>: <span class="string">&quot;0000&quot;</span>,</span><br><span class="line">        <span class="attr">msg</span>: <span class="string">&quot;获取成功&quot;</span>,</span><br><span class="line">        <span class="attr">data</span>: data,</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">catch</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      res.<span class="title function_">json</span>(&#123;</span><br><span class="line">        <span class="attr">code</span>: <span class="string">&quot;1004&quot;</span>,</span><br><span class="line">        <span class="attr">msg</span>: <span class="string">&quot;获取失败&quot;</span>,</span><br><span class="line">        <span class="attr">data</span>: <span class="literal">null</span>,</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>更新账单接口</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">router.<span class="title function_">patch</span>(<span class="string">&quot;/account/:id&quot;</span>, checkToken, <span class="keyword">function</span> (<span class="params">req, res, next</span>) &#123;</span><br><span class="line">  <span class="title class_">AccountModel</span>.<span class="title function_">updateOne</span>(&#123; <span class="attr">_id</span>: req.<span class="property">params</span>.<span class="property">id</span> &#125;, req.<span class="property">body</span>)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">      res.<span class="title function_">json</span>(&#123;</span><br><span class="line">        <span class="attr">code</span>: <span class="string">&quot;0000&quot;</span>,</span><br><span class="line">        <span class="attr">msg</span>: <span class="string">&quot;更新成功&quot;</span>,</span><br><span class="line">        <span class="attr">data</span>: data,</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">catch</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      res.<span class="title function_">json</span>(&#123;</span><br><span class="line">        <span class="attr">code</span>: <span class="string">&quot;1005&quot;</span>,</span><br><span class="line">        <span class="attr">msg</span>: <span class="string">&quot;更新失败&quot;</span>,</span><br><span class="line">        <span class="attr">data</span>: <span class="literal">null</span>,</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p><em>注意 patch 是局部更新，而 put 是覆盖式更新</em></p>
<p>以上接口均可以通过接口测试工具去测试是否正常。</p>
<p><em>在之前的 res 响应中，我们都是通过 res.render 去响应一个页面。而接口则是只需响应一个 json（一般情况下）格式的数据即可。由前端拿到数据后去做进一步的处理，最终呈现页面。</em></p>
<h2 id="十二、会话控制"><a href="#十二、会话控制" class="headerlink" title="十二、会话控制"></a>十二、会话控制</h2><h3 id="1、Web-开发模式"><a href="#1、Web-开发模式" class="headerlink" title="1、Web 开发模式"></a>1、Web 开发模式</h3><p>目前主流的 Web 开发模式有两种，分别是：</p>
<ul>
<li>基于服务端渲染的传统 Web 开发模式</li>
<li>基于前后端分离的新型 Web 开发模式</li>
</ul>
<p>服务端渲染的传统 Web 开发模式：服务器发送给客户端的 HTML 页面，是在服务器通过字符串的拼接，动态生成的（或者模板引擎 ejs）。因此，客户端不需要使用 Ajax 这样的技术额外请求页面的数据</p>
<p>服务端渲染的优缺点</p>
<p>优点：</p>
<ul>
<li>前端耗时少。因为服务器端负责动态生成 HTML 内容，浏览器只需要直接渲染页面即可。尤其是移动端，更省电</li>
<li>有利于 SEO。因为服务器端响应的是完整的 HTML 页面内容，所以爬虫更容易爬取获得信息，更有利于 SEO</li>
</ul>
<p>缺点：</p>
<ul>
<li>占用服务器端资源。即服务器端完成 HTML 页面内容的拼接，如果请求较多，会对服务器造成一定的访问压力</li>
<li>不利于前后端分离，开发效率低。使用服务器端渲染，则无法进行分工合作，尤其对于前端复杂度高的项目，不利于 项目高效开发</li>
</ul>
<p>前后端分离的 Web 开发模式：依赖于 Ajax 技术的广泛应用。简而言之，前后端分离的 Web 开发模式， 就是后端只负责提供 API 接口，前端使用 Ajax 调用接口的开发模式</p>
<p>前后端分离的优缺点</p>
<p>优点：</p>
<ul>
<li>开发体验好。前端专注于 UI 页面的开发，后端专注于 api 的开发，且前端有更多的选择性</li>
<li>用户体验好。Ajax 技术的广泛应用，极大的提高了用户的体验，可以轻松实现页面的局部刷新</li>
<li>减轻了服务器端的渲染压力。因为页面最终是在每个用户的浏览器中生成的</li>
</ul>
<p>缺点：</p>
<ul>
<li>不利于 SEO。因为完整的 HTML 页面需要在客户端动态拼接完成，所以爬虫对无法爬取页面的有效信息。（解决方 案：利用 Vue、React 等前端框架的 SSR （server side render）技术能够很好的解决 SEO 问题！）</li>
</ul>
<p>如何选择 Web 开发模式</p>
<p>不谈业务场景而盲目选择使用何种开发模式都是耍流氓。</p>
<ul>
<li>比如企业级网站，主要功能是展示而没有复杂的交互，并且需要良好的 SEO，则这时我们就需要使用服务器端渲染</li>
<li>而类似后台管理项目，交互性比较强，不需要考虑 SEO，那么就可以使用前后端分离的开发模式</li>
</ul>
<p>另外，具体使用何种开发模式并不是绝对的，为了同时兼顾了首页的渲染速度和前后端分离的开发效率，一些网站采用了 首屏服务器端渲染 + 其他页面前后端分离的开发模式</p>
<p>HTTP 是一种无状态的协议。所谓 HTTP 协议的无状态性，指的是客户端的每次 HTTP 请求都是独立的，连续多个请求之间没有直接的关系，服务器不会主动保留每次 HTTP 请求的状态。因此它没有办法区分多次的请求是否来自于同一个客户端， 无法区分用户 而产品中又大量存在的这样的需求，所以我们需要通过 会话控制 来解决该问题</p>
<p>常见的会话控制技术有三种：</p>
<ul>
<li>cookie</li>
<li>session</li>
<li>token</li>
</ul>
<p>对于服务端渲染和前后端分离这两种开发模式来说，分别有着不同的身份认证方案：</p>
<ul>
<li>服务端渲染推荐使用 Session 认证机制</li>
<li>前后端分离推荐使用 JWT 认证机制</li>
</ul>
<h3 id="2、Cookie"><a href="#2、Cookie" class="headerlink" title="2、Cookie"></a>2、Cookie</h3><p>Cookie 是 HTTP 服务器发送到用户浏览器并存储在用户浏览器中的一段不超过 4 KB 的字符串。它由一个名称（Name）、一个值（Value）和其它几个用 于控制 Cookie 有效期、安全性、使用范围的可选属性组成。</p>
<p>不同域名下的 Cookie 各自独立，每当客户端发起请求时，会自动把当前域名下所有未过期的 Cookie 一同发送到服务器</p>
<p>客户端第一次请求服务器的时候，服务器通过响应头的形式，向客户端发送一个身份认证的 Cookie，客户端会自动 将 Cookie 保存在浏览器中</p>
<p>随后，当客户端浏览器每次请求服务器的时候，浏览器会自动将身份认证相关的 Cookie，通过请求头的形式发送给 服务器，服务器即可验明客户端的身份</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230419094654761.png" alt="image-20230419094654761"></p>
<p><em>Cookie 就像我们去办某个店的会员，当我们成为会员之后，店子会给我们发一张会员卡。后续我们出示会员卡来店即可认证我们的身份</em></p>
<p>express 中可以使用 cookie-parser 操作 cookie</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="comment">//1. 安装 cookie-parser npm i cookie-parser</span></span><br><span class="line"><span class="comment">//2. 引入 cookieParser 包</span></span><br><span class="line"><span class="keyword">const</span> cookieParser = <span class="built_in">require</span>(<span class="string">&quot;cookie-parser&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="comment">//3. 设置 cookieParser 中间件</span></span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">cookieParser</span>());</span><br><span class="line"><span class="comment">//4-1 设置 cookie</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/set-cookie&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 不带时效性</span></span><br><span class="line">  response.<span class="title function_">cookie</span>(<span class="string">&quot;username&quot;</span>, <span class="string">&quot;wangwu&quot;</span>);</span><br><span class="line">  <span class="comment">// 带时效性</span></span><br><span class="line">  response.<span class="title function_">cookie</span>(<span class="string">&quot;email&quot;</span>, <span class="string">&quot;23123456@qq.com&quot;</span>, &#123; <span class="attr">maxAge</span>: <span class="number">5</span> * <span class="number">60</span> * <span class="number">1000</span> &#125;);</span><br><span class="line">  <span class="comment">//响应</span></span><br><span class="line">  response.<span class="title function_">send</span>(<span class="string">&quot;Cookie的设置&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//4-2 读取 cookie</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/get-cookie&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">//读取 cookie</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(request.<span class="property">cookies</span>);</span><br><span class="line">  <span class="comment">//响应体</span></span><br><span class="line">  response.<span class="title function_">send</span>(<span class="string">&quot;Cookie的读取&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//4-3 删除cookie</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/delete-cookie&quot;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">//删除</span></span><br><span class="line">  response.<span class="title function_">clearCookie</span>(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">  <span class="comment">//响应</span></span><br><span class="line">  response.<span class="title function_">send</span>(<span class="string">&quot;cookie 的清除&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//4. 启动服务</span></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">3000</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;服务已经启动....&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h3 id="3、Session"><a href="#3、Session" class="headerlink" title="3、Session"></a>3、Session</h3><p>由于 Cookie 是存储在浏览器中的，而且浏览器也提供了读写 Cookie 的 API，因此 Cookie 很容易被伪造，不具有安全 性。因此不建议服务器将重要的隐私数据，通过 Cookie 的形式发送给浏览器</p>
<p>为了防止客户伪造会员卡，收银员在拿到客户出示的会员卡之后，还要在收银机上进行刷卡认证。只有收银机确认存在的 会员卡，才能被正常使用</p>
<p>这种“会员卡 + 刷卡认证”的设计理念，就是 Session 认证机制的精髓</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230419095403744.png" alt="image-20230419095403744"></p>
<p>express 中可以使用 express-session 对 session 进行操作</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="comment">//1. 安装包 npm i express-session connect-mongo</span></span><br><span class="line"><span class="comment">//2. 引入 express-session connect-mongo</span></span><br><span class="line"><span class="keyword">const</span> session = <span class="built_in">require</span>(<span class="string">&quot;express-session&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">MongoStore</span> = <span class="built_in">require</span>(<span class="string">&quot;connect-mongo&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="comment">//3. 设置 session 的中间件</span></span><br><span class="line">app.<span class="title function_">use</span>(</span><br><span class="line">  <span class="title function_">session</span>(&#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;sid&quot;</span>, <span class="comment">//设置cookie的name，默认值是：connect.sid</span></span><br><span class="line">    <span class="attr">secret</span>: <span class="string">&quot;atguigu&quot;</span>, <span class="comment">//参与加密的字符串（又称签名）</span></span><br><span class="line">    <span class="attr">saveUninitialized</span>: <span class="literal">false</span>, <span class="comment">//是否为每次请求都设置一个cookie用来存储session的id</span></span><br><span class="line">    <span class="attr">resave</span>: <span class="literal">true</span>, <span class="comment">//是否在每次请求时重新保存session</span></span><br><span class="line">    <span class="attr">store</span>: <span class="title class_">MongoStore</span>.<span class="title function_">create</span>(&#123;</span><br><span class="line">      <span class="attr">mongoUrl</span>: <span class="string">&quot;mongodb://127.0.0.1:27017/project&quot;</span>, <span class="comment">//数据库的连接配置</span></span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="attr">cookie</span>: &#123;</span><br><span class="line">      <span class="attr">httpOnly</span>: <span class="literal">true</span>, <span class="comment">// 开启后前端无法通过 JS 操作</span></span><br><span class="line">      <span class="attr">maxAge</span>: <span class="number">1000</span> * <span class="number">300</span>, <span class="comment">// 这一条 是控制 sessionID 的过期时间的！！！</span></span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;)</span><br><span class="line">);</span><br><span class="line"><span class="comment">//创建 session</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/login&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">//设置session</span></span><br><span class="line">  req.<span class="property">session</span>.<span class="property">username</span> = <span class="string">&quot;zhangsan&quot;</span>;</span><br><span class="line">  req.<span class="property">session</span>.<span class="property">email</span> = <span class="string">&quot;zhangsan@qq.com&quot;</span>;</span><br><span class="line">  res.<span class="title function_">send</span>(<span class="string">&quot;登录成功&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//获取 session</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/home&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;session的信息&quot;</span>);</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(req.<span class="property">session</span>.<span class="property">username</span>);</span><br><span class="line">  <span class="keyword">if</span> (req.<span class="property">session</span>.<span class="property">username</span>) &#123;</span><br><span class="line">    res.<span class="title function_">send</span>(<span class="string">`你好 <span class="subst">$&#123;req.session.username&#125;</span>`</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    res.<span class="title function_">send</span>(<span class="string">&quot;登录 注册&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//销毁 session</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&quot;/logout&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">//销毁session</span></span><br><span class="line">  <span class="comment">// res.send(&#x27;设置session&#x27;);</span></span><br><span class="line">  req.<span class="property">session</span>.<span class="title function_">destroy</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    res.<span class="title function_">send</span>(<span class="string">&quot;成功退出&quot;</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">3000</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;服务已经启动, 端口 &quot;</span> + <span class="number">3000</span> + <span class="string">&quot; 监听中...&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>session 和 cookie 的区别</p>
<ul>
<li>存储的位置。cookie：浏览器端，session：服务端</li>
<li>安全性。cookie 是以明文的方式存放在客户端的，安全性相对较低。session 存放于服务器中，所以安全性 相对 较好</li>
<li>网络传输量。cookie 设置内容过多会增大报文体积， 会影响传输效率。session 数据存储在服务器，只是通过 cookie 传递 id，所以不影响传输效率</li>
<li>存储限制。浏览器限制单个 cookie 保存的数据不能超过 4K ，且单个域名下的存储数量也有限制。session 数据存储在服务器中，所以没有这些限制</li>
</ul>
<h3 id="4、完善账单案例"><a href="#4、完善账单案例" class="headerlink" title="4、完善账单案例"></a>4、完善账单案例</h3><p>接下来我们可以对账单案例添加权限认证的功能</p>
<p>在 views 目录下新建登录和注册页面 reg.ejs 和 login.ejs</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta charset=&quot;UTF-8&quot; /&gt;</span><br><span class="line">  &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot; /&gt;</span><br><span class="line">  &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot; /&gt;</span><br><span class="line">  &lt;title&gt;注册&lt;/title&gt;</span><br><span class="line">  &lt;link href=&quot;https://cdn.bootcdn.net/ajax/libs/twitter-bootstrap/3.3.7/css/bootstrap.css&quot; rel=&quot;stylesheet&quot; /&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">  &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;row&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;col-xs-12 col-md-8 col-md-offset-2 col-lg-4 col-lg-offset-4&quot;&gt;</span><br><span class="line">        &lt;h2&gt;注册&lt;/h2&gt;</span><br><span class="line">        &lt;hr /&gt;</span><br><span class="line">        &lt;form method=&quot;post&quot; action=&quot;/reg&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;form-group&quot;&gt;</span><br><span class="line">            &lt;label for=&quot;item&quot;&gt;用户名&lt;/label&gt;</span><br><span class="line">            &lt;input name=&quot;username&quot; type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;item&quot; /&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;div class=&quot;form-group&quot;&gt;</span><br><span class="line">            &lt;label for=&quot;time&quot;&gt;密码&lt;/label&gt;</span><br><span class="line">            &lt;input name=&quot;password&quot; type=&quot;password&quot; class=&quot;form-control&quot; id=&quot;time&quot; /&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;hr&gt;</span><br><span class="line">          &lt;button type=&quot;submit&quot; class=&quot;btn btn-primary btn-block&quot;&gt;注册&lt;/button&gt;</span><br><span class="line">        &lt;/form&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>在 routes&#x2F;web 目录下新建 user.js 用来存放用户登录、注册、退出相关的路由，并配置路由规则</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="comment">// 引入md5对密码进行加密</span></span><br><span class="line"><span class="keyword">const</span> md5 = <span class="built_in">require</span>(<span class="string">&quot;md5&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> router = express.<span class="title class_">Router</span>();</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">UserModel</span> = <span class="built_in">require</span>(<span class="string">&quot;../../Models/UserModel&quot;</span>);</span><br><span class="line"><span class="comment">//注册页面</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&quot;/reg&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.<span class="title function_">render</span>(<span class="string">&quot;reg&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 提交注册表单</span></span><br><span class="line">router.<span class="title function_">post</span>(<span class="string">&quot;/reg&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 使用md5对密码进行加密，存储到数据库中</span></span><br><span class="line">  <span class="title class_">UserModel</span>.<span class="title function_">create</span>(&#123; ...req.<span class="property">body</span>, <span class="attr">password</span>: <span class="title function_">md5</span>(req.<span class="property">body</span>.<span class="property">password</span>) &#125;)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      res.<span class="title function_">render</span>(<span class="string">&quot;success&quot;</span>, &#123; <span class="attr">msg</span>: <span class="string">&quot;注册成功&quot;</span>, <span class="attr">url</span>: <span class="string">&quot;/login&quot;</span> &#125;);</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">catch</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      res.<span class="title function_">render</span>(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//登录页面</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&quot;/login&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  res.<span class="title function_">render</span>(<span class="string">&quot;login&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//提交登录表单</span></span><br><span class="line">router.<span class="title function_">post</span>(<span class="string">&quot;/login&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; username, password &#125; = req.<span class="property">body</span>;</span><br><span class="line">  <span class="comment">// 用户提交的账号密码跟数据库存储的账号密码进行比对</span></span><br><span class="line">  <span class="title class_">UserModel</span>.<span class="title function_">findOne</span>(&#123; <span class="attr">username</span>: username, <span class="attr">password</span>: <span class="title function_">md5</span>(password) &#125;)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (!data) <span class="keyword">return</span> res.<span class="title function_">render</span>(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">      res.<span class="title function_">render</span>(<span class="string">&quot;success&quot;</span>, &#123; <span class="attr">msg</span>: <span class="string">&quot;登录成功&quot;</span>, <span class="attr">url</span>: <span class="string">&quot;/account&quot;</span> &#125;);</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">catch</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      res.<span class="title function_">render</span>(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = router;</span><br></pre></td></tr></table></figure>

<p>Models 目录下新建 UserModel.js 用来存放用户登录的账户密码</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">&quot;mongoose&quot;</span>);</span><br><span class="line"><span class="comment">//创建文档结构对象</span></span><br><span class="line"><span class="keyword">let</span> <span class="title class_">UserSchema</span> = <span class="keyword">new</span> mongoose.<span class="title class_">Schema</span>(&#123;</span><br><span class="line">  <span class="attr">username</span>: &#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="title class_">String</span>,</span><br><span class="line">    <span class="attr">required</span>: <span class="literal">true</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">password</span>: &#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="title class_">String</span>,</span><br><span class="line">    <span class="attr">required</span>: <span class="literal">true</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//6. 创建文档模型对象</span></span><br><span class="line"><span class="keyword">let</span> <span class="title class_">UserModel</span> = mongoose.<span class="title function_">model</span>(<span class="string">&quot;user&quot;</span>, <span class="title class_">UserSchema</span>);</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title class_">UserModel</span>;</span><br></pre></td></tr></table></figure>

<p>最后 app.js 引入并注册新建的路由规则，这样一个简单的登录注册功能就实现了</p>
<p>接下来我们需要进行 Session 身份认证</p>
<p>在 app.js 中设置 session 的中间件</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 引入 express-session connect-mongo</span></span><br><span class="line"><span class="keyword">const</span> session = <span class="built_in">require</span>(<span class="string">&quot;express-session&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">MongoStore</span> = <span class="built_in">require</span>(<span class="string">&quot;connect-mongo&quot;</span>);</span><br><span class="line"><span class="comment">//设置 session 的中间件</span></span><br><span class="line">app.<span class="title function_">use</span>(</span><br><span class="line">  <span class="title function_">session</span>(&#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;sid&quot;</span>, <span class="comment">//设置cookie的name，默认值是：connect.sid</span></span><br><span class="line">    <span class="attr">secret</span>: <span class="string">&quot;iloveyou&quot;</span>, <span class="comment">//参与加密的字符串（又称签名）</span></span><br><span class="line">    <span class="attr">saveUninitialized</span>: <span class="literal">false</span>, <span class="comment">//是否为每次请求都设置一个cookie用来存储session的id</span></span><br><span class="line">    <span class="attr">resave</span>: <span class="literal">true</span>, <span class="comment">//是否在每次请求时重新保存session</span></span><br><span class="line">    <span class="attr">store</span>: <span class="title class_">MongoStore</span>.<span class="title function_">create</span>(&#123;</span><br><span class="line">      <span class="attr">mongoUrl</span>: <span class="string">&quot;mongodb://127.0.0.1:27017/bilibili&quot;</span>, <span class="comment">//数据库的连接配置</span></span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="attr">cookie</span>: &#123;</span><br><span class="line">      <span class="attr">httpOnly</span>: <span class="literal">true</span>, <span class="comment">// 开启后前端无法通过 JS 操作</span></span><br><span class="line">      <span class="attr">maxAge</span>: <span class="number">1000</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span>, <span class="comment">// 这一条 是控制 sessionID 的过期时间的！！！</span></span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;)</span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<p>登录成功后写入 session</p>
<p>user.js 中</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//提交登录表单</span></span><br><span class="line">router.<span class="title function_">post</span>(<span class="string">&quot;/login&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; username, password &#125; = req.<span class="property">body</span>;</span><br><span class="line">  <span class="title class_">UserModel</span>.<span class="title function_">findOne</span>(&#123; <span class="attr">username</span>: username, <span class="attr">password</span>: <span class="title function_">md5</span>(password) &#125;)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (!data) <span class="keyword">return</span> res.<span class="title function_">render</span>(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">      <span class="comment">// 登录成功写入session</span></span><br><span class="line">      req.<span class="property">session</span>.<span class="property">username</span> = username;</span><br><span class="line">      res.<span class="title function_">render</span>(<span class="string">&quot;success&quot;</span>, &#123; <span class="attr">msg</span>: <span class="string">&quot;登录成功&quot;</span>, <span class="attr">url</span>: <span class="string">&quot;/account&quot;</span> &#125;);</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">catch</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      res.<span class="title function_">render</span>(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>但是截至到现在，我们只是做了 session 写入，并没有做 session 验证。此时仍然可以通过浏览器地址栏输入路径直接访问账单列表页、并对其进行新增和删除操作。因此我们还需要一个 session 验证的中间件</p>
<p>新建文件夹 MiddleWare，并在此文件夹下新建 sessionLogin.js</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 设置页面访问session验证的中间件</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="keyword">function</span> (<span class="params">req, res, next</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (!req.<span class="property">session</span>.<span class="property">username</span>) <span class="keyword">return</span> res.<span class="title function_">redirect</span>(<span class="string">&quot;/login&quot;</span>);</span><br><span class="line">  <span class="title function_">next</span>();</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>在 routes&#x2F;web&#x2F;index.js 引入上述中间件并为需要的页面单独添加路由中间件即可。此时，若我们没有登录，直接通过浏览器地址栏输入账单页面的 url 是无法访问的</p>
<h3 id="5、CSRF"><a href="#5、CSRF" class="headerlink" title="5、CSRF"></a>5、CSRF</h3><p>CSRF（Cross Site Request Forgery，跨站域请求伪造），也被称为 “One Click Attack” 或者 Session Riding，通常缩写为 CSRF 或者 XSRF</p>
<p>原理</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230419141638423.png" alt="image-20230419141638423"></p>
<p>前面我们提到，不同域名下的 Cookie 各自独立，每当客户端发起请求时，会自动把当前域名下所有未过期的 Cookie 一同发送到服务器。然而相同域名和协议下不同端口之间的 <code>cookie</code> 是共享的。这是因为 <code>cookie</code> 存储在客户端的浏览器中，而不是在服务器中，因此不同的端口只是访问同一个服务器的不同入口，它们共享同一个 <code>cookie</code> 存储空间</p>
<p>CSRF 攻击就是利用了浏览器在同一域名下共享 <code>cookie</code> 的特性，从而让攻击者能够携带合法用户的 <code>cookie</code> 发送恶意请求，冒充合法用户执行一些操作</p>
<p><em>更多 CSRF 攻击知识请参考<a href="https://blog.csdn.net/weixin_44211968/article/details/124703525">https://blog.csdn.net/weixin_44211968/article/details/124703525</a></em></p>
<h3 id="6、JWT-认证机制"><a href="#6、JWT-认证机制" class="headerlink" title="6、JWT 认证机制"></a>6、JWT 认证机制</h3><p>Session 认证机制需要配合 Cookie 才能实现。由于 Cookie 默认不支持跨域访问，所以，当涉及到前端跨域请求后端接 口的时候，需要做很多额外的配置，才能实现跨域 Session 认证。于是就引出了 token</p>
<p>token 是服务端生成并返回给 HTTP 客户端的一串加密字符串， token 中保存着 用户信息</p>
<p>token 的特点</p>
<ul>
<li>服务端压力更小（数据存储在客户端）</li>
<li>相对更安全（数据加密、可以避免 CSRF（跨站请求伪造））</li>
<li>扩展性更强（服务间可以共享、增加服务节点更简单）</li>
</ul>
<p>JWT</p>
<p>JWT（JSON Web Token ）是目前最流行的跨域认证解决方案，可用于基于 token 的身份验证</p>
<p>JWT 的工作原理</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230419144115403.png" alt="image-20230419144115403"></p>
<p><em>总结：用户的信息通过 Token 字符串的形式，保存在客户端浏览器中。服务器通过还原 Token 字符串的形式来认证用户的身份</em></p>
<p>JWT 的使用方式</p>
<p>客户端收到服务器返回的 JWT 之后，通常会将它储存在 localStorage 或 sessionStorage 中</p>
<p>此后，客户端每次与服务器通信，都要带上这个 JWT 的字符串，从而进行身份认证。推荐的做法是把 JWT 放在 HTTP 请求头的 Authorization 字段中，格式如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Authorization:Bearer &lt;token&gt;</span><br></pre></td></tr></table></figure>

<p>express 中使用 jsonwebtoken 包来操作 token</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//导入 jsonwebtokan</span></span><br><span class="line"><span class="keyword">const</span> jwt = <span class="built_in">require</span>(<span class="string">&quot;jsonwebtoken&quot;</span>);</span><br><span class="line"><span class="comment">//创建 token</span></span><br><span class="line"><span class="comment">// jwt.sign(数据, 加密字符串, 配置对象)</span></span><br><span class="line"><span class="keyword">let</span> token = jwt.<span class="title function_">sign</span>(</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">username</span>: <span class="string">&quot;zhangsan&quot;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">&quot;iloveyou&quot;</span>,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">expiresIn</span>: <span class="number">60</span>, <span class="comment">//过期时间 单位是 秒</span></span><br><span class="line">  &#125;</span><br><span class="line">);</span><br><span class="line"><span class="comment">//解析 token</span></span><br><span class="line">jwt.<span class="title function_">verify</span>(token, <span class="string">&quot;atguigu&quot;</span>, <span class="function">(<span class="params">err, data</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (err) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;校验失败~~&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p><em>更多 JWT 相关知识请参考<a href="https://www.ruanyifeng.com/blog/2018/07/json_web_token-tutorial.html">https://www.ruanyifeng.com/blog/2018/07/json_web_token-tutorial.html</a></em></p>
<p>完善账单案例</p>
<p>接下来我们可以使用 JWT 认证机制完善账单案例的 API 接口了。之前我们所写的接口，能够直接去访问。现在我们希望必须在 token 检验通过后才能访问接口</p>
<p>在 routes&#x2F;api 下新建 auth.js。配置登录的 api 接口，登录成功设置 token</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&quot;express&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> md5 = <span class="built_in">require</span>(<span class="string">&quot;md5&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">UserModel</span> = <span class="built_in">require</span>(<span class="string">&quot;../../Models/UserModel&quot;</span>);</span><br><span class="line"><span class="comment">//导入 jsonwebtokan</span></span><br><span class="line"><span class="keyword">const</span> jwt = <span class="built_in">require</span>(<span class="string">&quot;jsonwebtoken&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> router = express.<span class="title class_">Router</span>();</span><br><span class="line"><span class="comment">//提交登录表单</span></span><br><span class="line">router.<span class="title function_">post</span>(<span class="string">&quot;/login&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; username, password &#125; = req.<span class="property">body</span>;</span><br><span class="line">  <span class="title class_">UserModel</span>.<span class="title function_">findOne</span>(&#123; <span class="attr">username</span>: username, <span class="attr">password</span>: <span class="title function_">md5</span>(password) &#125;)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (!data) &#123;</span><br><span class="line">        res.<span class="title function_">json</span>(&#123;</span><br><span class="line">          <span class="attr">code</span>: <span class="string">&quot;1006&quot;</span>,</span><br><span class="line">          <span class="attr">msg</span>: <span class="string">&quot;用户名或密码错误&quot;</span>,</span><br><span class="line">          <span class="attr">data</span>: <span class="literal">null</span>,</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 登录成功创建token</span></span><br><span class="line">      <span class="comment">// jwt.sign(数据, 加密字符串, 配置对象)</span></span><br><span class="line">      <span class="keyword">let</span> token = jwt.<span class="title function_">sign</span>(</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">username</span>: <span class="string">&quot;username&quot;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;iloveyou&quot;</span>,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">expiresIn</span>: <span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span>, <span class="comment">//过期时间 单位是 秒</span></span><br><span class="line">        &#125;</span><br><span class="line">      );</span><br><span class="line">      res.<span class="title function_">json</span>(&#123;</span><br><span class="line">        <span class="attr">code</span>: <span class="string">&quot;0000&quot;</span>,</span><br><span class="line">        <span class="attr">msg</span>: <span class="string">&quot;登录成功&quot;</span>,</span><br><span class="line">        <span class="attr">data</span>: token,</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">catch</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      res.<span class="title function_">json</span>(&#123;</span><br><span class="line">        <span class="attr">code</span>: <span class="string">&quot;1007&quot;</span>,</span><br><span class="line">        <span class="attr">msg</span>: <span class="string">&quot;登录失败&quot;</span>,</span><br><span class="line">        <span class="attr">data</span>: <span class="literal">null</span>,</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = router;</span><br></pre></td></tr></table></figure>

<p>接下来在 MiddleWare 目录下新建 checkToken.js</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//导入 jwt</span></span><br><span class="line"><span class="keyword">const</span> jwt = <span class="built_in">require</span>(<span class="string">&quot;jsonwebtoken&quot;</span>);</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="function">(<span class="params">req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> token = req.<span class="title function_">get</span>(<span class="string">&quot;token&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span> (!token) &#123;</span><br><span class="line">    res.<span class="title function_">json</span>(&#123;</span><br><span class="line">      <span class="attr">code</span>: <span class="string">&quot;1008&quot;</span>,</span><br><span class="line">      <span class="attr">msg</span>: <span class="string">&quot;token缺失&quot;</span>,</span><br><span class="line">      <span class="attr">data</span>: <span class="literal">null</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//校验token</span></span><br><span class="line">  jwt.<span class="title function_">verify</span>(token, <span class="string">&quot;iloveyou&quot;</span>, <span class="function">(<span class="params">err, data</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">      res.<span class="title function_">json</span>(&#123;</span><br><span class="line">        <span class="attr">code</span>: <span class="string">&quot;1008&quot;</span>,</span><br><span class="line">        <span class="attr">msg</span>: <span class="string">&quot;token验证失败&quot;</span>,</span><br><span class="line">        <span class="attr">data</span>: <span class="literal">null</span>,</span><br><span class="line">      &#125;);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">next</span>();</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>最后在 api&#x2F;account.js 的 api 路由规则中使用该路由中间件即可。在 APIFOX 中测试，此时必须在 headers 中添加 token 才能访问 API 接口</p>
<h2 id="十二、项目上线部署"><a href="#十二、项目上线部署" class="headerlink" title="十二、项目上线部署"></a>十二、项目上线部署</h2><h3 id="1、购买云服务器"><a href="#1、购买云服务器" class="headerlink" title="1、购买云服务器"></a>1、购买云服务器</h3><p>以阿里云为例，购买成功后</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230420104617976.png" alt="image-20230420104617976"></p>
<h3 id="2、连接云服务器"><a href="#2、连接云服务器" class="headerlink" title="2、连接云服务器"></a>2、连接云服务器</h3><ol>
<li>复制我们上面购买的云服务器的公网 IP 地址</li>
<li>桌面-开始菜单-搜索远程桌面连接</li>
<li>输入复制的公网 IP 地址连接云服务器</li>
</ol>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230420104851357.png" alt="image-20230420104851357"></p>
<h3 id="3、安装软件"><a href="#3、安装软件" class="headerlink" title="3、安装软件"></a>3、安装软件</h3><p>在云服务器上安装 git、node、MongoDB</p>
<h3 id="4、启动项目"><a href="#4、启动项目" class="headerlink" title="4、启动项目"></a>4、启动项目</h3><ol>
<li>在云服务器 C 盘新建 www 文件夹</li>
<li>在 www 文件夹下运行终端命令，将项目从远程仓库克隆下来</li>
<li>安装项目依赖</li>
<li>启动项目（确保 MongoDB 的服务也已经启动）</li>
</ol>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230420105536526.png" alt="image-20230420105536526"></p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230420105554036.png" alt="image-20230420105554036"></p>
<p>在云服务器的浏览器地址栏输入<a href="http://127.0.0.1:3000，我们会发现此时项目已经启动了。而且，我们在其他任何一台接入互联网的电脑上输入云服务器的公网IP，都可以访问到我们的项目">http://127.0.0.1:3000，我们会发现此时项目已经启动了。而且，我们在其他任何一台接入互联网的电脑上输入云服务器的公网IP，都可以访问到我们的项目</a></p>
<h3 id="5、域名购买与解析"><a href="#5、域名购买与解析" class="headerlink" title="5、域名购买与解析"></a>5、域名购买与解析</h3><p>阿里云购买域名</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230420110507274.png" alt="image-20230420110507274"></p>
<p>购买完成，打开域名控制台，等待购买的域名状态审核通过后点击解析，将云服务器的 IP 地址与域名做映射关联</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230420110719462.png" alt="image-20230420110719462"></p>
<p>添加记录，记录值就是云服务器的 IP 地址</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230420110946503.png" alt="image-20230420110946503"></p>
<p>配置完成后，即可通过主机记录对应的域名访问我们的项目了</p>
<p>当然，除了 Nodejs server，我们还可以将项目部署在 Nginx、Apache、Tomcat、IIS 等 web 服务器上。他们都可以向外提供 web 服务</p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title>我的前端学习资源汇总</title>
    <url>/2023/03/27/%E6%88%91%E7%9A%84%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%BA%90%E6%B1%87%E6%80%BB/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>本篇本章是想将我前端之路上的各种资源，包括视频、博客、网站、我自己电脑常用的软件进行归纳整理备份。虽然谷歌浏览器相关的已经和我的谷歌账号绑定了，vscode 相关的也和 github 账号绑定了。但还是手动备份一份心里踏实一些。</p>
<h2 id="一、常用软件"><a href="#一、常用软件" class="headerlink" title="一、常用软件"></a>一、常用软件</h2><p>浏览器：Chrome、Edge、Firefox</p>
<p>Chrome 浏览器插件：Vue.js devtools、iGG 谷歌学术助手、RSS Reader Extension</p>
<p>代码编辑器：VSCode</p>
<p>VSCode 插件：any-rule、Atom One Dark Theme、Auto Rename Tag、ChatGPT 中文版、Chinese（Simplified）（简体中文）、Code Runner、Codeif、Easy LESS、Error Lens、ESLint、HTML CSS Support、JavaScript（ES6）code snippets、jQuery Code Snippets、Live Server、Material Icon Theme、open in browser、Prettier-Code formatter、px to rem&amp;rpx&amp;vw（cssrem）、vscode-icons、Vue Language Features (Volar)、VueHelper、Vetur</p>
<p>VSCode 字体：Fira Code</p>
<p>VSCode 中 settings.json 设置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;editor.formatOnSave&quot;: true,</span><br><span class="line">  &quot;security.workspace.trust.untrustedFiles&quot;: &quot;open&quot;,</span><br><span class="line">  &quot;workbench.iconTheme&quot;: &quot;material-icon-theme&quot;,</span><br><span class="line">  &quot;liveServer.settings.donotShowInfoMsg&quot;: true,</span><br><span class="line">  &quot;workbench.colorCustomizations&quot;: &#123;</span><br><span class="line">    &quot;editor.lineHighlightBackground&quot;: &quot;#1073cf2d&quot;,</span><br><span class="line">    &quot;editor.lineHighlightBorder&quot;: &quot;#9fced11f&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;editor.wordWrap&quot;: &quot;off&quot;,</span><br><span class="line">  &quot;diffEditor.wordWrap&quot;: &quot;off&quot;,</span><br><span class="line">  &quot;editor.guides.bracketPairs&quot;: false,</span><br><span class="line">  &quot;liveServer.settings.CustomBrowser&quot;: &quot;chrome&quot;,</span><br><span class="line">  &quot;code-runner.runInTerminal&quot;: true,</span><br><span class="line">  &quot;vsicons.dontShowNewVersionMessage&quot;: true,</span><br><span class="line">  &quot;emmet.triggerExpansionOnTab&quot;: true,</span><br><span class="line">  &quot;explorer.confirmDelete&quot;: false,</span><br><span class="line">  &quot;editor.inlayHints.enabled&quot;: &quot;on&quot;,</span><br><span class="line">  &quot;less.compile&quot;: &#123;</span><br><span class="line">    &quot;out&quot;: &quot;../css/&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;cssrem.rootFontSize&quot;: 80,</span><br><span class="line">  &quot;cssrem.vwDesign&quot;: 1920,</span><br><span class="line">  &quot;vetur.completion.scaffoldSnippetSources&quot;: &#123;</span><br><span class="line">    &quot;workspace&quot;: &quot;💼&quot;,</span><br><span class="line">    &quot;user&quot;: &quot;🗒️&quot;,</span><br><span class="line">    &quot;vetur&quot;: &quot;✌&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;emmet.syntaxProfiles&quot;: &#123;</span><br><span class="line">    &quot;vue-html&quot;: &quot;html&quot;,</span><br><span class="line">    &quot;vue&quot;: &quot;html&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  //vue自动补全</span><br><span class="line">  &quot;files.associations&quot;: &#123;</span><br><span class="line">    &quot;*.vue&quot;: &quot;vue&quot;,</span><br><span class="line">    &quot;*.ejs&quot;: &quot;html&quot;,</span><br><span class="line">    &quot;*.js&quot;: &quot;javascript&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;vetur.experimental.templateInterpolationService&quot;: true,</span><br><span class="line">  &quot;vetur.validation.interpolation&quot;: false,</span><br><span class="line">  &quot;workbench.tree.renderIndentGuides&quot;: &quot;always&quot;,</span><br><span class="line">  &quot;workbench.tree.indent&quot;: 18,</span><br><span class="line">  &quot;workbench.preferredHighContrastLightColorTheme&quot;: &quot;Default Dark+&quot;,</span><br><span class="line">  &quot;workbench.preferredLightColorTheme&quot;: &quot;Default Dark+&quot;,</span><br><span class="line">  &quot;eslint.enable&quot;: true,</span><br><span class="line">  &quot;eslint.run&quot;: &quot;onType&quot;,</span><br><span class="line">  &quot;eslint.options&quot;: &#123;</span><br><span class="line">    &quot;extensions&quot;: [&quot;.js&quot;, &quot;.vue&quot;, &quot;.jsx&quot;, &quot;.tsx&quot;]</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;editor.codeActionsOnSave&quot;: &#123;</span><br><span class="line">    &quot;source.fixAll.eslint&quot;: true</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;workbench.colorTheme&quot;: &quot;Atom One Dark&quot;,</span><br><span class="line">  &quot;editor.tokenColorCustomizations&quot;: &#123;</span><br><span class="line">    &quot;comments&quot;: &#123;</span><br><span class="line">      // 设置字体样式 加粗 下划线 斜体等</span><br><span class="line">      &quot;fontStyle&quot;: &quot;italic&quot;,</span><br><span class="line">      // 设置字体颜色</span><br><span class="line">      &quot;foreground&quot;: &quot;#4CAEE2&quot;</span><br><span class="line">    &#125;, // 注释</span><br><span class="line">    &quot;keywords&quot;: &quot;#0a0&quot;, // 关键字</span><br><span class="line">    &quot;variables&quot;: &quot;#f00&quot;, // 变量名</span><br><span class="line">    &quot;strings&quot;: &quot;#e2d75dbd&quot;, // 字符串</span><br><span class="line">    &quot;functions&quot;: &quot;#5b99fcc9&quot;, // 函数名</span><br><span class="line">    &quot;numbers&quot;: &quot;#AE81FF&quot; // 数字</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;prettier.trailingComma&quot;: &quot;es5&quot;,</span><br><span class="line">  &quot;[vue]&quot;: &#123;</span><br><span class="line">    &quot;editor.defaultFormatter&quot;: &quot;esbenp.prettier-vscode&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;[html]&quot;: &#123;</span><br><span class="line">    &quot;editor.defaultFormatter&quot;: &quot;esbenp.prettier-vscode&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;editor.fontLigatures&quot;: true,</span><br><span class="line">  &quot;editor.fontVariations&quot;: false,</span><br><span class="line">  &quot;settingsSync.ignoredSettings&quot;: [&quot;terminal.integrated.fontFamily&quot;],</span><br><span class="line">  &quot;editor.fontFamily&quot;: &quot;Fira Code&quot;,</span><br><span class="line">  &quot;http.proxyAuthorization&quot;: null,</span><br><span class="line">  &quot;vetur.format.defaultFormatter.js&quot;: &quot;prettier-eslint&quot;,</span><br><span class="line">  &quot;vetur.format.defaultFormatterOptions&quot;: &#123;</span><br><span class="line">    &quot;prettier&quot;: &#123;</span><br><span class="line">      &quot;singleQuote&quot;: true, //用单引号</span><br><span class="line">      &quot;semi&quot;: false //不加分号</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;editor.inlineSuggest.enabled&quot;: true</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>文档笔记：Typora</p>
<p>插件&#x2F;应用：uTools、PxCook 像素大厨</p>
<p>截图工具：snipaste</p>
<p>翻译工具：有道词典</p>
<p>VPN：目前用的红海</p>
<p>API 接口测试工具：Postman、ApiFox</p>
<p>画图工具：DiagramDesigner、draw.io</p>
<p>JSON 格式化工具：Notepad++、Notepad–</p>
<p>github 加速工具：FastGithub、SwitchHosts</p>
<p>数据库管理工具：Navicat</p>
<p>版本控制：git</p>
<p>运行环境：Node.js（自带 npm）、NVM 切换 node 版本、nodemon</p>
<p>查看 npm 包：<a href="https://www.npmjs.com/">https://www.npmjs.com/</a></p>
<p>Web 开发框架：Express</p>
<p>前端框架：Vue</p>
<h2 id="二、常用网站"><a href="#二、常用网站" class="headerlink" title="二、常用网站"></a>二、常用网站</h2><p>Vue：<a href="https://cn.vuejs.org/">https://cn.vuejs.org/</a></p>
<p>ElementUI：<a href="https://element.eleme.cn/#/zh-CN">https://element.eleme.cn/#/zh-CN</a></p>
<p>MDN：<a href="https://developer.mozilla.org/zh-CN/">https://developer.mozilla.org/zh-CN/</a></p>
<p>GitHub：<a href="https://github.com/">https://github.com/</a></p>
<p>稀土掘金：<a href="https://juejin.cn/">https://juejin.cn/</a></p>
<p>书栈网：<a href="https://www.bookstack.cn/">https://www.bookstack.cn/</a></p>
<p>Vant：<a href="https://vant-ui.github.io/vant/#/zh-CN">https://vant-ui.github.io/vant/?#/zh-CN</a></p>
<p>NutUI：<a href="https://nutui.jd.com/#/">https://nutui.jd.com/#/</a></p>
<p>查询兼容性：<a href="https://caniuse.com/">https://caniuse.com/</a></p>
<p>在线工具：<a href="https://tool.lu/">https://tool.lu/</a></p>
<p>lodash 工具库：<a href="https://www.lodashjs.com/">https://www.lodashjs.com/</a></p>
<p>字体图标：<a href="https://www.iconfont.cn/">https://www.iconfont.cn/</a></p>
<p>腾讯云：<a href="https://cloud.tencent.com/">https://cloud.tencent.com/</a></p>
<h2 id="三、学习资源"><a href="#三、学习资源" class="headerlink" title="三、学习资源"></a>三、学习资源</h2><p>前端入门：</p>
<p>pink 老师前端入门教程：<a href="https://www.bilibili.com/video/BV14J4114768">https://www.bilibili.com/video/BV14J4114768</a></p>
<p>ES6： <a href="https://es6.ruanyifeng.com/">https://es6.ruanyifeng.com/</a></p>
<p>Vue2+Vue3 尚硅谷张天禹老师：<a href="https://www.bilibili.com/video/BV1Zy4y1K7SH/?spm_id_from=333.337.search-card.all.click">https://www.bilibili.com/video/BV1Zy4y1K7SH/?spm_id_from=333.337.search-card.all.click</a></p>
<p>Vue3+TS 快速上手：<a href="https://24kcs.github.io/vue3_study/">https://24kcs.github.io/vue3_study/</a></p>
<h2 id="四、常用插件"><a href="#四、常用插件" class="headerlink" title="四、常用插件"></a>四、常用插件</h2><p>移动端 REM 适配：</p>
<ul>
<li><a href="https://github.com/cuth/postcss-pxtorem">postcss-pxtorem</a> 是一款 postcss 插件，用于将单位转化为 rem</li>
<li><a href="https://github.com/amfe/lib-flexible">lib-flexible</a> 用于设置 rem 基准值</li>
</ul>
<p>移动端 vw 适配：postcss-px-to-viewport</p>
<p>网络请求：<a href="https://github.com/axios/axios">axios</a></p>
<p>时间处理：</p>
<ul>
<li><a href="https://momentjs.com/">Moment.js</a></li>
<li><a href="https://day.js.org/">Day.js</a></li>
</ul>
<p>文章样式处理：<a href="https://github.com/sindresorhus/github-markdown-css">github-markdown-css</a></p>
<p>图片裁切处理：<a href="https://github.com/fengyuanchen/cropperjs">cropper.js</a></p>
<p>后台前端解决方案:<a href="https://panjiachen.gitee.io/vue-element-admin-site/zh/">vue-element-admin</a></p>
<p>Excel 导入导出：<a href="https://github.com/SheetJS/js-xlsx">js-xlsx</a></p>
<p>图片地址生成二维码:qrcode</p>
<p>打印：vue-print-nb</p>
<p>数据持久化：vuex-persistedstate</p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title>两种移动端适配方案</title>
    <url>/2023/03/12/%E4%B8%A4%E7%A7%8D%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%80%82%E9%85%8D%E6%96%B9%E6%A1%88/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="一、lib-flexible-postcss-pxtorem"><a href="#一、lib-flexible-postcss-pxtorem" class="headerlink" title="一、lib-flexible+postcss-pxtorem"></a>一、lib-flexible<code>+</code>postcss-pxtorem</h2><p>在相当长一段时间里，这两个插件搭配都是解决移动端布局的神器，<code>lib-flexible</code>是阿里手淘系开源的一个库，用于设置 font-size，同时处理一些窗口缩放的问题。直到今天，这个方案仍是解决移动端布局的主流方案。</p>
<ul>
<li><a href="https://github.com/cuth/postcss-pxtorem">postcss-pxtorem</a> 是一款 postcss 插件，用于将单位转化为 rem</li>
<li><a href="https://github.com/amfe/lib-flexible">lib-flexible</a> 用于设置 rem 基准值</li>
</ul>
<p>下面我们分别将这两个工具配置到项目中完成 REM 适配。</p>
<h3 id="1-1使用-lib-flexible-动态设置-REM-基准值（html-标签的字体大小）"><a href="#1-1使用-lib-flexible-动态设置-REM-基准值（html-标签的字体大小）" class="headerlink" title="1.1使用 lib-flexible 动态设置 REM 基准值（html 标签的字体大小）"></a>1.1<strong>使用 <a href="https://github.com/amfe/lib-flexible">lib-flexible</a> 动态设置 REM 基准值（html 标签的字体大小）</strong></h3><p>1、安装</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yarn add amfe-flexible</span></span><br><span class="line">npm i amfe-flexible</span><br></pre></td></tr></table></figure>

<p>2、然后在 <code>main.js</code> 中加载执行该模块</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&quot;amfe-flexible&quot;</span>;</span><br></pre></td></tr></table></figure>

<p>最后测试：在浏览器中切换不同的手机设备尺寸，观察 html 标签 <code>font-size</code> 的变化。</p>
<h3 id="1-2使用-postcss-pxtorem-将-px-转为-rem"><a href="#1-2使用-postcss-pxtorem-将-px-转为-rem" class="headerlink" title="1.2使用 postcss-pxtorem 将 px 转为 rem"></a>1.2<strong>使用 <a href="https://github.com/cuth/postcss-pxtorem">postcss-pxtorem</a> 将 <code>px</code> 转为 <code>rem</code></strong></h3><p>1、安装</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yarn add -D postcss-pxtorem</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">-D 是 --save-dev 的简写</span></span><br><span class="line">npm install postcss-pxtorem -D</span><br></pre></td></tr></table></figure>

<p>2、然后在<strong>项目根目录</strong>中创建 <code>.postcssrc.js</code> 文件</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">plugins</span>: &#123;</span><br><span class="line">    <span class="attr">autoprefixer</span>: &#123;</span><br><span class="line">      <span class="attr">browsers</span>: [<span class="string">&quot;Android &gt;= 4.0&quot;</span>, <span class="string">&quot;iOS &gt;= 8&quot;</span>],</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;postcss-pxtorem&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">rootValue</span>: <span class="number">37.5</span>,</span><br><span class="line">      <span class="attr">propList</span>: [<span class="string">&quot;*&quot;</span>],</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>3、<strong>配置完毕，重新启动服务</strong></p>
<p>最后测试：<strong>刷新浏览器页面</strong>，审查元素的样式查看是否已将 <code>px</code> 转换为 <code>rem</code>。</p>
<p><strong>需要注意的是：</strong></p>
<ul>
<li>该插件**不能转换行内样式中的 <code>px</code>**，例如 <code>&lt;div style=&quot;width: 200px;&quot;&gt;&lt;/div&gt;</code></li>
</ul>
<h3 id="1-3-关于-postcssrc-js-配置文件"><a href="#1-3-关于-postcssrc-js-配置文件" class="headerlink" title="1.3 关于 .postcssrc.js 配置文件"></a>1.3 关于 <code>.postcssrc.js</code> 配置文件</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">plugins</span>: &#123;</span><br><span class="line">    <span class="attr">autoprefixer</span>: &#123;</span><br><span class="line">      <span class="attr">browsers</span>: [<span class="string">&quot;Android &gt;= 4.0&quot;</span>, <span class="string">&quot;iOS &gt;= 8&quot;</span>],</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;postcss-pxtorem&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">rootValue</span>: <span class="number">37.5</span>,</span><br><span class="line">      <span class="attr">propList</span>: [<span class="string">&quot;*&quot;</span>],</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p><code>.postcssrc.js</code> 是 PostCSS 的配置文件。</p>
<p>（1）PostCSS 介绍</p>
<p><a href="https://postcss.org/">PostCSS</a> 是一个处理 CSS 的处理工具，本身功能比较单一，它主要负责解析 CSS 代码，再交由插件来进行处理，它的插件体系非常强大，所能进行的操作是多种多样的，例如：</p>
<ul>
<li><a href="https://github.com/postcss/autoprefixer">Autoprefixer</a> 插件可以实现自动添加浏览器相关的声明前缀</li>
<li><a href="https://github.com/csstools/postcss-preset-env">PostCSS Preset Env</a> 插件可以让你使用更新的 CSS 语法特性并实现向下兼容</li>
<li><a href="https://github.com/cuth/postcss-pxtorem">postcss-pxtorem</a> 可以实现将 px 转换为 rem</li>
<li>…</li>
</ul>
<p>目前 PostCSS 已经有 <a href="https://github.com/postcss/postcss/blob/master/docs/plugins.md">200 多个功能各异的插件</a>。开发人员也可以根据项目的需要，开发出自己的 PostCSS 插件。</p>
<p>PostCSS 一般不单独使用，而是与已有的构建工具进行集成。</p>
<p><a href="https://cli.vuejs.org/zh/guide/css.html#postcss">Vue CLI 默认集成了 PostCSS</a>，并且默认开启了 <a href="https://github.com/postcss/autoprefixer">autoprefixer</a> 插件。</p>
<blockquote>
<p>Vue CLI 内部使用了 PostCSS。</p>
<p>你可以通过 <code>.postcssrc</code> 或任何 <a href="https://github.com/michael-ciniawsky/postcss-load-config">postcss-load-config</a> 支持的配置源来配置 PostCSS。也可以通过 <code>vue.config.js</code> 中的 <code>css.loaderOptions.postcss</code> 配置 <a href="https://github.com/postcss/postcss-loader">postcss-loader</a>。</p>
<p>我们默认开启了 <a href="https://github.com/postcss/autoprefixer">autoprefixer</a>。如果要配置目标浏览器，可使用 <code>package.json</code> 的 <a href="https://cli.vuejs.org/zh/guide/browser-compatibility.html#browserslist">browserslist</a> 字段。</p>
</blockquote>
<p>（2）Autoprefixer 插件的配置</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20200319104557718.png" alt="image-20200319104557718"></p>
<p><a href="https://github.com/postcss/autoprefixer">autoprefixer</a> 是一个自动添加浏览器前缀的 PostCss 插件，<code>browsers</code> 用来配置兼容的浏览器版本信息，但是写在这里的话会引起编译器警告。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Replace Autoprefixer browsers option to Browserslist config.</span><br><span class="line">Use browserslist key in package.json or .browserslistrc file.</span><br><span class="line"></span><br><span class="line">Using browsers option can cause errors. Browserslist config</span><br><span class="line">can be used for Babel, Autoprefixer, postcss-normalize and other tools.</span><br><span class="line"></span><br><span class="line">If you really need to use option, rename it to overrideBrowserslist.</span><br><span class="line"></span><br><span class="line">Learn more at:</span><br><span class="line">https://github.com/browserslist/browserslist#readme</span><br><span class="line">https://twitter.com/browserslist</span><br></pre></td></tr></table></figure>

<p>警告意思就是说你应该将 <code>browsers</code> 选项写到 <code>package.json</code> 或 <code>.browserlistrc</code> 文件中。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Android]</span><br><span class="line">&gt;= 4.0</span><br><span class="line"></span><br><span class="line">[iOS]</span><br><span class="line">&gt;= 8</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<blockquote>
<p>具体语法请<a href="https://github.com/browserslist/browserslist">参考这里</a>。</p>
</blockquote>
<p>（3）postcss-pxtorem 插件的配置</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20200319105610557.png" alt="image-20200319105610557"></p>
<ul>
<li><code>rootValue</code>：表示根元素字体大小，它会根据根元素大小进行单位转换</li>
<li><code>propList</code> 用来设定可以从 px 转为 rem 的属性<ul>
<li>例如 <code>*</code> 就是所有属性都要转换，<code>width</code> 就是仅转换 <code>width</code> 属性</li>
</ul>
</li>
</ul>
<p><code>rootValue</code> 应该如何设置呢？</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">如果你使用的是基于 lib-flexable 的 REM 适配方案，则应该设置为你的设计稿的十分之一。</span><br><span class="line">例如设计稿是 750 宽，则应该设置为 75。</span><br></pre></td></tr></table></figure>

<p>大多数设计稿的原型都是以 iphone6 为原型，iphone6 设备的宽是 750，我们的设计稿也是这样。</p>
<p>但是 Vant 建议设置为 37.5，为什么呢？</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">因为 Vant 是基于 375 写的，所以如果你设置为 75 的话，Vant 的样式就小了一半。</span><br></pre></td></tr></table></figure>

<p>所以如果设置为 <code>37.5</code> 的话，Vant 的样式是没有问题的，但是我们在测量设计稿的时候都必须除 2 才能使用，否则就会变得很大。</p>
<p>这样做其实也没有问题，但是有没有更好的办法呢？我就想实现测量多少写多少（不用换算）。于是聪明的你就想，可以不可以这样来做？</p>
<ul>
<li>如果是 Vant 的样式，就把 <code>rootValue</code> 设置为 37.5 来转换</li>
<li>如果是我们的样式，就按照 75 的 <code>rootValue</code> 来转换</li>
</ul>
<p>通过<a href="https://github.com/cuth/postcss-pxtorem#options">查阅文档</a>我们可以看到 <code>rootValue</code> 支持两种参数类型：</p>
<ul>
<li>数字：固定值</li>
<li>函数：动态计算返回<ul>
<li>postcss-pxtorem 处理每个 CSS 文件的时候都会来调用这个函数</li>
<li>它会把被处理的 CSS 文件相关的信息通过参数传递给该函数</li>
</ul>
</li>
</ul>
<p>所以我们修改配置如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * PostCSS 配置文件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="comment">// 配置要使用的 PostCSS 插件</span></span><br><span class="line">  <span class="attr">plugins</span>: &#123;</span><br><span class="line">    <span class="comment">// 配置使用 autoprefixer 插件</span></span><br><span class="line">    <span class="comment">// 作用：生成浏览器 CSS 样式规则前缀</span></span><br><span class="line">    <span class="comment">// VueCLI 内部已经配置了 autoprefixer 插件</span></span><br><span class="line">    <span class="comment">// 所以又配置了一次，所以产生冲突了</span></span><br><span class="line">    <span class="comment">// &#x27;autoprefixer&#x27;: &#123; // autoprefixer 插件的配置</span></span><br><span class="line">    <span class="comment">//   // 配置要兼容到的环境信息</span></span><br><span class="line">    <span class="comment">//   browsers: [&#x27;Android &gt;= 4.0&#x27;, &#x27;iOS &gt;= 8&#x27;]</span></span><br><span class="line">    <span class="comment">// &#125;,</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 配置使用 postcss-pxtorem 插件</span></span><br><span class="line">    <span class="comment">// 作用：把 px 转为 rem</span></span><br><span class="line">    <span class="string">&quot;postcss-pxtorem&quot;</span>: &#123;</span><br><span class="line">      <span class="title function_">rootValue</span>(<span class="params">&#123; file &#125;</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> file.<span class="title function_">indexOf</span>(<span class="string">&quot;vant&quot;</span>) !== -<span class="number">1</span> ? <span class="number">37.5</span> : <span class="number">75</span>;</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">propList</span>: [<span class="string">&quot;*&quot;</span>],</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>配置完毕，把服务重启一下</p>
<h2 id="二、postcss-px-to-viewport"><a href="#二、postcss-px-to-viewport" class="headerlink" title="二、postcss-px-to-viewport"></a>二、postcss-px-to-viewport</h2><p>在最近的一个移动端项目中，我使用第一种方案遇到了一些问题，导致我不能将 px 转化为 rem。于是我又找到了另外一种方案</p>
<p><code>postcss-px-to-viewport</code>是一款优秀的插件，它将 px 转换成视口单位 vw <a href="https://github.com/evrone/postcss-px-to-viewport/blob/master/README_CN.md#%E9%85%8D%E7%BD%AE%E5%8F%82%E6%95%B0">https://github.com/evrone/postcss-px-to-viewport/blob/master/README_CN.md#%E9%85%8D%E7%BD%AE%E5%8F%82%E6%95%B0</a></p>
<h3 id="2-1-安装"><a href="#2-1-安装" class="headerlink" title="2.1 安装"></a>2.1 安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install postcss-px-to-viewport --save-dev</span><br></pre></td></tr></table></figure>

<p>或者</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ yarn add -D postcss-px-to-viewport</span><br></pre></td></tr></table></figure>

<h3 id="2-2-在项目根目录下添加-postcssrc-js文件"><a href="#2-2-在项目根目录下添加-postcssrc-js文件" class="headerlink" title="2.2 在项目根目录下添加.postcssrc.js文件"></a>2.2 在项目根目录下添加<code>.postcssrc.js</code>文件</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">plugins</span>: &#123;</span><br><span class="line">    <span class="string">&quot;postcss-px-to-viewport&quot;</span>: &#123;</span><br><span class="line">      <span class="comment">// 配置详情可见 https://github.com/evrone/postcss-px-to-viewport/blob/master/README_CN.md#%E9%85%8D%E7%BD%AE%E5%8F%82%E6%95%B0</span></span><br><span class="line">      <span class="attr">unitToConvert</span>: <span class="string">&quot;px&quot;</span>,</span><br><span class="line">      <span class="attr">viewportWidth</span>: <span class="number">750</span>,</span><br><span class="line">      <span class="attr">unitPrecision</span>: <span class="number">5</span>,</span><br><span class="line">      <span class="attr">propList</span>: [<span class="string">&quot;*&quot;</span>],</span><br><span class="line">      <span class="attr">viewportUnit</span>: <span class="string">&quot;vw&quot;</span>,</span><br><span class="line">      <span class="attr">fontViewportUnit</span>: <span class="string">&quot;vw&quot;</span>,</span><br><span class="line">      <span class="attr">selectorBlackList</span>: [],</span><br><span class="line">      <span class="attr">minPixelValue</span>: <span class="number">1</span>,</span><br><span class="line">      <span class="attr">mediaQuery</span>: <span class="literal">false</span>,</span><br><span class="line">      <span class="attr">replace</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">exclude</span>: [<span class="regexp">/node_modules/</span>],</span><br><span class="line">      <span class="attr">include</span>: <span class="literal">undefined</span>,</span><br><span class="line">      <span class="attr">landscape</span>: <span class="literal">false</span>,</span><br><span class="line">      <span class="attr">landscapeUnit</span>: <span class="string">&quot;vw&quot;</span>,</span><br><span class="line">      <span class="attr">landscapeWidth</span>: <span class="number">1920</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>最后重启项目即可</p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title>ES6补充</title>
    <url>/2023/02/11/ES6%E8%A1%A5%E5%85%85/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><em>更多请参考</em></p>
<p><em>阮一峰老师 ES6 入门教程<a href="https://es6.ruanyifeng.com/">https://es6.ruanyifeng.com/</a></em></p>
<p><em>MDN 官方文档<a href="https://developer.mozilla.org/zh-CN/">https://developer.mozilla.org/zh-CN/</a></em></p>
<h2 id="一、作用域"><a href="#一、作用域" class="headerlink" title="一、作用域"></a>一、作用域</h2><h3 id="1、作用域链"><a href="#1、作用域链" class="headerlink" title="1、作用域链"></a>1、作用域链</h3><p>作用域链本质上是底层的变量查找机制。在函数被执行时，会优先查找当前函数作用域中查找变量，如果当前作用域查找不到则会依次逐级查找父级作用域直到全局作用域。这种嵌套关系的作用域串联起来就形成了作用域链</p>
<h3 id="2、JS-垃圾回收机制"><a href="#2、JS-垃圾回收机制" class="headerlink" title="2、JS 垃圾回收机制"></a>2、JS 垃圾回收机制</h3><p>垃圾回收机制(Garbage Collection) 简称 GC</p>
<p>JS 中内存的分配和回收都是自动完成的，内存在不使用的时候会被垃圾回收器自动回收</p>
<p>虽然垃圾回收器会帮我们自动回收内存，但我们仍有必要了解 JS 的内存管理机制。它可以帮助我们理解内存泄漏（内存无法被回收）</p>
<p>不再用到的内存，没有及时释放，就叫做内存泄漏</p>
<p>内存的生命周期</p>
<p>JS 环境中分配的内存, 一般有如下生命周期：</p>
<ol>
<li><p>内存分配：当我们声明变量、函数、对象的时候，系统会自动为他们分配内存</p>
</li>
<li><p>内存使用：即读写内存，也就是使用变量、函数等</p>
</li>
<li><p>内存回收：使用完毕，由垃圾回收自动回收不再使用的内存</p>
</li>
</ol>
<p>说明：</p>
<p>全局变量一般不会回收(关闭页面回收)；</p>
<p>一般情况下局部变量的值, 不用了, 会被自动回收掉</p>
<p>两种常见的浏览器垃圾回收算法</p>
<p>引用计数法</p>
<p>IE 采用的引用计数算法, 定义“内存不再使用”，就是看一个对象是否有指向它的引用，没有引用了就回收对象</p>
<p>具体步骤：</p>
<ol>
<li><p>跟踪记录被引用的次数</p>
</li>
<li><p>如果被引用了一次，那么就记录次数 1,多次引用会累加</p>
</li>
<li><p>如果减少一个引用就减 1</p>
</li>
<li><p>当引用次数是 0 时 ，则释放内存</p>
</li>
</ol>
<p>它存在一个致命的问题：嵌套引用（循环引用）</p>
<p>如果两个对象相互引用，尽管他们已不再使用，垃圾回收器不会进行回收，导致内存泄露。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> o1 = &#123;&#125;;</span><br><span class="line">  <span class="keyword">let</span> o2 = &#123;&#125;;</span><br><span class="line">  o1.<span class="property">a</span> = o2;</span><br><span class="line">  o2.<span class="property">a</span> = o1;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&quot;引用计数无法回收&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fn</span>();</span><br></pre></td></tr></table></figure>

<p>正常情况下，上述代码中的变量 o1、o2 在函数 fn 执行完毕之后就应该被回收掉，但是根据引用计数法，虽然函数 fn 已经执行完成，但是由于 o1、o2 中存在着相互引用的关系，因此实际上并不会被回收，这就造成了内存泄漏。于是就有了标记清除法</p>
<p>标记清除法</p>
<p>现代的浏览器已经不再使用引用计数算法了</p>
<p>现代浏览器通用的大多是基于标记清除算法的某些改进算法，总体思想都是一致的。</p>
<p>核心：</p>
<ol>
<li><p>标记清除算法将“不再使用的对象”定义为“无法达到的对象”。</p>
</li>
<li><p>就是从根部（在 JS 中就是全局对象）出发定时扫描内存中的对象。 凡是能从根部到达的对象，都是还需要使用的。</p>
</li>
<li><p>那些无法由根部出发触及到的对象被标记为不再使用，稍后进行回收。</p>
</li>
</ol>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230510142831343.png" alt="image-20230510142831343"></p>
<p>同样上述的代码，如果用标记清除法，在函数 fn 执行完毕之后，函数作用域里面的变量，从全局对象开始已经访问不到了，因此会被回收掉</p>
<h3 id="3、闭包"><a href="#3、闭包" class="headerlink" title="3、闭包"></a>3、闭包</h3><p>MDN 官方解释：一个函数对周围状态的引用捆绑在一起，内层函数中访问到其外层函数的作用域</p>
<p>从代码结构上看，闭包 &#x3D; 内层函数 + 外层函数的变量。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">outer</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> a = <span class="number">100</span>;</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">inner</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(a);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">inner</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">outer</span>();</span><br></pre></td></tr></table></figure>

<p>闭包作用：封闭数据，提供操作，外部也可以访问函数内部的变量</p>
<p>闭包的基本形式</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">outer</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> a = <span class="number">100</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span> <span class="title function_">inner</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(a);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> fun = <span class="title function_">outer</span>();</span><br><span class="line"><span class="title function_">fun</span>();</span><br></pre></td></tr></table></figure>

<p>闭包应用：实现数据的私有</p>
<p>比如，我们要做个统计函数调用次数，函数调用一次，就++</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> i = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">count</span>(<span class="params"></span>) &#123;</span><br><span class="line">  i++;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`函数被调用了<span class="subst">$&#123;i&#125;</span>次`</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">count</span>(); <span class="comment">// 2</span></span><br><span class="line"><span class="title function_">count</span>(); <span class="comment">// 3</span></span><br></pre></td></tr></table></figure>

<p>但是这样定义的全局变量 i 很容易被修改，一旦修改，统计的函数调用次数就不准确了。可以通过闭包解决这个问题</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">count</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> i = <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123;</span><br><span class="line">    i++;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`函数被调用了<span class="subst">$&#123;i&#125;</span>次`</span>);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> fun = <span class="title function_">count</span>();</span><br><span class="line"><span class="title function_">fun</span>(); <span class="comment">// 2</span></span><br><span class="line"><span class="title function_">fun</span>(); <span class="comment">// 3</span></span><br></pre></td></tr></table></figure>

<p>这样实现了数据私有，无法直接修改 count</p>
<h2 id="二、深入对象"><a href="#二、深入对象" class="headerlink" title="二、深入对象"></a>二、深入对象</h2><p>创建对象的三种方式</p>
<ul>
<li><p>利用对象字面量创建对象</p>
</li>
<li><p>利用 new Object 创建对象</p>
</li>
<li><p>利用构造函数创建对象</p>
</li>
</ul>
<h3 id="1、构造函数"><a href="#1、构造函数" class="headerlink" title="1、构造函数"></a>1、构造函数</h3><p>构造函数 ：是一种特殊的函数，主要用来初始化对象</p>
<p>使用场景：常规的 {…} 语法允许创建一个对象。比如我们创建了佩奇的对象，继续创建乔治的对象还需要重新写一 遍。此时可以通过构造函数，它就像一个模子一样，能帮助我们快速创建多个类似的对象。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> xiaoming = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;小明&#x27;</span>,</span><br><span class="line">  <span class="attr">age</span>: <span class="number">18</span>,</span><br><span class="line">  <span class="attr">gender</span>: <span class="string">&#x27;男&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> xiaohong = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;小红&#x27;</span>,</span><br><span class="line">  <span class="attr">age</span>: <span class="number">17</span>,</span><br><span class="line">  <span class="attr">gender</span>: <span class="string">&#x27;女&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 这种类似的结构，我们可以通过构造函数来创建</span></span><br><span class="line"><span class="comment">// 声明一个&quot;人类&quot;的构造函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Person</span>(<span class="params">name,age,gender</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">name</span> = name</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">age</span> = age</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">gender</span> = gender</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 通过实例化来批量生产“人类”</span></span><br><span class="line"><span class="keyword">const</span> xiaoming = <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&#x27;小明&#x27;</span>，<span class="number">18</span>，<span class="string">&#x27;男&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> xiaohong = <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&#x27;小红&#x27;</span>，<span class="number">18</span>，<span class="string">&#x27;女&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>构造函数本质上也函数，不过一般情况下：</p>
<ul>
<li><p>它们的命名以大写字母开头，以表明这是一个构造函数</p>
</li>
<li><p>它们只能由 “new” 操作符来执行</p>
</li>
</ul>
<p>new Object()、new Date()这些都是内置的构造函数</p>
<p>构造函数的实例化执行过程</p>
<ol>
<li><p>创建新对象</p>
<p>2.构造函数 this 指向新对象</p>
<p>3.执行构造函数代码，修改 this，添加新的属性</p>
<p>4.返回新对象</p>
</li>
</ol>
<p>实例成员&amp;静态成员</p>
<p>实例成员：通过构造函数创建的对象称为实例对象，实例对象中的属性和方法称为实例成员。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Person</span>(<span class="params">name, age, gender</span>) &#123;</span><br><span class="line">  <span class="comment">// 构造函数中直接声明的这些方法和属性就是实例成员</span></span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">age</span> = age;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">gender</span> = gender;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 直接为构造函数添加的这些方法和属性就是静态成员</span></span><br><span class="line"><span class="title class_">Person</span>.<span class="property">eyes</span> = <span class="number">2</span>;</span><br><span class="line"><span class="title class_">Person</span>.<span class="property">say</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;会说话&quot;</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>请注意：</p>
<ul>
<li>构造函数创建的实例对象彼此独立互不影响</li>
<li>一般公共特征的属性或方法静态成员设置为静态成员</li>
<li>静态成员方法中的 this 指向构造函数本身</li>
</ul>
<h3 id="2、内置构造函数"><a href="#2、内置构造函数" class="headerlink" title="2、内置构造函数"></a>2、内置构造函数</h3><p>引用类型：Object，Array，RegExp，Date 等</p>
<p>包装类型：String，Number，Boolean 等</p>
<p>数组常见实例方法-核心方法</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230511084102099.png" alt="image-20230511084102099"></p>
<p>reduce 语法</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230511084301258.png" alt="image-20230511084301258"></p>
<p>求和</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line"><span class="keyword">const</span> result = arr.<span class="title function_">reduce</span>(<span class="function">(<span class="params">prev, current</span>) =&gt;</span> prev + current);</span><br></pre></td></tr></table></figure>

<p>数组常见实例方法-其他方法</p>
<ol>
<li>实例方法 <code>join</code> 数组元素拼接为字符串，返回字符串(重点)</li>
<li>实例方法 <code>find</code> 查找元素， 返回符合测试条件的第一个数组元素值，如果没有符合条件的则返回 undefined(重点)</li>
<li>实例方法<code>every</code> 检测数组所有元素是否都符合指定条件，如果<strong>所有元素</strong>都通过检测返回 true，否则返回 false(重点)</li>
<li>实例方法<code>some</code> 检测数组中的元素是否满足指定条件 <strong>如果数组中有</strong>元素满足条件返回 true，否则返回 false</li>
<li>实例方法 <code>concat</code> 合并两个数组，返回生成新数组</li>
<li>实例方法 <code>sort</code> 对原数组单元值排序</li>
<li>实例方法 <code>splice</code> 删除或替换原数组单元</li>
<li>实例方法<code>slice</code>返回一个新的数组对象，这一对象是一个由 begin 和 end 决定的原数组的浅拷贝（包括 begin，不包括 end）（此截取方法字符串也有）</li>
<li>实例方法 <code>reverse</code> 反转数组</li>
<li>实例方法 <code>findIndex</code> 返回数组中满足提供的测试函数的第一个元素的索引。若没有找到对应元素则返回 -1</li>
<li>实例方法<code>includes</code>用来判断一个数组是否包含一个指定的值，根据情况，如果包含则返回 true，否则返回 false</li>
<li>实例方法<code>push</code>添加元素到数组末尾</li>
<li>实例方法<code>pop</code>（弹出）删除数组末尾的元素</li>
<li>实例方法<code>shift</code>删除数组头部元素</li>
<li>实例方法<code>unshift</code>添加元素到数组的头部</li>
<li>实例方法<code>indexOf</code>返回数组中第一次出现给定元素的下标，如果不存在则返回 -1</li>
<li>实例方法<code>fill</code>用一个固定值填充一个数组中从起始索引到终止索引内的全部元素。不包括终止索引</li>
</ol>
<p>数组常见静态方法</p>
<ol>
<li>Array.from()：对一个伪数组或可迭代对象创建一个新的，浅拷贝的数组实例</li>
<li>Array.isArray()：用于确定传递的值是否是一个 Array</li>
</ol>
<p>String 常见实例方法</p>
<p>在 JavaScript 中的字符串、数值、布尔具有对象的使用特征，如具有属性和方法。这是因为它们是 JavaScript 底层使用 Object 构造函数“包装”来的</p>
<p>String 常见实例方法</p>
<ol>
<li>实例属性 <code>length</code> 用来获取字符串的度长(重点)</li>
<li>实例方法 <code>split(&#39;分隔符&#39;)</code> 用来将字符串拆分成数组(重点)</li>
<li>实例方法 <code>substring（需要截取的第一个字符的索引[,结束的索引号]）</code> 用于字符串截取(重点)</li>
<li>实例方法 <code>startsWith(检测字符串[, 检测位置索引号])</code> 检测是否以某字符开头(重点)</li>
<li>实例方法 <code>includes(搜索的字符串[, 检测位置索引号])</code> 判断一个字符串是否包含在另一个字符串中，根据情况返回 true 或 false(重点)</li>
<li>实例方法 <code>toUpperCase</code> 用于将字母转换成大写</li>
<li>实例方法 <code>toLowerCase</code> 用于将就转换成小写</li>
<li>实例方法 <code>indexOf</code> 检测是否包含某字符</li>
<li>实例方法 <code>endsWith</code> 检测是否以某字符结尾</li>
<li>实例方法 <code>replace</code> 用于替换字符串，支持正则匹配</li>
<li>实例方法 <code>match</code> 用于查找字符串，支持正则匹配</li>
<li>实例方法<code>trim</code>从字符串的两端清除空格，返回一个新的字符串，而不修改原始字符串</li>
<li>实例方法<code>slice</code> 方法提取某个字符串的一部分，并返回一个新的字符串，且不会改动原字符串</li>
</ol>
<p>Number 常见方法</p>
<ol>
<li>实例方法<code>toFixed</code>设置保留小数位的长度</li>
<li>静态方法 <code>Number.parseInt()</code> 方法依据指定基数，解析字符串并返回一个整数。</li>
<li>静态方法<code>Number.parseFloat()</code> 方法可以把一个字符串解析成浮点数</li>
</ol>
<p>Date 常见方法</p>
<ol>
<li>实例方法<code>toLocaleString</code>方法返回该日期对象的字符串</li>
<li>实例方法<code>toLocaleDateString</code> 方法返回指定日期对象日期部分的字符串</li>
<li>实例方法<code>getDate</code>根据本地时间，返回一个指定的 <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date"><code>Date</code></a> 对象为一个月中的哪一日（<code>1</code>-<code>31</code>）</li>
<li>实例方法<code>getDay</code>根据本地时间，返回一个指定的 <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date"><code>Date</code></a> 对象是在一周中的第几天（<code>0</code>-<code>6</code>），0 表示星期天</li>
<li>实例方法<code>getFullYear</code>根据本地时间，返回一个指定的 <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date"><code>Date</code></a> 对象的完整年份（四位数年份）</li>
<li>实例方法<code>getHours</code>根据本地时间，返回一个指定的 <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date"><code>Date</code></a> 对象的小时（<code>0</code>–<code>23</code>）</li>
<li>实例方法<code>getMinutes</code>根据本地时间，返回一个指定的 <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date"><code>Date</code></a> 对象的分钟数（<code>0</code>–<code>59</code>）</li>
<li>实例方法<code>getMonth</code>根据本地时间，返回一个指定的 <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date"><code>Date</code></a> 对象的月份（<code>0</code>–<code>11</code>），0 表示一年中的第一月</li>
<li>实例方法<code>getSeconds</code>根据本地时间，返回一个指定的 <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date"><code>Date</code></a> 对象的秒数（<code>0</code>–<code>59）</code></li>
<li>实例方法<code>getTime</code>返回一个数值，表示从 1970 年 1 月 1 日 0 时 0 分 0 秒（UTC，即协调世界时）距离该 <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date"><code>Date</code></a> 对象所代表时间的毫秒数（时间戳）</li>
<li>静态方法<code>Date.now()</code>返回自 1970-1-1 00:00:00 UTC（世界标准时间）至今所经过的毫秒数(时间戳)</li>
</ol>
<p>Math 常见方法</p>
<ol>
<li><p>静态方法<code>Math.floor(x)</code>返回小于一个数的最大整数，即一个数向下取整后的值</p>
</li>
<li><p>静态方法<code>Math.ceil(x)</code>返回大于一个数的最大整数，即一个数向上取整后的值</p>
</li>
<li><p>静态方法<code>Math.max(x,y,...)</code>返回零到多个数值中最大值</p>
</li>
<li><p>静态方法<code>Math.min(x,y,...)</code>返回零到多个数值中最小值</p>
</li>
<li><p>静态方法<code>Math.pow(x,y)</code>返回一个数的 y 次幂</p>
</li>
<li><p>静态方法<code>Math.random()</code>返回一个 0 到 1 之间的伪随机数</p>
</li>
<li><p>静态方法<code>Math.round(x)</code>返回四舍五入后的整数</p>
</li>
</ol>
<h2 id="三、面向对象"><a href="#三、面向对象" class="headerlink" title="三、面向对象"></a>三、面向对象</h2><h3 id="1、面向对象的编程思想"><a href="#1、面向对象的编程思想" class="headerlink" title="1、面向对象的编程思想"></a>1、面向对象的编程思想</h3><p>面向过程编程</p>
<p>面向过程就是分析出解决问题所需要的步骤，然后用函数把这些步骤一步一步实现，使用的时候再一个一个的依次调用</p>
<p>优点：性能比面向对象高，适合跟硬件联系很紧密的东西，例如单片机就采用的面向过程编程</p>
<p>缺点：没有面向对象易维护、易复用、易扩展</p>
<p>面向对象编程 (oop)</p>
<p>面向对象是把事务分解成为一个个对象，然后由对象之间分工与合作</p>
<p>在面向对象程序开发思想中，每一个对象都是功能中心，具有明确分工。</p>
<p>面向对象编程具有灵活、代码可复用、容易维护和开发的优点，更适合多人合作的大型软件项目</p>
<p>面向对象的特性：</p>
<ul>
<li>封装性</li>
<li>继承性</li>
<li>多态性</li>
</ul>
<p>优点：易维护、易复用、易扩展，由于面向对象有封装 、继承、多态性的特性，可以设计出低耦合的系统，使系统更加灵活、更加易于维护</p>
<p>缺点：性能比面向过程低</p>
<h3 id="2、封装"><a href="#2、封装" class="headerlink" title="2、封装"></a>2、封装</h3><p>JavaScript 中可以通过构造函数实现面向对象的封装</p>
<p>将相同的结构封装在构造函数中，通过 this 指向实现数据的共享。并且通过构造函数创造出来的实例对象之间彼此独立、互不影响</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Person</span>(<span class="params">name, age, gender</span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">age</span> = age;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">gender</span> = gender;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">sing</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;说话&quot;</span>);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> ldh = <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;刘德华&quot;</span>, <span class="number">18</span>, <span class="string">&quot;男&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> zxy = <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;张学友&quot;</span>, <span class="number">20</span>, <span class="string">&quot;男&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(ldh.<span class="property">sing</span> === zxy.<span class="property">sing</span>); <span class="comment">// false</span></span><br></pre></td></tr></table></figure>

<p>然而，由于构造函数创造出来的实例对象之间彼此独立、互不影响。我们会发现<code>ldh.sing</code>和<code>zxy.sing</code>并不相等，这不是我们想要的，因为实际上每个实例对象（比如<code>ldh</code>和<code>zxy</code>）之间的<code>sing</code>方法应该是相同的，他们实现的是相同的功能，因此没必要单独给它们各自分配内存。</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230511101913432.png" alt="image-20230511101913432"></p>
<p>原型</p>
<p>使用原型对象就可以实现方法的共享</p>
<ul>
<li>构造函数通过原型分配的函数是所有实例对象所共享的</li>
<li>JavaScript 规定，每一个构造函数都有一个 prototype 属性，指向另一个对象，所以我们也称为原型对象</li>
<li>这个对象可以挂载函数，对象实例化不会多次创建原型上的函数，节约内存</li>
<li>我们可以把那些不变的方法，直接定义在 prototype 对象上，这样所有对象的实例就可以共享这些方法</li>
<li><strong><em>构造函数和原型对象中的 this 都指向实例化的对象</em></strong></li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Person</span>(<span class="params">name, age, gender</span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">age</span> = age;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">gender</span> = gender;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">Person</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">sing</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;说话&quot;</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> ldh = <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;刘德华&quot;</span>, <span class="number">18</span>, <span class="string">&quot;男&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> zxy = <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;张学友&quot;</span>, <span class="number">20</span>, <span class="string">&quot;男&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(ldh.<span class="property">sing</span> === zxy.<span class="property">sing</span>); <span class="comment">// true</span></span><br></pre></td></tr></table></figure>

<p>constructor 属性</p>
<p>每个原型对象里面都有个 constructor 属性（constructor 构造函数）</p>
<p>该属性指向该原型对象的构造函数</p>
<p>使用场景：</p>
<p>如果有多个对象的方法，我们可以给原型对象采取对象形式赋值. 但是这样就会覆盖构造函数原型对象原来的内容，这样修改后的原型对象 constructor 就不再指向当前构造函数了 。也就是说正常情况下，原型对象上是存在着 constructor 属性的，现在我们想往原型对象上挂载多个方法，我们不想一个一个的添加，于是我们采用直接赋值的方式。但是我们通过赋值的形式往原型对象上挂载方法后，把原来的原型对象上的 constructor 属性覆盖掉了。此时，我们可以在修改后的原型对象中，添加一个 constructor 指向原来的构造函数。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Person</span>(<span class="params">name, age, gender</span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">age</span> = age;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">gender</span> = gender;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//  多个方法挂载到原型对象上，为了方便不想一个一个的挂载</span></span><br><span class="line"><span class="title class_">Person</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">sing</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;说话&quot;</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="title class_">Person</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">dance</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;跳舞&quot;</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 于是直接给prototype属性赋值</span></span><br><span class="line"><span class="title class_">Person</span>.<span class="property"><span class="keyword">prototype</span></span> = &#123;</span><br><span class="line">  <span class="attr">sing</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;说话&quot;</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">dance</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;跳舞&quot;</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//  但是这样，原本原型对象prototype上的constructor 属性就被赋值给覆盖掉了</span></span><br><span class="line"><span class="title class_">Person</span>.<span class="property"><span class="keyword">prototype</span></span> = &#123;</span><br><span class="line">  <span class="comment">// 因此利用constructor，手动指回Person构造函数</span></span><br><span class="line">  <span class="attr">constructor</span>: <span class="title class_">Person</span>,</span><br><span class="line">  <span class="attr">sing</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;说话&quot;</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">dance</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;跳舞&quot;</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> ldh = <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;刘德华&quot;</span>, <span class="number">18</span>, <span class="string">&quot;男&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> zxy = <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;张学友&quot;</span>, <span class="number">20</span>, <span class="string">&quot;男&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(ldh.<span class="property">sing</span> === zxy.<span class="property">sing</span>); <span class="comment">// true</span></span><br></pre></td></tr></table></figure>

<p>但是当我们把原本放在构造函数上的一些公共属性或方法放到原型对象上后，实例对象如何访问到原型对象上的公共属性或方法呢？</p>
<p><em>proto</em></p>
<p>对象都会有一个属性 <strong>proto</strong> 指向构造函数的 prototype 原型对象，之所以我们对象可以使用构造函数 prototype 原型对象的属性和方法，就是因为对象有 <strong>proto</strong> 原型的存在</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230511105014332.png" alt="image-20230511105014332"></p>
<h3 id="3、原型继承"><a href="#3、原型继承" class="headerlink" title="3、原型继承"></a>3、原型继承</h3><p>继承是面向对象编程的另一个特征，通过继承进一步提升代码封装的程度，JavaScript 中大多是借助原型对象实现继承的特性</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义一个中国人的构造函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Chinese</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">header</span> = <span class="number">1</span>;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">eyes</span> = <span class="number">2</span>;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">language</span> = <span class="string">&quot;chinese&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 定义一个日本人的构造函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Japanese</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">header</span> = <span class="number">1</span>;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">eyes</span> = <span class="number">2</span>;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">language</span> = <span class="string">&quot;japanese&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>我们发现，不管是中国人还是日本人，他们都属于人类。因此可以将人类的一些公共特征抽取出来，单独封装成一个人类的构造函数，让中国人和日本人共享这个构造函数的属性和方法</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 封装一个人类的构造函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Human</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">header</span> = <span class="number">1</span>;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">eyes</span> = <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 中国人的构造函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Chinese</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">language</span> = <span class="string">&quot;chinese&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 日本人的构造函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Japanese</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">language</span> = <span class="string">&quot;japanese&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 通过改变中国人和日本人的原型对象指向到Human，以此继承Human上的方法和属性</span></span><br><span class="line"><span class="title class_">Chinese</span>.<span class="property"><span class="keyword">prototype</span></span> = <span class="title class_">Human</span>;</span><br><span class="line"><span class="comment">// 不要忘了constructor 指回Chinese</span></span><br><span class="line"><span class="title class_">Chinese</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">constructor</span> = <span class="title class_">Chinese</span>;</span><br><span class="line"><span class="comment">// 同理日本人</span></span><br><span class="line"><span class="title class_">Japanese</span>.<span class="property"><span class="keyword">prototype</span></span> = <span class="title class_">Human</span>;</span><br><span class="line"><span class="title class_">Japanese</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">constructor</span> = <span class="title class_">Japanese</span>;</span><br></pre></td></tr></table></figure>

<p>但是此时会有一个问题，当我们向单独给 Chinese 添加一个属性或者方法时，我们会发现 Japanese 也被自动添加了这个属性或方法。并且由于<code>Japanese.prototype.constructor</code>是后来定义的，它将<code>Chinese.prototype.constructor = Chinese</code>覆盖掉了，因此<code>Chinese.prototype.constructor</code>竟然也指向了<code>Japanese</code>！</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 封装一个人类的构造函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Human</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">header</span> = <span class="number">1</span>;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">eyes</span> = <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 中国人的构造函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Chinese</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">language</span> = <span class="string">&quot;chinese&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 日本人的构造函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Japanese</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">language</span> = <span class="string">&quot;japanese&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 通过改变中国人和日本人的原型对象指向到Human，以此继承Human上的方法和属性</span></span><br><span class="line"><span class="title class_">Chinese</span>.<span class="property"><span class="keyword">prototype</span></span> = <span class="title class_">Human</span>;</span><br><span class="line"><span class="comment">// 不要忘了constructor 指回Chinese</span></span><br><span class="line"><span class="title class_">Chinese</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">constructor</span> = <span class="title class_">Chinese</span>;</span><br><span class="line"><span class="comment">// 同理日本人</span></span><br><span class="line"><span class="title class_">Japanese</span>.<span class="property"><span class="keyword">prototype</span></span> = <span class="title class_">Human</span>;</span><br><span class="line"><span class="title class_">Japanese</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">constructor</span> = <span class="title class_">Japanese</span>;</span><br><span class="line"><span class="title class_">Chinese</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">smoking</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;抽烟&quot;</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> xiaoming = <span class="keyword">new</span> <span class="title class_">Chinese</span>();</span><br><span class="line"><span class="keyword">const</span> guitian = <span class="keyword">new</span> <span class="title class_">Japanese</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(xiaoming, guitian);</span><br></pre></td></tr></table></figure>

<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230511111944145.png" alt="image-20230511111944145"></p>
<p>这是因为<code>Chinese.prototype</code>和<code>Japanese.prototype</code>都是一个指向了构造函数<code>Human</code>的地址，通过<code>Chinese.prototype.smoking</code>修改了<code>Human</code>的值，<code>Japanese.prototype</code>也会受到影响。因此我们可以将<code>Chinese.prototype</code>和<code>Japanese.prototype</code>各自指向一个 Human 的实例对象，这样它们就互不影响了！</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 封装一个人类的构造函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Human</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">header</span> = <span class="number">1</span>;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">eyes</span> = <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 中国人的构造函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Chinese</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">language</span> = <span class="string">&quot;chinese&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 日本人的构造函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">Japanese</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">language</span> = <span class="string">&quot;japanese&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 通过改变中国人和日本人的原型对象指向到Human，以此继承Human上的方法和属性</span></span><br><span class="line"><span class="title class_">Chinese</span>.<span class="property"><span class="keyword">prototype</span></span> = <span class="keyword">new</span> <span class="title class_">Human</span>();</span><br><span class="line"><span class="comment">// 不要忘了constructor 指回Chinese</span></span><br><span class="line"><span class="title class_">Chinese</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">constructor</span> = <span class="title class_">Chinese</span>;</span><br><span class="line"><span class="comment">// 同理日本人</span></span><br><span class="line"><span class="title class_">Japanese</span>.<span class="property"><span class="keyword">prototype</span></span> = <span class="keyword">new</span> <span class="title class_">Human</span>();</span><br><span class="line"><span class="title class_">Japanese</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">constructor</span> = <span class="title class_">Japanese</span>;</span><br><span class="line"><span class="title class_">Chinese</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">smoking</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;抽烟&quot;</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> xiaoming = <span class="keyword">new</span> <span class="title class_">Chinese</span>();</span><br><span class="line"><span class="keyword">const</span> guitian = <span class="keyword">new</span> <span class="title class_">Japanese</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(xiaoming, guitian);</span><br></pre></td></tr></table></figure>

<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230511115553081.png" alt="image-20230511115553081"></p>
<p>原型链</p>
<p>基于原型对象的继承使得不同构造函数的原型对象关联在一起，并且这种关联的关系是一种链状的结构，我们将原型对 象的链状结构关系称为原型链</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230511115754927.png" alt="image-20230511115754927"></p>
<p>原型链-查找规则</p>
<p>当访问一个对象的属性（包括方法）时，首先查找这个对象自身有没有该属性。</p>
<p>如果没有就查找它的原型（也就是 <strong>proto</strong>指向的 prototype 原型对象）</p>
<p>如果还没有就查找原型对象的原型（Object 的原型对象）</p>
<p>依此类推一直找到 Object 为止（null）</p>
<p><strong>proto</strong>对象原型的意义就在于为对象成员查找机制提供一个方向，或者说一条路线</p>
<p>可以使用 instanceof 运算符检测构造函数的 prototype 属性是否出现在某个实例对象的原型链上</p>
<h3 id="4、深浅拷贝"><a href="#4、深浅拷贝" class="headerlink" title="4、深浅拷贝"></a>4、深浅拷贝</h3><p>开发中我们经常需要复制一个引用类型。如果直接赋值，当我们修改一个值时，另一个值也变了</p>
<p>浅拷贝和深拷贝只针对引用类型</p>
<p>浅拷贝常见方法：</p>
<ul>
<li>拷贝对象：Object.assgin() &#x2F; 展开运算符</li>
<li>拷贝数组：Array.prototype.concat() 或者展开运算符</li>
</ul>
<p>但是如果引用数据类型里面出现了嵌套引用数据类型的情况，深拷贝就又会出现上述问题，这时需要深拷贝</p>
<p>深拷贝常见方法：</p>
<ul>
<li>通过递归实现深拷贝</li>
<li>lodash 库 cloneDeep 函数</li>
<li>通过 JSON.stringify()实现</li>
</ul>
<p>递归</p>
<p>如果一个函数在内部调用其本身，那么这个函数就是递归函数</p>
<p>由于递归很容易发生“栈溢出”错误（stack overflow），所以必须要加退出条件 return</p>
<p>利用递归函数实现 setTimeout 模拟 setInterval 效果</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getTime</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">toLocaleString</span>());</span><br><span class="line">  <span class="built_in">setTimeout</span>(getTime, <span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">getTime</span>();</span><br></pre></td></tr></table></figure>

<p>利用递归函数实现基本的深拷贝</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">deepCopy</span>(<span class="params">newData, oldData</span>) &#123;</span><br><span class="line">  <span class="comment">// 遍历原对象</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> k <span class="keyword">in</span> oldData) &#123;</span><br><span class="line">    <span class="comment">// 如果是数组</span></span><br><span class="line">    <span class="keyword">if</span> (oldData[k] <span class="keyword">instanceof</span> <span class="title class_">Array</span>) &#123;</span><br><span class="line">      newData[k] = [];</span><br><span class="line">      <span class="title function_">deepCopy</span>(newData[k], oldData[k]);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (oldData[k] <span class="keyword">instanceof</span> <span class="title class_">Object</span>) &#123;</span><br><span class="line">      <span class="comment">// 如果是对象</span></span><br><span class="line">      newData[k] = &#123;&#125;;</span><br><span class="line">      <span class="title function_">deepCopy</span>(newData[k], oldData[k]);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// 基本数据类型直接赋值</span></span><br><span class="line">      newData[k] = oldData[k];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>通过 JSON.stringify()实现深拷贝</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> obj = &#123;</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&quot;佩奇&quot;</span>,</span><br><span class="line">  <span class="attr">age</span>: <span class="number">18</span>,</span><br><span class="line">  <span class="attr">hobby</span>: [<span class="string">&quot;抽烟&quot;</span>, <span class="string">&quot;喝酒&quot;</span>, <span class="string">&quot;烫头&quot;</span>],</span><br><span class="line">  <span class="attr">family</span>: &#123;</span><br><span class="line">    <span class="attr">sister</span>: <span class="string">&quot;乔治&quot;</span>,</span><br><span class="line">    <span class="attr">father</span>: <span class="string">&quot;猪爸爸&quot;</span>,</span><br><span class="line">    <span class="attr">mother</span>: <span class="string">&quot;猪妈妈&quot;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> obj2 = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(obj));</span><br></pre></td></tr></table></figure>

<p><em>JSON.stringify()可以将 JS 对象转化为 JSON 字符串，JSON 字符串就是一个字符串，就不存在所谓的地址引用了</em></p>
<h3 id="5、异常处理"><a href="#5、异常处理" class="headerlink" title="5、异常处理"></a>5、异常处理</h3><p>throw 抛异常</p>
<p>异常处理是指预估代码执行过程中可能发生的错误，然后最大程度的避免错误的发生导致整个程序无法继续运行</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">counter</span>(<span class="params">x, y</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (!x || !y) &#123;</span><br><span class="line">    <span class="comment">// throw &#x27;参数不能为空！&#x27;</span></span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&quot;参数不能为空！&quot;</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">111</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">222</span>);</span><br><span class="line">  <span class="keyword">return</span> x + y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">counter</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">333</span>);</span><br></pre></td></tr></table></figure>

<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230511144023536.png" alt="image-20230511144023536"></p>
<ul>
<li>throw 抛出异常信息，整个程序也会终止执行</li>
<li>throw 后面跟的是错误提示信息,可以直接跟字符串</li>
<li>Error 对象配合 throw 使用，能够设置更详细的错误信息</li>
</ul>
<p>try &#x2F;catch 捕获异常</p>
<p>可以通过 try &#x2F; catch 捕获错误信息（浏览器提供的错误信息）</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> p = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.p&quot;</span>);</span><br><span class="line">    p.<span class="property">style</span>.<span class="property">color</span> = <span class="string">&quot;red&quot;</span>;</span><br><span class="line">  &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(error.<span class="property">message</span>);</span><br><span class="line">  &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;finally执行了！&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;我是函数fn中的最后打印&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fn</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;我是函数fn外的打印&quot;</span>);</span><br></pre></td></tr></table></figure>

<ul>
<li>将预估可能发生错误的代码写在 try 代码段中</li>
<li>如果 try 代码段中出现错误后，会执行 catch 代码段，并截获到错误信息</li>
<li>finally 不管是否有错误，都会执行</li>
<li>使用 try &#x2F; catch 捕获错误信息，发生异常后程序不会终止执行</li>
</ul>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230511145301739.png" alt="image-20230511145301739"></p>
<p>debugger</p>
<p>可以在代码中用 debugger 打断点调试程序，它和我们在控制台打断点的效果是一样的</p>
<h3 id="6、this"><a href="#6、this" class="headerlink" title="6、this"></a>6、this</h3><p>this 指向</p>
<ul>
<li>普通函数中的 this：指向 window</li>
<li>构造函数、原型对象中的 this：指向实例化对象</li>
<li>对象中的方法中的 this：指向该对象</li>
<li>定时器、延时器中的 this：指向 window</li>
<li>事件处理函数中的 this：指向事件源</li>
<li>箭头函数中的 this：实际上箭头函数中并不存在 this，箭头函数中的 this 指向上层作用域的 this，如果上层作用域也没有 this，则一级一级向上查找</li>
</ul>
<p><em>简单来说，this 总是指向调用者。我们所说的 this 指向是按作用域划分的</em></p>
<p>改变 this 指向</p>
<p>JavaScript 中还允许指定函数中 this 的指向，有 3 个方法可以动态指定普通函数中 this 的指向</p>
<p>call()</p>
<p>语法：</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230511152012252.png" alt="image-20230511152012252"></p>
<ul>
<li>thisArg：在 fun 函数运行时指定的 this 值</li>
<li>arg1，arg2：函数 fun 正常的参数</li>
<li>返回值就是函数的返回值，因为它就是调用函数（当一个函数调用了 call 方法时，这个函数也被调用执行了）</li>
</ul>
<p>apply()</p>
<p>语法：</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230511152310061.png" alt="image-20230511152310061"></p>
<ul>
<li>thisArg：在 fun 函数运行时指定的 this 值</li>
<li>argsArray：函数 fun 正常的参数，但是在 apply 中必须包含在数组里面</li>
<li>因为 apply 的参数主要跟数组有关系，因此在涉及到数组处理时，应该想到 apply 比如使用 Math.max() 求数组的最大值</li>
<li>返回值就是函数的返回值，因为它就是调用函数当一个函数调用了 apply 方法时，这个函数也被调用执行了）</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 求数组最大值</span></span><br><span class="line"><span class="keyword">const</span> arr = [<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>];</span><br><span class="line"><span class="comment">// console.log(Math.max(...arr))</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Math</span>.<span class="property">max</span>.<span class="title function_">apply</span>(<span class="literal">null</span>, arr));</span><br></pre></td></tr></table></figure>

<p>bind()</p>
<p>语法：</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230511153919522.png" alt="image-20230511153919522"></p>
<ul>
<li>thisArg：在 fun 函数运行时指定的 this 值</li>
<li>arg1，arg2：函数 fun 具体的参数</li>
<li>返回由指定的 this 值和初始化参数改造的原函数拷贝 （新函数），并不调用原函数</li>
<li>因此当我们只是想改变 this 指向，并且不想调用这个函数的时候，可以使用 bind，比如改变定时器内部的 this 指向</li>
</ul>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title>基于RBAC的菜单权限控制</title>
    <url>/2022/12/13/%E5%9F%BA%E4%BA%8ERBAC%E7%9A%84%E8%8F%9C%E5%8D%95%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>RBAC (Role-Based Access Control) 是一种基于角色的访问控制方式。在这种模式中，权限不是直接分配给用户，而是分配给角色，然后用户被分配到不同的角色。用户通过角色获得权限。这种方式使得权限管理变得更加灵活和方便。</p>
<p>在 RBAC 模型中，可以包含以下几个主要元素：</p>
<ul>
<li>用户（User）：系统的操作者，可以是人，也可以是内部的程序或进程。</li>
<li>角色（Role）：用户的身份，它是权限的集合。一个用户可以拥有多个角色。</li>
<li>权限（Permission）：对一种操作或者资源的访问控制。权限通常是系统定义好的，例如读权限、写权限等。</li>
</ul>
<p>RBAC 模型的主要优点是可以简化权限管理。在大型组织中，用户经常会更换部门，或者角色会随着时间而变化。使用 RBAC 模型，只需要更改用户的角色，而不需要单独更改每个用户的权限。</p>
<p>在企业服务中，权限一般分割为 <strong>页面访问权限</strong>，<strong>按钮操作权限</strong>，<strong>API 访问权限</strong></p>
<h2 id="一、权限受控的主体思路"><a href="#一、权限受控的主体思路" class="headerlink" title="一、权限受控的主体思路"></a>一、权限受控的主体思路</h2><ul>
<li>我们将路由模块分为静态路由和动态路由，静态路由是所有人都能访问的，而动态路由则是需要权限才能访问的</li>
<li>在用户登录获取的用户信息中，携带有用户拥有的权限标识。我们可以将用户携带的权限标识和动态路由对应起来（比如对应到路由模块的 name），这样就可以从动态路由中筛选出用户所拥有的路由了</li>
<li>静态路由和筛选出的路由合并得到用户完整路由。侧边栏根据完整路由渲染出菜单栏、路由守卫根据完整路由拦截或放行</li>
</ul>
<h2 id="二、拆分路由模块"><a href="#二、拆分路由模块" class="headerlink" title="二、拆分路由模块"></a>二、拆分路由模块</h2><p>拆分后的&#x2F;src&#x2F;router.index.js</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Router</span> <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">Router</span>);</span><br><span class="line"><span class="comment">// 引入多个模块的规则</span></span><br><span class="line"><span class="keyword">import</span> approvalsRouter <span class="keyword">from</span> <span class="string">&quot;./modules/approvals&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> departmentsRouter <span class="keyword">from</span> <span class="string">&quot;./modules/departments&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> employeesRouter <span class="keyword">from</span> <span class="string">&quot;./modules/employees&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> permissionRouter <span class="keyword">from</span> <span class="string">&quot;./modules/permission&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> attendancesRouter <span class="keyword">from</span> <span class="string">&quot;./modules/attendances&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> salarysRouter <span class="keyword">from</span> <span class="string">&quot;./modules/salarys&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> settingRouter <span class="keyword">from</span> <span class="string">&quot;./modules/setting&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> socialRouter <span class="keyword">from</span> <span class="string">&quot;./modules/social&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> userRouter <span class="keyword">from</span> <span class="string">&quot;./modules/user&quot;</span>;</span><br><span class="line"><span class="comment">/* Layout */</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Layout</span> <span class="keyword">from</span> <span class="string">&quot;@/layout&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> constantRoutes = [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&quot;/login&quot;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/login/index&quot;</span>),</span><br><span class="line">    <span class="attr">hidden</span>: <span class="literal">true</span>,</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&quot;/404&quot;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/404&quot;</span>),</span><br><span class="line">    <span class="attr">hidden</span>: <span class="literal">true</span>,</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&quot;/&quot;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="title class_">Layout</span>,</span><br><span class="line">    <span class="attr">redirect</span>: <span class="string">&quot;/dashboard&quot;</span>,</span><br><span class="line">    <span class="attr">children</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&quot;dashboard&quot;</span>,</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&quot;dashboard&quot;</span>,</span><br><span class="line">        <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/dashboard/index&quot;</span>),</span><br><span class="line">        <span class="attr">meta</span>: &#123; <span class="attr">title</span>: <span class="string">&quot;首页&quot;</span>, <span class="attr">icon</span>: <span class="string">&quot;dashboard&quot;</span> &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&quot;/import&quot;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="title class_">Layout</span>,</span><br><span class="line">    <span class="attr">hidden</span>: <span class="literal">true</span>, <span class="comment">// 该组件不在菜单中显示</span></span><br><span class="line">    <span class="attr">children</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/import&quot;</span>),</span><br><span class="line">        <span class="attr">meta</span>: &#123;</span><br><span class="line">          <span class="attr">title</span>: <span class="string">&quot;导入&quot;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line">  userRouter,</span><br><span class="line">  <span class="comment">// 404 page must be placed at the end !!!</span></span><br><span class="line">  <span class="comment">// &#123; path: &#x27;*&#x27;, redirect: &#x27;/404&#x27;, hidden: true &#125;</span></span><br><span class="line">];</span><br><span class="line"><span class="comment">// 动态路由的变量</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> asyncRoutes = [</span><br><span class="line">  approvalsRouter,</span><br><span class="line">  departmentsRouter,</span><br><span class="line">  employeesRouter,</span><br><span class="line">  permissionRouter,</span><br><span class="line">  attendancesRouter,</span><br><span class="line">  salarysRouter,</span><br><span class="line">  settingRouter,</span><br><span class="line">  socialRouter,</span><br><span class="line">];</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">createRouter</span> = (<span class="params"></span>) =&gt;</span><br><span class="line">  <span class="keyword">new</span> <span class="title class_">Router</span>(&#123;</span><br><span class="line">    <span class="attr">mode</span>: <span class="string">&quot;history&quot;</span>, <span class="comment">// require service support</span></span><br><span class="line">    <span class="attr">base</span>: <span class="string">&quot;/hrsaas/&quot;</span>,</span><br><span class="line">    <span class="attr">scrollBehavior</span>: <span class="function">() =&gt;</span> (&#123; <span class="attr">y</span>: <span class="number">0</span> &#125;),</span><br><span class="line">    <span class="attr">routes</span>: [...constantRoutes],</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Detail see: https://github.com/vuejs/vue-router/issues/1234#issuecomment-357941465</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">resetRouter</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> newRouter = <span class="title function_">createRouter</span>();</span><br><span class="line">  router.<span class="property">matcher</span> = newRouter.<span class="property">matcher</span>; <span class="comment">// reset router</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router;</span><br></pre></td></tr></table></figure>

<h2 id="三、在-vuex-中新建-permission-模块"><a href="#三、在-vuex-中新建-permission-模块" class="headerlink" title="三、在 vuex 中新建 permission 模块"></a>三、在 vuex 中新建 permission 模块</h2><p><strong><code>src/store/modules/permission.js</code></strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// vuex的权限模块</span></span><br><span class="line"><span class="keyword">import</span> &#123; constantRoutes &#125; <span class="keyword">from</span> <span class="string">&quot;@/router&quot;</span>;</span><br><span class="line"><span class="comment">// vuex中的permission模块用来存放当前的 静态路由 + 当前用户的 权限路由</span></span><br><span class="line"><span class="keyword">const</span> state = &#123;</span><br><span class="line">  <span class="attr">routes</span>: constantRoutes, <span class="comment">// 所有人默认拥有静态路由</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> mutations = &#123;</span><br><span class="line">  <span class="comment">// newRoutes可以认为是 用户登录 通过权限所得到的动态路由的部分</span></span><br><span class="line">  <span class="title function_">setRoutes</span>(<span class="params">state, newRoutes</span>) &#123;</span><br><span class="line">    <span class="comment">// 下面这么写不对 不是语法不对 是业务不对</span></span><br><span class="line">    <span class="comment">// state.routes = [...state.routes, ...newRoutes]</span></span><br><span class="line">    <span class="comment">// 有一种情况  张三 登录 获取了动态路由 追加到路由上  李四登录 4个动态路由</span></span><br><span class="line">    <span class="comment">// 应该是每次更新 都应该在静态路由的基础上进行追加</span></span><br><span class="line">    state.<span class="property">routes</span> = [...constantRoutes, ...newRoutes];</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> actions = &#123;&#125;;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">namespaced</span>: <span class="literal">true</span>,</span><br><span class="line">  state,</span><br><span class="line">  mutations,</span><br><span class="line">  actions,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>在 Vuex 管理模块中引入 permisson 模块</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> permission <span class="keyword">from</span> <span class="string">&quot;./modules/permission&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> store = <span class="keyword">new</span> <span class="title class_">Vuex</span>.<span class="title class_">Store</span>(&#123;</span><br><span class="line">  <span class="attr">modules</span>: &#123;</span><br><span class="line">    <span class="comment">// 子模块   $store.state.app.</span></span><br><span class="line">    <span class="comment">// mapGetters([])</span></span><br><span class="line">    app,</span><br><span class="line">    settings,</span><br><span class="line">    user,</span><br><span class="line">    permission,</span><br><span class="line">  &#125;,</span><br><span class="line">  getters,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h2 id="四、vuex-筛选路由权限"><a href="#四、vuex-筛选路由权限" class="headerlink" title="四、vuex 筛选路由权限"></a>四、vuex 筛选路由权限</h2><p>我们可以按照这张图，做进一步的操作</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20200815184407204.png" alt="image-20200815184407204"></p>
<p>后端返回的用户信息</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20200815185230597.png" alt="image-20200815185230597"></p>
<p>接下来， 在 vuex 的 permission 中写一个 action，通过路由模块的 name 与用户信息中的权限标识进行关联，最终筛选出用户所拥有的权限路由</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; asyncRoutes, constantRoutes &#125; <span class="keyword">from</span> <span class="string">&#x27;@/router&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> actions = &#123;</span><br><span class="line">  <span class="comment">// 筛选权限路由</span></span><br><span class="line">  <span class="comment">// 第二个参数为当前用户的所拥有的菜单权限</span></span><br><span class="line">  <span class="comment">// menus: [&quot;settings&quot;,&quot;permissions&quot;]</span></span><br><span class="line">  <span class="comment">// asyncRoutes是所有的动态路由</span></span><br><span class="line">  <span class="comment">// asyncRoutes  [&#123;path: &#x27;setting&#x27;,name: &#x27;setting&#x27;&#125;,&#123;&#125;]</span></span><br><span class="line">  <span class="title function_">filterRoutes</span>(<span class="params">context, menus</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> routes = []</span><br><span class="line">    <span class="comment">//   筛选出 动态路由中和menus中能够对上的路由</span></span><br><span class="line">    menus.<span class="title function_">forEach</span>(<span class="function"><span class="params">key</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// key就是标识</span></span><br><span class="line">      <span class="comment">// asyncRoutes 找 有没有对象中的name属性等于 key的 如果找不到就没权限 如果找到了 要筛选出来</span></span><br><span class="line">      routes.<span class="title function_">push</span>(...asyncRoutes.<span class="title function_">filter</span>(<span class="function"><span class="params">item</span> =&gt;</span> item.<span class="property">name</span> === key)) <span class="comment">// 得到一个数组 有可能 有元素 也有可能是空数组</span></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="comment">// 得到的routes是所有模块中满足权限要求的路由数组</span></span><br><span class="line">    <span class="comment">// routes就是当前用户所拥有的 动态路由的权限</span></span><br><span class="line">    context.<span class="title function_">commit</span>(<span class="string">&#x27;setRoutes&#x27;</span>, routes) <span class="comment">// 将动态路由提交给mutations</span></span><br><span class="line">    <span class="keyword">return</span> routes <span class="comment">// 这里为什么还要return  state数据 是用来 显示左侧菜单用的  return  是给路由addRoutes用的</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<h2 id="五、权限拦截处调用筛选权限-Action"><a href="#五、权限拦截处调用筛选权限-Action" class="headerlink" title="五、权限拦截处调用筛选权限 Action"></a>五、权限拦截处调用筛选权限 Action</h2><p>在拦截的位置，调用关联 action， 获取新增 routes，并且<strong>addRoutes</strong></p>
<p>注意，由于内容较多，我们可以将拦截这块从&#x2F;src&#x2F;router&#x2F;index.js 中抽离出来，形成一个单独的模块，&#x2F;src&#x2F;permission.js</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 权限拦截在路由跳转  导航守卫</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&quot;@/router&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">&quot;@/store&quot;</span>; <span class="comment">// 引入store实例 和组件中的this.$store是一回事</span></span><br><span class="line"><span class="keyword">import</span> nprogress <span class="keyword">from</span> <span class="string">&quot;nprogress&quot;</span>; <span class="comment">// 引入进度条</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;nprogress/nprogress.css&quot;</span>; <span class="comment">// 引入进度条样式</span></span><br><span class="line"><span class="comment">// 不需要导出  因为只需要让代码执行即可</span></span><br><span class="line"><span class="comment">// 前置守卫</span></span><br><span class="line"><span class="comment">// next是前置守卫必须必须必须执行的钩子  next必须执行 如果不执行 页面就死了</span></span><br><span class="line"><span class="comment">// next()  放过</span></span><br><span class="line"><span class="comment">// next(false) 跳转终止</span></span><br><span class="line"><span class="comment">// next(地址) 跳转到某个地址</span></span><br><span class="line"><span class="keyword">const</span> whiteList = [<span class="string">&quot;/login&quot;</span>, <span class="string">&quot;/404&quot;</span>]; <span class="comment">// 定义白名单</span></span><br><span class="line">router.<span class="title function_">beforeEach</span>(<span class="keyword">async</span> (to, <span class="keyword">from</span>, next) =&gt; &#123;</span><br><span class="line">  nprogress.<span class="title function_">start</span>(); <span class="comment">// 开启进度条的意思</span></span><br><span class="line">  <span class="keyword">if</span> (store.<span class="property">getters</span>.<span class="property">token</span>) &#123;</span><br><span class="line">    <span class="comment">// 只有有token的情况下 才能获取资料</span></span><br><span class="line">    <span class="comment">//   如果有token</span></span><br><span class="line">    <span class="keyword">if</span> (to.<span class="property">path</span> === <span class="string">&quot;/login&quot;</span>) &#123;</span><br><span class="line">      <span class="comment">// 如果要访问的是 登录页</span></span><br><span class="line">      <span class="title function_">next</span>(<span class="string">&quot;/&quot;</span>); <span class="comment">// 跳到主页  // 有token 用处理吗？不用</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// 只有放过的时候才去获取用户资料</span></span><br><span class="line">      <span class="comment">// 是每次都获取吗</span></span><br><span class="line">      <span class="comment">// 如果当前vuex中有用户的资料的id 表示 已经有资料了 不需要获取了 如果没有id才需要获取</span></span><br><span class="line">      <span class="keyword">if</span> (!store.<span class="property">getters</span>.<span class="property">userId</span>) &#123;</span><br><span class="line">        <span class="comment">// 如果没有id才表示当前用户资料没有获取过</span></span><br><span class="line">        <span class="comment">// async 函数所return的内容 用 await就可以接收到</span></span><br><span class="line">        <span class="keyword">const</span> &#123; roles &#125; = <span class="keyword">await</span> store.<span class="title function_">dispatch</span>(<span class="string">&quot;user/getUserInfo&quot;</span>);</span><br><span class="line">        <span class="comment">// 如果说后续 需要根据用户资料获取数据的话 这里必须改成 同步</span></span><br><span class="line">        <span class="comment">// 筛选用户的可用路由</span></span><br><span class="line">        <span class="comment">// actions中函数 默认是Promise对象 调用这个对象 想要获取返回的值话 必须 加 await或者是then</span></span><br><span class="line">        <span class="comment">// actions是做异步操作的</span></span><br><span class="line">        <span class="keyword">const</span> routes = <span class="keyword">await</span> store.<span class="title function_">dispatch</span>(</span><br><span class="line">          <span class="string">&quot;permission/filterRoutes&quot;</span>,</span><br><span class="line">          roles.<span class="property">menus</span></span><br><span class="line">        );</span><br><span class="line">        <span class="comment">// routes就是筛选得到的动态路由</span></span><br><span class="line">        <span class="comment">// 动态路由 添加到 路由表中 默认的路由表 只有静态路由 没有动态路由</span></span><br><span class="line">        <span class="comment">// addRoutes  必须 用 next(地址) 不能用next()</span></span><br><span class="line">        router.<span class="title function_">addRoutes</span>(routes); <span class="comment">// 添加动态路由到路由表  铺路</span></span><br><span class="line">        <span class="comment">// 添加完动态路由之后</span></span><br><span class="line">        <span class="title function_">next</span>(to.<span class="property">path</span>); <span class="comment">// 相当于跳到对应的地址  相当于多做一次跳转 为什么要多做一次跳转</span></span><br><span class="line">        <span class="comment">// 进门了，但是进门之后我要去的地方的路还没有铺好，直接走，掉坑里，多做一次跳转，再从门外往里进一次，跳转之前 把路铺好，再次进来的时候，路就铺好了</span></span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="title function_">next</span>();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="comment">//   没有token的情况下</span></span><br><span class="line">    <span class="keyword">if</span> (whiteList.<span class="title function_">indexOf</span>(to.<span class="property">path</span>) &gt; -<span class="number">1</span>) &#123;</span><br><span class="line">      <span class="comment">//  表示要去的地址在白名单</span></span><br><span class="line">      <span class="title function_">next</span>();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="title function_">next</span>(<span class="string">&quot;/login&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  nprogress.<span class="title function_">done</span>(); <span class="comment">// 解决手动切换地址时 进度条不关闭的问题</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 后置守卫</span></span><br><span class="line">router.<span class="title function_">afterEach</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  nprogress.<span class="title function_">done</span>(); <span class="comment">// 关闭进度条</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>在**<code>src/store/getters.js</code>**配置导出 routes</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> getters = &#123;</span><br><span class="line">  <span class="attr">sidebar</span>: <span class="function">(<span class="params">state</span>) =&gt;</span> state.<span class="property">app</span>.<span class="property">sidebar</span>,</span><br><span class="line">  <span class="attr">device</span>: <span class="function">(<span class="params">state</span>) =&gt;</span> state.<span class="property">app</span>.<span class="property">device</span>,</span><br><span class="line">  <span class="attr">token</span>: <span class="function">(<span class="params">state</span>) =&gt;</span> state.<span class="property">user</span>.<span class="property">token</span>,</span><br><span class="line">  <span class="attr">name</span>: <span class="function">(<span class="params">state</span>) =&gt;</span> state.<span class="property">user</span>.<span class="property">userInfo</span>.<span class="property">username</span>, <span class="comment">// 建立用户名称的映射</span></span><br><span class="line">  <span class="attr">userId</span>: <span class="function">(<span class="params">state</span>) =&gt;</span> state.<span class="property">user</span>.<span class="property">userInfo</span>.<span class="property">userId</span>, <span class="comment">// 建立用户id的映射</span></span><br><span class="line">  <span class="attr">companyId</span>: <span class="function">(<span class="params">state</span>) =&gt;</span> state.<span class="property">user</span>.<span class="property">userInfo</span>.<span class="property">companyId</span>, <span class="comment">// 建立用户的公司Id映射</span></span><br><span class="line">  <span class="attr">routes</span>: <span class="function">(<span class="params">state</span>) =&gt;</span> state.<span class="property">permission</span>.<span class="property">routes</span>, <span class="comment">// 导出当前的路由</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> getters;</span><br></pre></td></tr></table></figure>

<h2 id="六、在左侧菜单组件中，-引入-routes"><a href="#六、在左侧菜单组件中，-引入-routes" class="headerlink" title="六、在左侧菜单组件中， 引入 routes"></a>六、在左侧菜单组件中， 引入 routes</h2><p>&#x2F;src&#x2F;layout&#x2F;components&#x2F;Siderbar&#x2F;index.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div :class=&quot;&#123; &#x27;has-logo&#x27;: showLogo &#125;&quot;&gt;</span><br><span class="line">    &lt;logo v-if=&quot;showLogo&quot; :collapse=&quot;isCollapse&quot; /&gt;</span><br><span class="line">    &lt;el-scrollbar wrap-class=&quot;scrollbar-wrapper&quot;&gt;</span><br><span class="line">      &lt;el-menu</span><br><span class="line">        :default-active=&quot;activeMenu&quot;</span><br><span class="line">        :collapse=&quot;isCollapse&quot;</span><br><span class="line">        :background-color=&quot;variables.menuBg&quot;</span><br><span class="line">        :text-color=&quot;variables.menuText&quot;</span><br><span class="line">        :unique-opened=&quot;false&quot;</span><br><span class="line">        :active-text-color=&quot;variables.menuActiveText&quot;</span><br><span class="line">        :collapse-transition=&quot;false&quot;</span><br><span class="line">        mode=&quot;vertical&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;sidebar-item</span><br><span class="line">          v-for=&quot;route in routes&quot;</span><br><span class="line">          :key=&quot;route.path&quot;</span><br><span class="line">          :item=&quot;route&quot;</span><br><span class="line">          :base-path=&quot;route.path&quot;</span><br><span class="line">        /&gt;</span><br><span class="line">      &lt;/el-menu&gt;</span><br><span class="line">    &lt;/el-scrollbar&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#123; mapGetters &#125; from &quot;vuex&quot;;</span><br><span class="line">import Logo from &quot;./Logo&quot;;</span><br><span class="line">import SidebarItem from &quot;./SidebarItem&quot;;</span><br><span class="line">import variables from &quot;@/styles/variables.scss&quot;;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  components: &#123; SidebarItem, Logo &#125;,</span><br><span class="line">  computed: &#123;</span><br><span class="line">    ...mapGetters([&quot;sidebar&quot;, &quot;routes&quot;]),</span><br><span class="line">    // 路由 addRoutes之后 不会响应式的更新的组件</span><br><span class="line">    // 默认静态路由 5条  +  addRoutes(6条) = 11条</span><br><span class="line">    // routes() &#123;</span><br><span class="line">    //   return this.$router.options.routes</span><br><span class="line">    // &#125;,</span><br><span class="line">    activeMenu() &#123;</span><br><span class="line">      const route = this.$route;</span><br><span class="line">      const &#123; meta, path &#125; = route;</span><br><span class="line">      // if set path, the sidebar will highlight the path you set</span><br><span class="line">      if (meta.activeMenu) &#123;</span><br><span class="line">        return meta.activeMenu;</span><br><span class="line">      &#125;</span><br><span class="line">      return path;</span><br><span class="line">    &#125;,</span><br><span class="line">    showLogo() &#123;</span><br><span class="line">      return this.$store.state.settings.sidebarLogo;</span><br><span class="line">    &#125;,</span><br><span class="line">    variables() &#123;</span><br><span class="line">      return variables;</span><br><span class="line">    &#125;,</span><br><span class="line">    isCollapse() &#123;</span><br><span class="line">      return !this.sidebar.opened;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<h2 id="七、登出时重置路由权限和-404-问题"><a href="#七、登出时重置路由权限和-404-问题" class="headerlink" title="七、登出时重置路由权限和 404 问题"></a>七、登出时重置路由权限和 404 问题</h2><blockquote>
<p>现在，我们看似完成了访问权限的功能，实则不然，因为当我们登出操作之后，虽然看不到菜单，但是用户实际上可以访问页面，直接在地址栏输入地址就能访问</p>
</blockquote>
<p>这是怎么回事？</p>
<blockquote>
<p>这是因为我们前面在<strong>addRoutes</strong>的时候，一直都是在<strong>加</strong>，登出的时候，我们并没有删，也没有重置，也就是说，我们之前加的路由在登出之后一直在，这怎么处理？</p>
</blockquote>
<p>在<strong>router&#x2F;index.js</strong>文件中提供一个重置路由方法</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 重置路由</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">resetRouter</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> newRouter = <span class="title function_">createRouter</span>();</span><br><span class="line">  router.<span class="property">matcher</span> = newRouter.<span class="property">matcher</span>; <span class="comment">// 重新设置路由的可匹配路径</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这个方法可以将路由重新实例化，相当于换了一个新的路由，之前**<code>加的路由</code>**自然不存在了，只需要在登出的时候， 调用此方法即可</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 登出的action</span></span><br><span class="line"><span class="title function_">lgout</span>(<span class="params">context</span>) &#123;</span><br><span class="line">  <span class="comment">// 删除token</span></span><br><span class="line">  context.<span class="title function_">commit</span>(<span class="string">&#x27;removeToken&#x27;</span>) <span class="comment">// 不仅仅删除了vuex中的 还删除了缓存中的</span></span><br><span class="line">  <span class="comment">// 删除用户资料</span></span><br><span class="line">  context.<span class="title function_">commit</span>(<span class="string">&#x27;removeUserInfo&#x27;</span>) <span class="comment">// 删除用户信息</span></span><br><span class="line">  <span class="comment">// 重置路由</span></span><br><span class="line">  <span class="title function_">resetRouter</span>()</span><br><span class="line">  <span class="comment">// 还有一步  vuex中的数据是不是还在</span></span><br><span class="line">  <span class="comment">// 要清空permission模块下的state数据</span></span><br><span class="line">  <span class="comment">// vuex中 user子模块  permission子模块</span></span><br><span class="line">  <span class="comment">// 子模块调用子模块的action  默认情况下 子模块的context是子模块的</span></span><br><span class="line">  <span class="comment">// 父模块 调用 子模块的action</span></span><br><span class="line">  context.<span class="title function_">commit</span>(<span class="string">&#x27;permission/setRoutes&#x27;</span>, [], &#123; <span class="attr">root</span>: <span class="literal">true</span> &#125;)</span><br><span class="line">  <span class="comment">// 子模块调用子模块的action 可以 将 commit的第三个参数 设置成  &#123; root: true &#125; 就表示当前的context不是子模块了 而是父模块</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>除此之外，我们发现在页面刷新的时候，本来应该拥有权限的页面出现了 404，这是因为 404 的匹配权限放在了静态路由，而动态路由在没有 addRoutes 之前，找不到对应的地址，就会显示 404，所以我们需要将 404 放置到动态路由的最后</p>
<p><strong><code>src/permission.js</code></strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">router.<span class="title function_">addRoutes</span>([...routes, &#123; <span class="attr">path</span>: <span class="string">&quot;*&quot;</span>, <span class="attr">redirect</span>: <span class="string">&quot;/404&quot;</span>, <span class="attr">hidden</span>: <span class="literal">true</span> &#125;]); <span class="comment">// 添加到路由表</span></span><br></pre></td></tr></table></figure>

<h2 id="八、完整代码"><a href="#八、完整代码" class="headerlink" title="八、完整代码"></a>八、完整代码</h2><h3 id="1、路由模块"><a href="#1、路由模块" class="headerlink" title="1、路由模块"></a>1、路由模块</h3><p>&#x2F;src&#x2F;router&#x2F;index.js</p>
<p>路由模块提供了静态路由和动态路由（从&#x2F;src&#x2F;router 中的其他路由子模块导入）</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Router</span> <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">Router</span>);</span><br><span class="line"><span class="comment">// 引入多个模块的规则</span></span><br><span class="line"><span class="keyword">import</span> approvalsRouter <span class="keyword">from</span> <span class="string">&quot;./modules/approvals&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> departmentsRouter <span class="keyword">from</span> <span class="string">&quot;./modules/departments&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> employeesRouter <span class="keyword">from</span> <span class="string">&quot;./modules/employees&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> permissionRouter <span class="keyword">from</span> <span class="string">&quot;./modules/permission&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> attendancesRouter <span class="keyword">from</span> <span class="string">&quot;./modules/attendances&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> salarysRouter <span class="keyword">from</span> <span class="string">&quot;./modules/salarys&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> settingRouter <span class="keyword">from</span> <span class="string">&quot;./modules/setting&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> socialRouter <span class="keyword">from</span> <span class="string">&quot;./modules/social&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> userRouter <span class="keyword">from</span> <span class="string">&quot;./modules/user&quot;</span>;</span><br><span class="line"><span class="comment">/* Layout */</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Layout</span> <span class="keyword">from</span> <span class="string">&quot;@/layout&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> constantRoutes = [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&quot;/login&quot;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/login/index&quot;</span>),</span><br><span class="line">    <span class="attr">hidden</span>: <span class="literal">true</span>,</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&quot;/404&quot;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/404&quot;</span>),</span><br><span class="line">    <span class="attr">hidden</span>: <span class="literal">true</span>,</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&quot;/&quot;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="title class_">Layout</span>,</span><br><span class="line">    <span class="attr">redirect</span>: <span class="string">&quot;/dashboard&quot;</span>,</span><br><span class="line">    <span class="attr">children</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&quot;dashboard&quot;</span>,</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&quot;dashboard&quot;</span>,</span><br><span class="line">        <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/dashboard/index&quot;</span>),</span><br><span class="line">        <span class="attr">meta</span>: &#123; <span class="attr">title</span>: <span class="string">&quot;首页&quot;</span>, <span class="attr">icon</span>: <span class="string">&quot;dashboard&quot;</span> &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&quot;/import&quot;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="title class_">Layout</span>,</span><br><span class="line">    <span class="attr">hidden</span>: <span class="literal">true</span>, <span class="comment">// 该组件不在菜单中显示</span></span><br><span class="line">    <span class="attr">children</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/import&quot;</span>),</span><br><span class="line">        <span class="attr">meta</span>: &#123;</span><br><span class="line">          <span class="attr">title</span>: <span class="string">&quot;导入&quot;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line">  userRouter,</span><br><span class="line">];</span><br><span class="line"><span class="comment">// 动态路由的变量</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> asyncRoutes = [</span><br><span class="line">  approvalsRouter,</span><br><span class="line">  departmentsRouter,</span><br><span class="line">  employeesRouter,</span><br><span class="line">  permissionRouter,</span><br><span class="line">  attendancesRouter,</span><br><span class="line">  salarysRouter,</span><br><span class="line">  settingRouter,</span><br><span class="line">  socialRouter,</span><br><span class="line">];</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">createRouter</span> = (<span class="params"></span>) =&gt;</span><br><span class="line">  <span class="keyword">new</span> <span class="title class_">Router</span>(&#123;</span><br><span class="line">    <span class="attr">mode</span>: <span class="string">&quot;history&quot;</span>, <span class="comment">// require service support</span></span><br><span class="line">    <span class="attr">base</span>: <span class="string">&quot;/hrsaas/&quot;</span>,</span><br><span class="line">    <span class="attr">scrollBehavior</span>: <span class="function">() =&gt;</span> (&#123; <span class="attr">y</span>: <span class="number">0</span> &#125;),</span><br><span class="line">    <span class="attr">routes</span>: [...constantRoutes], <span class="comment">// 动态路由和静态路由的临时合并</span></span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Detail see: https://github.com/vuejs/vue-router/issues/1234#issuecomment-357941465</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">resetRouter</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> newRouter = <span class="title function_">createRouter</span>();</span><br><span class="line">  router.<span class="property">matcher</span> = newRouter.<span class="property">matcher</span>; <span class="comment">// reset router</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router;</span><br></pre></td></tr></table></figure>

<h3 id="2、store-模块"><a href="#2、store-模块" class="headerlink" title="2、store 模块"></a>2、store 模块</h3><p>&#x2F;src&#x2F;store&#x2F;index.js</p>
<p>它将其他 store 子模块汇总到一起导出供使用</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Vuex</span> <span class="keyword">from</span> <span class="string">&quot;vuex&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> getters <span class="keyword">from</span> <span class="string">&quot;./getters&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> app <span class="keyword">from</span> <span class="string">&quot;./modules/app&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> settings <span class="keyword">from</span> <span class="string">&quot;./modules/settings&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> user <span class="keyword">from</span> <span class="string">&quot;./modules/user&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> permission <span class="keyword">from</span> <span class="string">&quot;./modules/permission&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> tagsView <span class="keyword">from</span> <span class="string">&quot;./modules/tagsView&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">Vuex</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> store = <span class="keyword">new</span> <span class="title class_">Vuex</span>.<span class="title class_">Store</span>(&#123;</span><br><span class="line">  <span class="attr">modules</span>: &#123;</span><br><span class="line">    app,</span><br><span class="line">    settings,</span><br><span class="line">    user,</span><br><span class="line">    permission,</span><br><span class="line">    tagsView,</span><br><span class="line">  &#125;,</span><br><span class="line">  getters,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> store;</span><br></pre></td></tr></table></figure>

<p>&#x2F;src&#x2F;store&#x2F;getter.js</p>
<p>getter 模块提供了其他 store 模块的快捷访问方式</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> getters = &#123;</span><br><span class="line">  <span class="attr">sidebar</span>: <span class="function">(<span class="params">state</span>) =&gt;</span> state.<span class="property">app</span>.<span class="property">sidebar</span>,</span><br><span class="line">  <span class="attr">device</span>: <span class="function">(<span class="params">state</span>) =&gt;</span> state.<span class="property">app</span>.<span class="property">device</span>,</span><br><span class="line">  <span class="attr">token</span>: <span class="function">(<span class="params">state</span>) =&gt;</span> state.<span class="property">user</span>.<span class="property">token</span>, <span class="comment">// 将user模块下的token作为快捷方式放出来</span></span><br><span class="line">  <span class="attr">name</span>: <span class="function">(<span class="params">state</span>) =&gt;</span> state.<span class="property">user</span>.<span class="property">userInfo</span>.<span class="property">username</span>, <span class="comment">// 将子模块中的对象中的名称开放出来</span></span><br><span class="line">  <span class="attr">userId</span>: <span class="function">(<span class="params">state</span>) =&gt;</span> state.<span class="property">user</span>.<span class="property">userInfo</span>.<span class="property">userId</span>,</span><br><span class="line">  <span class="attr">staffPhoto</span>: <span class="function">(<span class="params">state</span>) =&gt;</span> state.<span class="property">user</span>.<span class="property">userInfo</span>.<span class="property">staffPhoto</span>, <span class="comment">// 头像</span></span><br><span class="line">  <span class="attr">companyId</span>: <span class="function">(<span class="params">state</span>) =&gt;</span> state.<span class="property">user</span>.<span class="property">userInfo</span>.<span class="property">companyId</span>,</span><br><span class="line">  <span class="attr">routes</span>: <span class="function">(<span class="params">state</span>) =&gt;</span> state.<span class="property">permission</span>.<span class="property">routes</span>,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> getters;</span><br></pre></td></tr></table></figure>

<p>&#x2F;src&#x2F;store&#x2F;modules&#x2F;user.js</p>
<p>user 模块主要用来存储 token 和用户信息</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; getToken, setToken, removeToken, setTimeStamp &#125; <span class="keyword">from</span> <span class="string">&quot;@/utils/auth&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; login, getUserInfo, getUserDetailById &#125; <span class="keyword">from</span> <span class="string">&quot;@/api/user&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; resetRouter &#125; <span class="keyword">from</span> <span class="string">&quot;@/router&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> state = &#123;</span><br><span class="line">  <span class="attr">token</span>: <span class="title function_">getToken</span>(), <span class="comment">// 设置token为共享</span></span><br><span class="line">  <span class="attr">userInfo</span>: &#123;&#125;, <span class="comment">// 这里为什么不写null ?</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> mutations = &#123;</span><br><span class="line">  <span class="comment">// 设置token的mutations</span></span><br><span class="line">  <span class="title function_">setToken</span>(<span class="params">state, token</span>) &#123;</span><br><span class="line">    state.<span class="property">token</span> = token; <span class="comment">// 只是设置了vuex中的数据</span></span><br><span class="line">    <span class="comment">// 需要将vuex中的数据同步到缓存</span></span><br><span class="line">    <span class="title function_">setToken</span>(token);</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">removeToken</span>(<span class="params">state</span>) &#123;</span><br><span class="line">    state.<span class="property">token</span> = <span class="literal">null</span>; <span class="comment">// 设置vuex中的token为null</span></span><br><span class="line">    <span class="title function_">removeToken</span>(); <span class="comment">// 同步删除缓存中的token</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">setUserInfo</span>(<span class="params">state, userInfo</span>) &#123;</span><br><span class="line">    state.<span class="property">userInfo</span> = userInfo;</span><br><span class="line">    <span class="comment">// state.userInfo = &#123; ...userInfo &#125; // 浅拷贝 如果要去改属性里面的某一个值 可以用浅拷贝的方式</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">removeUserInfo</span>(<span class="params">state</span>) &#123;</span><br><span class="line">    state.<span class="property">userInfo</span> = &#123;&#125;; <span class="comment">// 重置为空对象</span></span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> actions = &#123;</span><br><span class="line">  <span class="comment">// 封装一个登录的action</span></span><br><span class="line">  <span class="comment">// data认为是 &#123; mobile,password &#125;</span></span><br><span class="line">  <span class="comment">// 只要用async标记了函数 那么这个函数本身就是promise对象</span></span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">login</span>(<span class="params">context, data</span>) &#123;</span><br><span class="line">    <span class="comment">// 调用登录接口</span></span><br><span class="line">    <span class="keyword">const</span> result = <span class="keyword">await</span> <span class="title function_">login</span>(data);</span><br><span class="line">    <span class="comment">// result就是token</span></span><br><span class="line">    context.<span class="title function_">commit</span>(<span class="string">&quot;setToken&quot;</span>, result);</span><br><span class="line"></span><br><span class="line">    <span class="title function_">setTimeStamp</span>(); <span class="comment">// 设置时间戳</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 获取用户资料</span></span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">getUserInfo</span>(<span class="params">context</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> result = <span class="keyword">await</span> <span class="title function_">getUserInfo</span>();</span><br><span class="line">    <span class="comment">// 此时result里面已经有userId</span></span><br><span class="line">    <span class="keyword">const</span> baseInfo = <span class="keyword">await</span> <span class="title function_">getUserDetailById</span>(result.<span class="property">userId</span>); <span class="comment">// 用户的基本信息</span></span><br><span class="line">    context.<span class="title function_">commit</span>(<span class="string">&quot;setUserInfo&quot;</span>, &#123; ...result, ...baseInfo &#125;); <span class="comment">// 修改state中的用户资料</span></span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 登出action</span></span><br><span class="line">  <span class="title function_">lgout</span>(<span class="params">&#123; commit &#125;</span>) &#123;</span><br><span class="line">    <span class="comment">// 删除token</span></span><br><span class="line">    <span class="title function_">commit</span>(<span class="string">&quot;removeToken&quot;</span>);</span><br><span class="line">    <span class="comment">// 删除用户资料</span></span><br><span class="line">    <span class="title function_">commit</span>(<span class="string">&quot;removeUserInfo&quot;</span>);</span><br><span class="line">    <span class="comment">// 重置路由</span></span><br><span class="line">    <span class="title function_">resetRouter</span>();</span><br><span class="line">    <span class="comment">// 清空路由模块下的路由信息</span></span><br><span class="line">    <span class="comment">// Vuex子模块 调用子模块的mutation</span></span><br><span class="line">    <span class="title function_">commit</span>(<span class="string">&quot;permission/setRoutes&quot;</span>, [], &#123; <span class="attr">root</span>: <span class="literal">true</span> &#125;); <span class="comment">// commit默认是提交的当前子模块的mutations</span></span><br><span class="line">    <span class="comment">// 如果加上 root: true 就表示commit此时是根级的commit</span></span><br><span class="line">    <span class="comment">// this.$store.commit(&#x27;permission/setRoutes&#x27;)</span></span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">namespaced</span>: <span class="literal">true</span>,</span><br><span class="line">  state,</span><br><span class="line">  mutations,</span><br><span class="line">  actions,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>&#x2F;src&#x2F;store&#x2F;modules&#x2F;permission.js</p>
<p>permission 模块主要用来筛选出用户所拥有的路由</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 引入了静态路由</span></span><br><span class="line"><span class="comment">// 权限模块的目的 是提供当前用户所拥有的路由权限的数据  静态路由 + 当前用户的自身的动态路由</span></span><br><span class="line"><span class="keyword">import</span> &#123; constantRoutes, asyncRoutes &#125; <span class="keyword">from</span> <span class="string">&quot;@/router&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> state = &#123;</span><br><span class="line">  <span class="comment">// routes表示当前人的路由权限</span></span><br><span class="line">  <span class="attr">routes</span>: constantRoutes, <span class="comment">// 当前所有人都默认拥有静态路由</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> mutations = &#123;</span><br><span class="line">  <span class="comment">// newRoutes认为是用户登录之后获取的新路由</span></span><br><span class="line">  <span class="title function_">setRoutes</span>(<span class="params">state, newRoutes</span>) &#123;</span><br><span class="line">    state.<span class="property">routes</span> = [...constantRoutes, ...newRoutes]; <span class="comment">// 静态路由  + 动态路由</span></span><br><span class="line">    <span class="comment">// 需要得到newRoutes 才能调用mutations</span></span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> actions = &#123;</span><br><span class="line">  <span class="comment">// 筛选路由模块 menus认为是当前用户资料的menus标识  代表用户所拥有的的权限</span></span><br><span class="line">  <span class="title function_">filterRoutes</span>(<span class="params">context, menus</span>) &#123;</span><br><span class="line">    <span class="comment">// menus  [&#x27;setting&#x27;,&#x27;approvals]</span></span><br><span class="line">    <span class="comment">// asyncRoutes  [&#123; name: &#x27;&#x27;  &#125;]</span></span><br><span class="line">    <span class="keyword">var</span> routes = [];</span><br><span class="line">    menus.<span class="title function_">forEach</span>(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// item是字符串 去asyncRoutes里面找有没有路由的name叫这个字符串</span></span><br><span class="line">      routes.<span class="title function_">push</span>(...asyncRoutes.<span class="title function_">filter</span>(<span class="function">(<span class="params">route</span>) =&gt;</span> route.<span class="property">name</span> === item));</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">// routes就是当前用户的筛选之后的动态路由</span></span><br><span class="line">    context.<span class="title function_">commit</span>(<span class="string">&quot;setRoutes&quot;</span>, routes);</span><br><span class="line">    <span class="comment">// 最后加一行代码</span></span><br><span class="line">    <span class="keyword">return</span> routes; <span class="comment">// 这里返回是因为后面调用action的时候 要使用</span></span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">namespaced</span>: <span class="literal">true</span>,</span><br><span class="line">  state,</span><br><span class="line">  mutations,</span><br><span class="line">  actions,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h3 id="3、权限拦截模块"><a href="#3、权限拦截模块" class="headerlink" title="3、权限拦截模块"></a>3、权限拦截模块</h3><p>src&#x2F;permission.js</p>
<p>这个模块主要是通过路由守卫进行页面权限控制</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 路由的拦截权限问题</span></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&quot;@/router&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">&quot;@/store&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">NProgress</span> <span class="keyword">from</span> <span class="string">&quot;nprogress&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;nprogress/nprogress.css&quot;</span>; <span class="comment">// 引入进度条样式</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 前置守卫</span></span><br><span class="line"><span class="keyword">const</span> whileList = [<span class="string">&quot;/login&quot;</span>, <span class="string">&quot;/404&quot;</span>];</span><br><span class="line">router.<span class="title function_">beforeEach</span>(<span class="keyword">async</span> (to, <span class="keyword">from</span>, next) =&gt; &#123;</span><br><span class="line">  <span class="title class_">NProgress</span>.<span class="title function_">start</span>(); <span class="comment">// 开启进度条</span></span><br><span class="line">  <span class="comment">// next是一个必须执行的钩子 不执行就卡主了</span></span><br><span class="line">  <span class="keyword">if</span> (store.<span class="property">getters</span>.<span class="property">token</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (to.<span class="property">path</span> === <span class="string">&quot;/login&quot;</span>) &#123;</span><br><span class="line">      <span class="comment">// next() 放行</span></span><br><span class="line">      <span class="comment">// next(false) 终止</span></span><br><span class="line">      <span class="comment">// next(地址) 跳到某个 地址</span></span><br><span class="line">      <span class="title function_">next</span>(<span class="string">&quot;/&quot;</span>); <span class="comment">// 跳到主页</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// 要判断是不是已经获取过资料了</span></span><br><span class="line">      <span class="keyword">if</span> (!store.<span class="property">getters</span>.<span class="property">userId</span>) &#123;</span><br><span class="line">        <span class="comment">// 如果id不存在 意味着当前没有用户资料 就要去获取用户资料</span></span><br><span class="line">        <span class="comment">// vuex的action是一个promise</span></span><br><span class="line">        <span class="keyword">const</span> &#123; roles &#125; = <span class="keyword">await</span> store.<span class="title function_">dispatch</span>(<span class="string">&quot;user/getUserInfo&quot;</span>);</span><br><span class="line">        <span class="comment">// 此时已经获取完资料</span></span><br><span class="line">        <span class="keyword">const</span> routes = <span class="keyword">await</span> store.<span class="title function_">dispatch</span>(</span><br><span class="line">          <span class="string">&quot;permission/filterRoutes&quot;</span>,</span><br><span class="line">          roles.<span class="property">menus</span></span><br><span class="line">        );</span><br><span class="line">        <span class="comment">// 此时得到的routes是当前用户的所拥有的的动态路由的权限</span></span><br><span class="line">        router.<span class="title function_">addRoutes</span>([</span><br><span class="line">          ...routes,</span><br><span class="line">          &#123; <span class="attr">path</span>: <span class="string">&quot;*&quot;</span>, <span class="attr">redirect</span>: <span class="string">&quot;/404&quot;</span>, <span class="attr">hidden</span>: <span class="literal">true</span> &#125;,</span><br><span class="line">        ]); <span class="comment">// 将当前动态路由加到当前路由规则上</span></span><br><span class="line">        <span class="comment">// 加await的意思是 强制等待获取完用户资料之后 才去放行  就能保证 用户进到页面时候 有资料</span></span><br><span class="line">        <span class="comment">// 添加完路由之后 不能用next()  要用next(to.path) 否则地址不能生效 这算是一个已知 的小缺陷</span></span><br><span class="line">        <span class="comment">// 执行完addRoutes 必须执行next(to.path) 不能执行 next() 这是一个已知的问题缺陷</span></span><br><span class="line">        <span class="title function_">next</span>(to.<span class="property">path</span>); <span class="comment">// 解决直接执行next()时的异常</span></span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="title function_">next</span>(); <span class="comment">// 放行</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (whileList.<span class="title function_">indexOf</span>(to.<span class="property">path</span>) &gt; -<span class="number">1</span>) &#123;</span><br><span class="line">      <span class="comment">// 表示在白名单里面</span></span><br><span class="line">      <span class="title function_">next</span>();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="title function_">next</span>(<span class="string">&quot;/login&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title class_">NProgress</span>.<span class="title function_">done</span>(); <span class="comment">// 是为了解决手动输入地址时 进度条不关闭的问题</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 后置守卫</span></span><br><span class="line">router.<span class="title function_">afterEach</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="title class_">NProgress</span>.<span class="title function_">done</span>();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h3 id="4、侧边栏"><a href="#4、侧边栏" class="headerlink" title="4、侧边栏"></a>4、侧边栏</h3><p>&#x2F;src&#x2F;layout&#x2F;components&#x2F;Siderbar&#x2F;index.vue</p>
<p>最终侧边栏组件根据 store 中的用户路由模块，渲染出用户可以访问的菜单</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div :class=&quot;&#123; &#x27;has-logo&#x27;: showLogo &#125;&quot;&gt;</span><br><span class="line">    &lt;logo v-if=&quot;showLogo&quot; :collapse=&quot;isCollapse&quot; /&gt;</span><br><span class="line">    &lt;el-scrollbar wrap-class=&quot;scrollbar-wrapper&quot;&gt;</span><br><span class="line">      &lt;el-menu</span><br><span class="line">        :default-active=&quot;activeMenu&quot;</span><br><span class="line">        :collapse=&quot;isCollapse&quot;</span><br><span class="line">        :background-color=&quot;variables.menuBg&quot;</span><br><span class="line">        :text-color=&quot;variables.menuText&quot;</span><br><span class="line">        :unique-opened=&quot;false&quot;</span><br><span class="line">        :active-text-color=&quot;variables.menuActiveText&quot;</span><br><span class="line">        :collapse-transition=&quot;false&quot;</span><br><span class="line">        mode=&quot;vertical&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;sidebar-item</span><br><span class="line">          v-for=&quot;route in routes&quot;</span><br><span class="line">          :key=&quot;route.path&quot;</span><br><span class="line">          :item=&quot;route&quot;</span><br><span class="line">          :base-path=&quot;route.path&quot;</span><br><span class="line">        /&gt;</span><br><span class="line">      &lt;/el-menu&gt;</span><br><span class="line">    &lt;/el-scrollbar&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#123; mapGetters &#125; from &quot;vuex&quot;;</span><br><span class="line">import Logo from &quot;./Logo&quot;;</span><br><span class="line">import SidebarItem from &quot;./SidebarItem&quot;;</span><br><span class="line">import variables from &quot;@/styles/variables.scss&quot;;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  components: &#123; SidebarItem, Logo &#125;,</span><br><span class="line">  computed: &#123;</span><br><span class="line">    ...mapGetters([&quot;sidebar&quot;, &quot;routes&quot;]),</span><br><span class="line">    // 路由 addRoutes之后 不会响应式的更新的组件</span><br><span class="line">    // 默认静态路由 5条  +  addRoutes(6条) = 11条</span><br><span class="line">    // routes() &#123;</span><br><span class="line">    //   return this.$router.options.routes</span><br><span class="line">    // &#125;,</span><br><span class="line">    activeMenu() &#123;</span><br><span class="line">      const route = this.$route;</span><br><span class="line">      const &#123; meta, path &#125; = route;</span><br><span class="line">      // if set path, the sidebar will highlight the path you set</span><br><span class="line">      if (meta.activeMenu) &#123;</span><br><span class="line">        return meta.activeMenu;</span><br><span class="line">      &#125;</span><br><span class="line">      return path;</span><br><span class="line">    &#125;,</span><br><span class="line">    showLogo() &#123;</span><br><span class="line">      return this.$store.state.settings.sidebarLogo;</span><br><span class="line">    &#125;,</span><br><span class="line">    variables() &#123;</span><br><span class="line">      return variables;</span><br><span class="line">    &#125;,</span><br><span class="line">    isCollapse() &#123;</span><br><span class="line">      return !this.sidebar.opened;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title>axios二次封装</title>
    <url>/2022/12/13/axios%E4%BA%8C%E6%AC%A1%E5%B0%81%E8%A3%85/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>axios 作为网络请求的第三方工具, 可以进行请求和响应的拦截</p>
<p>一般我们可以在请求拦截器中处理 token 的统一注入问题、token 超时拦截问题。响应拦截器则主要处理数据结构和数据异常</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&quot;axios&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Message</span> &#125; <span class="keyword">from</span> <span class="string">&quot;element-ui&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; getTimeStamp &#125; <span class="keyword">from</span> <span class="string">&quot;@/utils/auth&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">&quot;@/store&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&quot;@/router&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">TimeOut</span> = <span class="number">5400</span>; <span class="comment">// 定义超时时间</span></span><br><span class="line"><span class="keyword">const</span> service = axios.<span class="title function_">create</span>(&#123;</span><br><span class="line">  <span class="comment">//    设置基础地址</span></span><br><span class="line">  <span class="comment">// 环境变量 npm run dev  /api   /生产环境 npm run build  /prod-api</span></span><br><span class="line">  <span class="attr">baseURL</span>: process.<span class="property">env</span>.<span class="property">VUE_APP_BASE_API</span>,</span><br><span class="line">  <span class="attr">timeout</span>: <span class="number">5000</span>, <span class="comment">// 认为只要超过5秒钟不响应 就超时</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 请求拦截器</span></span><br><span class="line">service.<span class="property">interceptors</span>.<span class="property">request</span>.<span class="title function_">use</span>(</span><br><span class="line">  <span class="keyword">async</span> (config) =&gt; &#123;</span><br><span class="line">    <span class="comment">// 请求接口  config是请求配置</span></span><br><span class="line">    <span class="comment">// 取token</span></span><br><span class="line">    <span class="keyword">if</span> (store.<span class="property">getters</span>.<span class="property">token</span>) &#123;</span><br><span class="line">      <span class="comment">// 只要有token 就要检查token时效性</span></span><br><span class="line">      <span class="keyword">if</span> (<span class="title class_">CheckIsTimeOut</span>()) &#123;</span><br><span class="line">        <span class="comment">//  继续？</span></span><br><span class="line">        <span class="keyword">await</span> store.<span class="title function_">dispatch</span>(<span class="string">&quot;user/lgout&quot;</span>);</span><br><span class="line">        router.<span class="title function_">push</span>(<span class="string">&quot;/login&quot;</span>); <span class="comment">// 跳到登录</span></span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&quot;您的token已经失效&quot;</span>));</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 如果存在token</span></span><br><span class="line">      config.<span class="property">headers</span>.<span class="property">Authorization</span> = <span class="string">`Bearer <span class="subst">$&#123;store.getters.token&#125;</span>`</span>;</span><br><span class="line">      <span class="comment">// return config</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 这里一定要注意</span></span><br><span class="line">    <span class="comment">// 一定要return config</span></span><br><span class="line">    <span class="keyword">return</span> config;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error);</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br><span class="line"><span class="comment">// 响应拦截器</span></span><br><span class="line">service.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(</span><br><span class="line">  <span class="function">(<span class="params">response</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 成功执行</span></span><br><span class="line">    <span class="comment">// axios默认加了一层data的包裹</span></span><br><span class="line">    <span class="keyword">const</span> &#123; success, message, data &#125; = response.<span class="property">data</span>;</span><br><span class="line">    <span class="keyword">if</span> (success) &#123;</span><br><span class="line">      <span class="comment">// 此时认为业务执行成功了</span></span><br><span class="line">      <span class="keyword">return</span> data; <span class="comment">// 返回用户所需要的数据</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// 当业务失败的时候</span></span><br><span class="line">      <span class="title class_">Message</span>.<span class="title function_">error</span>(message); <span class="comment">// 提示消息</span></span><br><span class="line">      <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(message));</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="keyword">async</span> (error) =&gt; &#123;</span><br><span class="line">    <span class="comment">// error 有response对象 config</span></span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">      error.<span class="property">response</span> &amp;&amp;</span><br><span class="line">      error.<span class="property">response</span>.<span class="property">data</span> &amp;&amp;</span><br><span class="line">      error.<span class="property">response</span>.<span class="property">data</span>.<span class="property">code</span> === <span class="number">10002</span></span><br><span class="line">    ) &#123;</span><br><span class="line">      <span class="comment">// 后端告诉前端token超时了</span></span><br><span class="line">      <span class="keyword">await</span> store.<span class="title function_">dispatch</span>(<span class="string">&quot;user/lgout&quot;</span>); <span class="comment">// 调用登出action</span></span><br><span class="line">      router.<span class="title function_">push</span>(<span class="string">&quot;/login&quot;</span>); <span class="comment">// 跳到登录页</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 失败</span></span><br><span class="line">    <span class="comment">// Message等同于 this.$message</span></span><br><span class="line">    <span class="title class_">Message</span>.<span class="title function_">error</span>(error.<span class="property">message</span>); <span class="comment">// 提示错误</span></span><br><span class="line">    <span class="comment">// reject</span></span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error); <span class="comment">// 传入一个错误的对象  就认为promise执行链 进入了catch</span></span><br><span class="line">  &#125;</span><br><span class="line">);</span><br><span class="line"><span class="comment">// 检查token是否过期</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">CheckIsTimeOut</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 当前时间  - 存储的时间戳 &gt; 时效性  false   tr</span></span><br><span class="line">  <span class="keyword">return</span> (<span class="title class_">Date</span>.<span class="title function_">now</span>() - <span class="title function_">getTimeStamp</span>()) / <span class="number">1000</span> &gt; <span class="title class_">TimeOut</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> service;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title>组件、自定义指令和自定义过滤器的注册</title>
    <url>/2022/12/11/%E7%BB%84%E4%BB%B6%E3%80%81%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A4%E5%92%8C%E8%87%AA%E5%AE%9A%E4%B9%89%E8%BF%87%E6%BB%A4%E5%99%A8%E7%9A%84%E6%B3%A8%E5%86%8C/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="一、组件的注册"><a href="#一、组件的注册" class="headerlink" title="一、组件的注册"></a>一、组件的注册</h2><h3 id="1、全局注册"><a href="#1、全局注册" class="headerlink" title="1、全局注册"></a>1、全局注册</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">DemoComponent</span> <span class="keyword">from</span> <span class="string">&quot;@/components/Democomponent&quot;</span>;</span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">component</span>(<span class="string">&quot;my-component-name&quot;</span>, <span class="title class_">DemoComponent</span>);</span><br></pre></td></tr></table></figure>

<p>第一个参数是组件名，第二个参数是导入的组件对象实例</p>
<p>定义组件名有两种方式</p>
<p>第一种使用短横线分隔命名。字母全小写，就像上面的例子一样。但是使用这种方式命名，在引用这个自定义元素时也必须使用使用短横线分隔命名，字母全小写的方式，就像这样 <code>&lt;my-component-name&gt;</code>。</p>
<p>第二种使用大驼峰命名 (首字母大写命名) 。这种方式，在引用这个自定义元素时两种命名法都可以使用。也就是说 <code>&lt;my-component-name&gt;</code> 和 <code>&lt;MyComponentName&gt;</code> 都是可接受的。注意，尽管如此，直接在 DOM (即非字符串的模板) 中使用时只有第一种方式是有效的。</p>
<p><strong><em>给予组件的名字可能依赖于打算拿它来做什么。当直接在 DOM 中使用一个组件 (而不是在字符串模板或<a href="https://v2.cn.vuejs.org/v2/guide/single-file-components.html">单文件组件</a>) 的时候，vue 官方强烈推荐遵循 <a href="https://html.spec.whatwg.org/multipage/custom-elements.html#valid-custom-element-name">W3C 规范</a>中的自定义组件名 (字母全小写且必须包含一个连字符)。这会帮助你避免和当前以及未来的 HTML 元素相冲突。</em></strong></p>
<h3 id="2、局部注册"><a href="#2、局部注册" class="headerlink" title="2、局部注册"></a>2、局部注册</h3><p>局部注册只需在组件中配置一个 components 配置项即可</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import DemoComponent from &#x27;./Democomponent&#x27; export default &#123; components: &#123;</span><br><span class="line">DemoComponent &#125; &#125;</span><br></pre></td></tr></table></figure>

<h3 id="3、批量全局注册"><a href="#3、批量全局注册" class="headerlink" title="3、批量全局注册"></a>3、批量全局注册</h3><p>如果有大量的通用组件需要全局注册，那么我们的 main.js 文件很可能会变成这样</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">DemoComponentA</span> <span class="keyword">from</span> <span class="string">&quot;@/components/DemocomponentA&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">DemoComponentB</span> <span class="keyword">from</span> <span class="string">&quot;@/components/DemocomponentB&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">DemoComponentC</span> <span class="keyword">from</span> <span class="string">&quot;@/components/DemocomponentC&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">DemoComponentD</span> <span class="keyword">from</span> <span class="string">&quot;@/components/DemocomponentD&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">DemoComponentE</span> <span class="keyword">from</span> <span class="string">&quot;@/components/DemocomponentE&quot;</span>;</span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">component</span>(<span class="string">&quot;my-component-nameA&quot;</span>, <span class="title class_">DemoComponentA</span>);</span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">component</span>(<span class="string">&quot;my-component-nameB&quot;</span>, <span class="title class_">DemoComponentB</span>);</span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">component</span>(<span class="string">&quot;my-component-nameC&quot;</span>, <span class="title class_">DemoComponentC</span>);</span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">component</span>(<span class="string">&quot;my-component-nameD&quot;</span>, <span class="title class_">DemoComponentD</span>);</span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">component</span>(<span class="string">&quot;my-component-nameE&quot;</span>, <span class="title class_">DemoComponentE</span>);</span><br></pre></td></tr></table></figure>

<p>为了保持 main.js 文件的简洁，我们可以将需要全局注册的通用组件统统放在一个单独的文件夹中，&#x2F;src&#x2F;components，在其中的 index.js 文件中将这些组件统一导入注册，再暴露出去交给 main.js 给 Vue 使用</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">PageTools</span> <span class="keyword">from</span> <span class="string">&quot;./PageTools&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">UploadExcel</span> <span class="keyword">from</span> <span class="string">&quot;./UploadExcel&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ImageUpload</span> <span class="keyword">from</span> <span class="string">&quot;./ImageUpload&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ScreenFull</span> <span class="keyword">from</span> <span class="string">&quot;./ScreenFull&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ThemePicker</span> <span class="keyword">from</span> <span class="string">&quot;./ThemePicker&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Lang</span> <span class="keyword">from</span> <span class="string">&quot;./Lang&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">TagsView</span> <span class="keyword">from</span> <span class="string">&quot;./TagsView&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="title function_">install</span>(<span class="params">Vue</span>) &#123;</span><br><span class="line">    <span class="title class_">Vue</span>.<span class="title function_">component</span>(<span class="string">&quot;PageTools&quot;</span>, <span class="title class_">PageTools</span>);</span><br><span class="line">    <span class="title class_">Vue</span>.<span class="title function_">component</span>(<span class="string">&quot;UploadExcel&quot;</span>, <span class="title class_">UploadExcel</span>);</span><br><span class="line">    <span class="title class_">Vue</span>.<span class="title function_">component</span>(<span class="string">&quot;ImageUpload&quot;</span>, <span class="title class_">ImageUpload</span>);</span><br><span class="line">    <span class="title class_">Vue</span>.<span class="title function_">component</span>(<span class="string">&quot;ScreenFull&quot;</span>, <span class="title class_">ScreenFull</span>);</span><br><span class="line">    <span class="title class_">Vue</span>.<span class="title function_">component</span>(<span class="string">&quot;ThemePicker&quot;</span>, <span class="title class_">ThemePicker</span>);</span><br><span class="line">    <span class="title class_">Vue</span>.<span class="title function_">component</span>(<span class="string">&quot;Lang&quot;</span>, <span class="title class_">Lang</span>);</span><br><span class="line">    <span class="title class_">Vue</span>.<span class="title function_">component</span>(<span class="string">&quot;TagsView&quot;</span>, <span class="title class_">TagsView</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Components</span> <span class="keyword">from</span> <span class="string">&quot;@/components&quot;</span>;</span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">Components</span>); <span class="comment">// 注册自己的自定义组件</span></span><br></pre></td></tr></table></figure>

<h2 id="二、自定义指令"><a href="#二、自定义指令" class="headerlink" title="二、自定义指令"></a>二、自定义指令</h2><h3 id="1、全局注册-1"><a href="#1、全局注册-1" class="headerlink" title="1、全局注册"></a>1、全局注册</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 注册一个全局自定义指令 `v-focus`</span><br><span class="line">Vue.directive(&#x27;focus&#x27;, &#123;</span><br><span class="line">  // 当被绑定的元素插入到 DOM 中时……</span><br><span class="line">  inserted: function (el) &#123;</span><br><span class="line">    // 聚焦元素</span><br><span class="line">    el.focus()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>第一个参数是指令名，注意这里不需要带 v-</p>
<p>第二个参数是一个配置项。可以提供如下几个钩子函数 (均为可选)：</p>
<ul>
<li><code>bind</code>：只调用一次，指令第一次绑定到元素时调用。在这里可以进行一次性的初始化设置。</li>
<li><code>inserted</code>：被绑定元素插入父节点时调用 (仅保证父节点存在，但不一定已被插入文档中)。</li>
<li><code>update</code>：所在组件的 VNode 更新时调用，<strong>但是可能发生在其子 VNode 更新之前</strong>。指令的值可能发生了改变，也可能没有。但是你可以通过比较更新前后的值来忽略不必要的模板更新 (详细的钩子函数参数见下)。</li>
<li><code>componentUpdated</code>：指令所在组件的 VNode <strong>及其子 VNode</strong> 全部更新后调用。</li>
<li><code>unbind</code>：只调用一次，指令与元素解绑时调用。</li>
</ul>
<p>指令钩子函数会被传入以下参数：</p>
<ul>
<li><code>el</code>：指令所绑定的元素，可以用来直接操作 DOM。</li>
<li><code>binding</code>：一个对象，包含以下 property：<ul>
<li><code>name</code>：指令名，不包括 <code>v-</code> 前缀。</li>
<li><code>value</code>：指令的绑定值，例如：<code>v-my-directive=&quot;1 + 1&quot;</code> 中，绑定值为 <code>2</code>。</li>
<li><code>oldValue</code>：指令绑定的前一个值，仅在 <code>update</code> 和 <code>componentUpdated</code> 钩子中可用。无论值是否改变都可用。</li>
<li><code>expression</code>：字符串形式的指令表达式。例如 <code>v-my-directive=&quot;1 + 1&quot;</code> 中，表达式为 <code>&quot;1 + 1&quot;</code>。</li>
<li><code>arg</code>：传给指令的参数，可选。例如 <code>v-my-directive:foo</code> 中，参数为 <code>&quot;foo&quot;</code>。</li>
<li><code>modifiers</code>：一个包含修饰符的对象。例如：<code>v-my-directive.foo.bar</code> 中，修饰符对象为 <code>&#123; foo: true, bar: true &#125;</code>。</li>
</ul>
</li>
<li><code>vnode</code>：Vue 编译生成的虚拟节点。</li>
<li><code>oldVnode</code>：上一个虚拟节点，仅在 <code>update</code> 和 <code>componentUpdated</code> 钩子中可用。</li>
</ul>
<p>注意，除了 <code>el</code> 之外，其它参数都应该是只读的，切勿进行修改。如果需要在钩子之间共享数据，建议通过元素的 <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/HTMLElement/dataset"><code>dataset</code></a> 来进行。</p>
<h3 id="2、局部注册-1"><a href="#2、局部注册-1" class="headerlink" title="2、局部注册"></a>2、局部注册</h3><p>同样局部注册，只需配置组件中的一个 directives 配置项即可</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export default &#123; directives: &#123; focus: &#123; // 指令的定义 inserted: function (el) &#123;</span><br><span class="line">el.focus() &#125; &#125; &#125; &#125;</span><br></pre></td></tr></table></figure>

<h3 id="3、批量全局注册-1"><a href="#3、批量全局注册-1" class="headerlink" title="3、批量全局注册"></a>3、批量全局注册</h3><p>同样如果有很多自定义指令需要全局注册，我们可以从 main.js 中分离出来单独处理。新建 src&#x2F;directives&#x2F;index.js</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 负责管理所有的自定义指令</span></span><br><span class="line"><span class="comment">// 只负责导出指令对象</span></span><br><span class="line"><span class="comment">// 变量名称就是指令名称</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> imageerror = &#123;</span><br><span class="line">  <span class="comment">// 指令内容</span></span><br><span class="line">  <span class="comment">// 指令作用在 图片上的 dom是图片对象</span></span><br><span class="line">  <span class="comment">// inserted 在Vue3中也改名 =&gt; mounted</span></span><br><span class="line">  <span class="title function_">inserted</span>(<span class="params">dom, options</span>) &#123;</span><br><span class="line">    <span class="comment">// inserted执行的之后 此时 并没有对 src赋值</span></span><br><span class="line">    <span class="comment">// 图片有地址 但是地址加载图片失败的时候 会执行一个函数  onerror</span></span><br><span class="line">    dom.<span class="property">src</span> = dom.<span class="property">src</span> || options.<span class="property">value</span>;</span><br><span class="line">    dom.<span class="property">onerror</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="comment">// 监听onerror事件</span></span><br><span class="line">      <span class="comment">// options.value就是指令传过来的值</span></span><br><span class="line">      dom.<span class="property">src</span> = options.<span class="property">value</span>; <span class="comment">// 当图片异常的时候 接收指令传过来的值 让这个值作为头像的备选</span></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">// 只有src有值 并且加载失败才会触发onerror</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 此钩子会在给image赋值之后执行</span></span><br><span class="line">  <span class="comment">// 这个钩子函数在Vue3中改名了 =&gt; updated</span></span><br><span class="line">  <span class="title function_">componentUpdated</span>(<span class="params">dom, options</span>) &#123;</span><br><span class="line">    dom.<span class="property">src</span> = dom.<span class="property">src</span> || options.<span class="property">value</span>;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>再在 main.js 中批量注册即可</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> directives <span class="keyword">from</span> <span class="string">&quot;@/directives&quot;</span>;</span><br><span class="line"><span class="comment">// directives是所有指令的一个集合</span></span><br><span class="line"><span class="title class_">Object</span>.<span class="title function_">keys</span>(directives).<span class="title function_">forEach</span>(<span class="function">(<span class="params">key</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// key就是指令名称</span></span><br><span class="line">  <span class="title class_">Vue</span>.<span class="title function_">directive</span>(key, directives[key]);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h2 id="三、过滤器"><a href="#三、过滤器" class="headerlink" title="三、过滤器"></a>三、过滤器</h2><h3 id="1、全局注册-2"><a href="#1、全局注册-2" class="headerlink" title="1、全局注册"></a>1、全局注册</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title class_">Vue</span>.<span class="title function_">filter</span>(<span class="string">&quot;capitalize&quot;</span>, <span class="keyword">function</span> (<span class="params">value</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (!value) <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">  value = value.<span class="title function_">toString</span>();</span><br><span class="line">  <span class="keyword">return</span> value.<span class="title function_">charAt</span>(<span class="number">0</span>).<span class="title function_">toUpperCase</span>() + value.<span class="title function_">slice</span>(<span class="number">1</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>第一个参数是过滤器的名称，第二个参数是一个函数，通常是一些处理文本格式化的操作。</p>
<h3 id="2、局部注册-2"><a href="#2、局部注册-2" class="headerlink" title="2、局部注册"></a>2、局部注册</h3><p>同样局部注册，只需配置组件中的一个 filters 配置项即可</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export default &#123; filters: &#123; capitalize: function (value) &#123; if (!value) return &#x27;&#x27;</span><br><span class="line">value = value.toString() return value.charAt(0).toUpperCase() + value.slice(1) &#125;</span><br><span class="line">&#125; &#125;</span><br></pre></td></tr></table></figure>

<p>使用时放在 JavaScript 表达式的尾部，由“管道”符号指示即可</p>
<h3 id="3、全局批量注册"><a href="#3、全局批量注册" class="headerlink" title="3、全局批量注册"></a>3、全局批量注册</h3><p>同样如果有很多过滤器需要全局注册，我们可以从 main.js 中分离出来单独处理。新建 src&#x2F;filters&#x2F;index.js</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">pluralize</span>(<span class="params">time, label</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (time === <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> time + label;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> time + label + <span class="string">&quot;s&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">timeAgo</span>(<span class="params">time</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> between = <span class="title class_">Date</span>.<span class="title function_">now</span>() / <span class="number">1000</span> - <span class="title class_">Number</span>(time);</span><br><span class="line">  <span class="keyword">if</span> (between &lt; <span class="number">3600</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">pluralize</span>(~~(between / <span class="number">60</span>), <span class="string">&quot; minute&quot;</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (between &lt; <span class="number">86400</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">pluralize</span>(~~(between / <span class="number">3600</span>), <span class="string">&quot; hour&quot;</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">pluralize</span>(~~(between / <span class="number">86400</span>), <span class="string">&quot; day&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">numberFormatter</span>(<span class="params">num, digits</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> si = [</span><br><span class="line">    &#123; <span class="attr">value</span>: <span class="number">1e18</span>, <span class="attr">symbol</span>: <span class="string">&quot;E&quot;</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">value</span>: <span class="number">1e15</span>, <span class="attr">symbol</span>: <span class="string">&quot;P&quot;</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">value</span>: <span class="number">1e12</span>, <span class="attr">symbol</span>: <span class="string">&quot;T&quot;</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">value</span>: <span class="number">1e9</span>, <span class="attr">symbol</span>: <span class="string">&quot;G&quot;</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">value</span>: <span class="number">1e6</span>, <span class="attr">symbol</span>: <span class="string">&quot;M&quot;</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">value</span>: <span class="number">1e3</span>, <span class="attr">symbol</span>: <span class="string">&quot;k&quot;</span> &#125;,</span><br><span class="line">  ];</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; si.<span class="property">length</span>; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (num &gt;= si[i].<span class="property">value</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> (</span><br><span class="line">        (num / si[i].<span class="property">value</span>)</span><br><span class="line">          .<span class="title function_">toFixed</span>(digits)</span><br><span class="line">          .<span class="title function_">replace</span>(<span class="regexp">/\.0+$|(\.[0-9]*[1-9])0+$/</span>, <span class="string">&quot;$1&quot;</span>) + si[i].<span class="property">symbol</span></span><br><span class="line">      );</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> num.<span class="title function_">toString</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在 main.js 中批量注册</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> filters <span class="keyword">from</span> <span class="string">&quot;@/filters&quot;</span>;</span><br><span class="line"><span class="title class_">Object</span>.<span class="title function_">keys</span>(filters).<span class="title function_">forEach</span>(<span class="function">(<span class="params">key</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="title class_">Vue</span>.<span class="title function_">filter</span>(key, filters[key]);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title>小兔鲜电商项目练手</title>
    <url>/2022/12/05/%E5%B0%8F%E5%85%94%E9%B2%9C%E7%94%B5%E5%95%86%E9%A1%B9%E7%9B%AE%E7%BB%83%E6%89%8B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>vue 学习推荐去看 vue 官方文档<a href="https://cn.vuejs.org/">https://cn.vuejs.org/</a></p>
<p>视频学习推荐张天禹老师<a href="https://www.bilibili.com/video/BV1Zy4y1K7SH/?spm_id_from=333.337.search-card.all.click">https://www.bilibili.com/video/BV1Zy4y1K7SH/?spm_id_from=333.337.search-card.all.click</a></p>
<h2 id="一、项目简介"><a href="#一、项目简介" class="headerlink" title="一、项目简介"></a>一、项目简介</h2><p>这是一个 B2C 电商平台类项目</p>
<h3 id="1、功能模块"><a href="#1、功能模块" class="headerlink" title="1、功能模块"></a>1、功能模块</h3><p>首页模块：顶部通栏，吸顶导航，网站头部，左侧分类，轮播图，新鲜好物，人气推荐，热门品牌，分类商品推荐，专题推荐，网站底部</p>
<ul>
<li>一级分类：面包屑，轮播图，全部二级分类，二级分类推荐商品</li>
<li>二级分类：筛选区域，排序功能，商品列表，无限加载。</li>
<li>商品详情：商品图片展示，基本信息展示，配送城市选择，SKU 选择，库存选择，商品详情展示，商品评价展示，24 小时热销，相关专题，加入购物车</li>
<li>购物车：头部购物车：展示商品数量和列表，删除商品，跳转购物车页面。购物车页面：购物车商品展示，选择商品，修改数量，修改商品规格，价格计算，跳转下单</li>
<li>登录模块：表单校验，账户密码登录</li>
<li>订单模块：订单商品展示，收货地址选择，收货地址新增，支付方式选择，生成订单</li>
<li>支付模块：订单信息展示，跳转支付网关，提示正在支付，等待支付结果，跳转支付成功页面。</li>
<li>个人中心：中心首页：展示个人信息，近期收藏商品，近期足迹，猜你喜欢 订单管理：全部订单，待付款，待发货，待收货，待评价，已完成，已取消。立即付款，取消订单，确认收货，删除订单，查看物流。订单详情：订单状态，订单进度，详细信息。</li>
</ul>
<h3 id="2、技术栈"><a href="#2、技术栈" class="headerlink" title="2、技术栈"></a>2、技术栈</h3><ul>
<li>vue3.x （组合式 API）</li>
<li>vite（构件工具）</li>
<li>axios（请求接口）</li>
<li>vue-router (单页路由)</li>
<li>pinia（状态管理）</li>
<li>element-plus（适用 vue3 的 UI 组件库）</li>
<li>@vueuse&#x2F;core（vue 组合式 API 的工具库）</li>
</ul>
<h2 id="二、项目初始化"><a href="#二、项目初始化" class="headerlink" title="二、项目初始化"></a>二、项目初始化</h2><h3 id="1、创建项目"><a href="#1、创建项目" class="headerlink" title="1、创建项目"></a>1、创建项目</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm init vue@latest</span><br></pre></td></tr></table></figure>

<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230601085910553.png" alt="image-20230601085910553"></p>
<h3 id="2、jsconfig-json-配置别名路径"><a href="#2、jsconfig-json-配置别名路径" class="headerlink" title="2、jsconfig.json 配置别名路径"></a>2、jsconfig.json 配置别名路径</h3><p>配置别名路径可以在写代码时联想提示路径</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="comment">// jsconfig.json文件中    @别名联想提示</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;compilerOptions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;baseUrl&quot;</span><span class="punctuation">:</span> <span class="string">&quot;./&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;paths&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;@/*&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;src/*&quot;</span><span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<p><em>这里需要注意的是，这个配置只是让我们在写代码，输入@时有一个路径联想提示的功能。真正实现 src 转化为@功能的是 vite.config.js 中的如下配置</em></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// ...省略其他代码</span></span><br><span class="line"><span class="comment">// @别名设置</span></span><br><span class="line">  <span class="attr">resolve</span>: &#123;</span><br><span class="line">    <span class="attr">alias</span>: &#123;</span><br><span class="line">      <span class="string">&#x27;@&#x27;</span>: <span class="title function_">fileURLToPath</span>(<span class="keyword">new</span> <span class="title function_">URL</span>(<span class="string">&#x27;./src&#x27;</span>, <span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">url</span>))</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<h3 id="3、ElementPlus-自动按需导入"><a href="#3、ElementPlus-自动按需导入" class="headerlink" title="3、ElementPlus 自动按需导入"></a>3、ElementPlus 自动按需导入</h3><p>此处可以参考 ElementPlus 官网教程配置自动按需导入，并定制主题。最终配置的 vite.config.js 如下</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; fileURLToPath, <span class="variable constant_">URL</span> &#125; <span class="keyword">from</span> <span class="string">&quot;node:url&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; defineConfig &#125; <span class="keyword">from</span> <span class="string">&quot;vite&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> vue <span class="keyword">from</span> <span class="string">&quot;@vitejs/plugin-vue&quot;</span>;</span><br><span class="line"><span class="comment">// 配置elementui自动按需导入</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">AutoImport</span> <span class="keyword">from</span> <span class="string">&quot;unplugin-auto-import/vite&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Components</span> <span class="keyword">from</span> <span class="string">&quot;unplugin-vue-components/vite&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ElementPlusResolver</span> &#125; <span class="keyword">from</span> <span class="string">&quot;unplugin-vue-components/resolvers&quot;</span>;</span><br><span class="line"><span class="comment">// 导入对应包</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ElementPlus</span> <span class="keyword">from</span> <span class="string">&quot;unplugin-element-plus/vite&quot;</span>;</span><br><span class="line"><span class="comment">// https://vitejs.dev/config/</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="title function_">vue</span>(),</span><br><span class="line">    <span class="title class_">AutoImport</span>(&#123;</span><br><span class="line">      <span class="attr">resolvers</span>: [<span class="title class_">ElementPlusResolver</span>()],</span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="title class_">Components</span>(&#123;</span><br><span class="line">      <span class="attr">resolvers</span>: [<span class="title class_">ElementPlusResolver</span>(&#123; <span class="attr">importStyle</span>: <span class="string">&quot;sass&quot;</span> &#125;)],</span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="comment">// 按需定制主题配置</span></span><br><span class="line">    <span class="title class_">ElementPlus</span>(&#123;</span><br><span class="line">      <span class="attr">useSource</span>: <span class="literal">true</span>,</span><br><span class="line">    &#125;),</span><br><span class="line">  ],</span><br><span class="line">  <span class="comment">// @别名设置</span></span><br><span class="line">  <span class="attr">resolve</span>: &#123;</span><br><span class="line">    <span class="attr">alias</span>: &#123;</span><br><span class="line">      <span class="string">&quot;@&quot;</span>: <span class="title function_">fileURLToPath</span>(<span class="keyword">new</span> <span class="title function_">URL</span>(<span class="string">&quot;./src&quot;</span>, <span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">url</span>)),</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">css</span>: &#123;</span><br><span class="line">    <span class="attr">preprocessorOptions</span>: &#123;</span><br><span class="line">      <span class="comment">//按需导入自定义主题和自动导入scss变量</span></span><br><span class="line">      <span class="attr">scss</span>: &#123;</span><br><span class="line">        <span class="attr">additionalData</span>: <span class="string">`@use &quot;@/styles/element/index.scss&quot; as *;</span></span><br><span class="line"><span class="string">        @use &quot;@/styles/var.scss&quot; as *;`</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>按照官网教程在 src&#x2F;styles 下新建 element&#x2F;index.scss 定制化的主题样式文件</p>
<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 只需要重写你需要的即可 */</span></span><br><span class="line"><span class="keyword">@forward</span> <span class="string">&quot;element-plus/theme-chalk/src/common/var.scss&quot;</span> with (</span><br><span class="line">  <span class="variable">$colors</span>: (</span><br><span class="line">    <span class="string">&quot;primary&quot;</span>: (</span><br><span class="line">      // 主色</span><br><span class="line">      <span class="string">&quot;base&quot;</span>: <span class="number">#27ba9b</span>,</span><br><span class="line">    ),</span><br><span class="line">    <span class="string">&quot;success&quot;</span>: (</span><br><span class="line">      // 成功色</span><br><span class="line">      <span class="string">&quot;base&quot;</span>: <span class="number">#1dc779</span>,</span><br><span class="line">    ),</span><br><span class="line">    <span class="string">&quot;warning&quot;</span>: (</span><br><span class="line">      // 警告色</span><br><span class="line">      <span class="string">&quot;base&quot;</span>: <span class="number">#ffb302</span>,</span><br><span class="line">    ),</span><br><span class="line">    <span class="string">&quot;danger&quot;</span>: (</span><br><span class="line">      // 危险色</span><br><span class="line">      <span class="string">&quot;base&quot;</span>: <span class="number">#e26237</span>,</span><br><span class="line">    ),</span><br><span class="line">    <span class="string">&quot;error&quot;</span>: (</span><br><span class="line">      // 错误色</span><br><span class="line">      <span class="string">&quot;base&quot;</span>: <span class="number">#cf4444</span>,</span><br><span class="line">    ),</span><br><span class="line">  )</span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<h3 id="4、axios"><a href="#4、axios" class="headerlink" title="4、axios"></a>4、axios</h3><p>utils 下新建 request.js</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&quot;axios&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建axios实例</span></span><br><span class="line"><span class="keyword">const</span> request = axios.<span class="title function_">create</span>(&#123;</span><br><span class="line">  <span class="attr">baseURL</span>: <span class="string">&quot;http://pcapi-xiaotuxian-front-devtest.itheima.net&quot;</span>,</span><br><span class="line">  <span class="attr">timeout</span>: <span class="number">5000</span>,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// axios请求拦截器</span></span><br><span class="line">request.<span class="property">interceptors</span>.<span class="property">request</span>.<span class="title function_">use</span>(</span><br><span class="line">  <span class="function">(<span class="params">config</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> config;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function">(<span class="params">e</span>) =&gt;</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(e)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">// axios响应式拦截器</span></span><br><span class="line">request.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(</span><br><span class="line">  <span class="function">(<span class="params">res</span>) =&gt;</span> res.<span class="property">data</span>,</span><br><span class="line">  <span class="function">(<span class="params">e</span>) =&gt;</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(e)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> request;</span><br></pre></td></tr></table></figure>

<p>src 下新建 api 文件夹，之后我们的所有接口将按模块集中管理在这个文件夹下</p>
<h3 id="5、路由"><a href="#5、路由" class="headerlink" title="5、路由"></a>5、路由</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// router/index.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; createRouter, createWebHistory &#125; <span class="keyword">from</span> <span class="string">&quot;vue-router&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">history</span>: <span class="title function_">createWebHistory</span>(<span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">env</span>.<span class="property">BASE_URL</span>),</span><br><span class="line">  <span class="comment">// history: createWebHistory(&#x27;/#&#x27;),</span></span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/&quot;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;layout&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/layout/index.vue&quot;</span>),</span><br><span class="line">      <span class="attr">children</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;home&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/layout/components/home/index.vue&quot;</span>),</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;category/sub/:id&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;sub-category&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span></span><br><span class="line">            <span class="keyword">import</span>(<span class="string">&quot;@/views/layout/components/sub-category/index.vue&quot;</span>),</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;category/:id&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;category&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span></span><br><span class="line">            <span class="keyword">import</span>(<span class="string">&quot;@/views/layout/components/category/index.vue&quot;</span>),</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;goodsInfo/:id&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;goodsInfo&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span></span><br><span class="line">            <span class="keyword">import</span>(<span class="string">&quot;@/views/layout/components/goodsInfo/index.vue&quot;</span>),</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;cartList&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;cartList&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/layout/components/cartList.vue&quot;</span>),</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;orders&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;orders&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/layout/components/orders/index.vue&quot;</span>),</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;payPage/:id&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;payPage&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span></span><br><span class="line">            <span class="keyword">import</span>(<span class="string">&quot;@/views/layout/components/payPage/index.vue&quot;</span>),</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;paycallback&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;paycallback&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span></span><br><span class="line">            <span class="keyword">import</span>(<span class="string">&quot;@/views/layout/components/payPage/paycallback.vue&quot;</span>),</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">path</span>: <span class="string">&quot;VIP&quot;</span>,</span><br><span class="line">          <span class="attr">name</span>: <span class="string">&quot;VIP&quot;</span>,</span><br><span class="line">          <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/layout/components/VIP/index.vue&quot;</span>),</span><br><span class="line">          <span class="attr">children</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="attr">path</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">              <span class="attr">name</span>: <span class="string">&quot;userInfo&quot;</span>,</span><br><span class="line">              <span class="attr">component</span>: <span class="function">() =&gt;</span></span><br><span class="line">                <span class="keyword">import</span>(<span class="string">&quot;@/views/layout/components/VIP/userInfo.vue&quot;</span>),</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="attr">path</span>: <span class="string">&quot;myOrders&quot;</span>,</span><br><span class="line">              <span class="attr">name</span>: <span class="string">&quot;myOrders&quot;</span>,</span><br><span class="line">              <span class="attr">component</span>: <span class="function">() =&gt;</span></span><br><span class="line">                <span class="keyword">import</span>(<span class="string">&quot;@/views/layout/components/VIP/myOrders.vue&quot;</span>),</span><br><span class="line">            &#125;,</span><br><span class="line">          ],</span><br><span class="line">        &#125;,</span><br><span class="line">      ],</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&quot;/login&quot;</span>,</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&quot;login&quot;</span>,</span><br><span class="line">      <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="keyword">import</span>(<span class="string">&quot;@/views/login/index.vue&quot;</span>),</span><br><span class="line">    &#125;,</span><br><span class="line">  ],</span><br><span class="line">  <span class="title function_">scrollBehavior</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 始终滚动到顶部</span></span><br><span class="line">    <span class="keyword">return</span> &#123; <span class="attr">top</span>: <span class="number">0</span> &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router;</span><br></pre></td></tr></table></figure>

<h3 id="6、静态资源引入"><a href="#6、静态资源引入" class="headerlink" title="6、静态资源引入"></a>6、静态资源引入</h3><p>样式资源 - 把 common.scss 文件放到 styles 目录下</p>
<p><em>之后不要忘了在 main.js 中导入</em></p>
<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">//  common.scss</span></span><br><span class="line"><span class="comment">// 重置样式</span></span><br><span class="line">* &#123;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">html</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">  <span class="attribute">min-width</span>: <span class="number">1240px</span>;</span><br><span class="line">  <span class="attribute">font</span>: <span class="number">1em</span>/<span class="number">1.4</span> <span class="string">&quot;Microsoft Yahei&quot;</span>, <span class="string">&quot;PingFang SC&quot;</span>, <span class="string">&quot;Avenir&quot;</span>, <span class="string">&quot;Segoe UI&quot;</span>, <span class="string">&quot;Hiragino Sans GB&quot;</span>,</span><br><span class="line">    <span class="string">&quot;STHeiti&quot;</span>, <span class="string">&quot;Microsoft Sans Serif&quot;</span>, <span class="string">&quot;WenQuanYi Micro Hei&quot;</span>, sans-serif;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">body</span>,</span><br><span class="line"><span class="selector-tag">ul</span>,</span><br><span class="line"><span class="selector-tag">h1</span>,</span><br><span class="line"><span class="selector-tag">h3</span>,</span><br><span class="line"><span class="selector-tag">h4</span>,</span><br><span class="line"><span class="selector-tag">p</span>,</span><br><span class="line"><span class="selector-tag">dl</span>,</span><br><span class="line"><span class="selector-tag">dd</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">text-decoration</span>: none;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">  <span class="attribute">outline</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">i</span> &#123;</span><br><span class="line">  <span class="attribute">font-style</span>: normal;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[type=<span class="string">&quot;text&quot;</span>]</span>,</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[type=<span class="string">&quot;search&quot;</span>]</span>,</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[type=<span class="string">&quot;password&quot;</span>]</span>,</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[type=<span class="string">&quot;checkbox&quot;</span>]</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">outline</span>: none;</span><br><span class="line">  <span class="attribute">border</span>: none;</span><br><span class="line">  -webkit-appearance: none;</span><br><span class="line">  &amp;<span class="selector-pseudo">::placeholder</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ccc</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">max-height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#ebebeb</span> <span class="built_in">url</span>(<span class="string">&quot;@/assets/images/200.png&quot;</span>) no-repeat center / contain;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">ul</span> &#123;</span><br><span class="line">  <span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#app</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#f5f5f5</span>;</span><br><span class="line">  user-select: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">1240px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.ellipsis</span> &#123;</span><br><span class="line">  <span class="attribute">white-space</span>: nowrap;</span><br><span class="line">  <span class="attribute">text-overflow</span>: ellipsis;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.ellipsis-2</span> &#123;</span><br><span class="line">  <span class="attribute">word-break</span>: break-all;</span><br><span class="line">  <span class="attribute">text-overflow</span>: ellipsis;</span><br><span class="line">  <span class="attribute">display</span>: -webkit-box;</span><br><span class="line">  -webkit-box-orient: vertical;</span><br><span class="line">  -webkit-line-clamp: <span class="number">2</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.fl</span> &#123;</span><br><span class="line">  <span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.fr</span> &#123;</span><br><span class="line">  <span class="attribute">float</span>: right;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">&quot;.&quot;</span>;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">visibility</span>: hidden;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">clear</span>: both;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// reset element</span></span><br><span class="line"><span class="selector-class">.el-breadcrumb__inner</span><span class="selector-class">.is-link</span> &#123;</span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">400</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>scss 变量</p>
<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="comment">//  styles/var.scss</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$xtxColor</span>: <span class="number">#27ba9b</span>;</span><br><span class="line"><span class="variable">$helpColor</span>: <span class="number">#e26237</span>;</span><br><span class="line"><span class="variable">$sucColor</span>: <span class="number">#1dc779</span>;</span><br><span class="line"><span class="variable">$warnColor</span>: <span class="number">#ffb302</span>;</span><br><span class="line"><span class="variable">$priceColor</span>: <span class="number">#cf4444</span>;</span><br></pre></td></tr></table></figure>

<h2 id="三、Layout-组件"><a href="#三、Layout-组件" class="headerlink" title="三、Layout 组件"></a>三、Layout 组件</h2><h3 id="1、总体架构"><a href="#1、总体架构" class="headerlink" title="1、总体架构"></a>1、总体架构</h3><p>本项目一级路由有 Login 组件、Layout 组件，当然还可以有 404 组件（我并没有做）</p>
<p>Layout 组件结构如下</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230601100747054.png" alt="image-20230601100747054"></p>
<p>因此，依次创建 4 个组件并导入到 Layout 组件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import Topnav from &quot;./components/topnav.vue&quot;;</span><br><span class="line">import Header from &quot;./components/header.vue&quot;;</span><br><span class="line">import Footer from &quot;./components/footer.vue&quot;;</span><br><span class="line">import HeaderSticky from &quot;./components/header-sticky.vue&quot;;</span><br><span class="line">import &#123; useScroll &#125; from &quot;@vueuse/core&quot;;</span><br><span class="line">import &#123; useCategoryStore &#125; from &quot;@/stores/category&quot;;</span><br><span class="line">const &#123; y &#125; = useScroll(window);</span><br><span class="line">const &#123; getCategory &#125; = useCategoryStore();</span><br><span class="line">getCategory();</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;!-- 顶部Nav栏 --&gt;</span><br><span class="line">  &lt;Topnav /&gt;</span><br><span class="line">  &lt;!-- 顶部导航栏 --&gt;</span><br><span class="line">  &lt;Header /&gt;</span><br><span class="line">  &lt;!-- 吸顶导航 --&gt;</span><br><span class="line">  &lt;HeaderSticky :y=&quot;y&quot; /&gt;</span><br><span class="line">  &lt;!-- 中间二级菜单 --&gt;</span><br><span class="line">  &lt;router-view&gt;&lt;/router-view&gt;</span><br><span class="line">  &lt;!-- 底部 --&gt;</span><br><span class="line">  &lt;Footer /&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&quot;scss&quot;&gt;&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p>其中的 Topnav 组件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; useUserInfoStore &#125; from &quot;@/stores/userInfo.js&quot;;</span><br><span class="line">import &#123; useRouter &#125; from &quot;vue-router&quot;;</span><br><span class="line">const router = useRouter();</span><br><span class="line">const &#123; userInfo, clearUserInfo &#125; = useUserInfoStore();</span><br><span class="line">// 确认退出</span><br><span class="line">const confirm = () =&gt; &#123;</span><br><span class="line">  clearUserInfo();</span><br><span class="line">  router.push(&quot;/login&quot;);</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;nav class=&quot;app-topnav&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">      &lt;ul&gt;</span><br><span class="line">        &lt;template v-if=&quot;userInfo.account&quot;&gt;</span><br><span class="line">          &lt;li&gt;</span><br><span class="line">            &lt;a href=&quot;javascript:;&quot;</span><br><span class="line">              &gt;&lt;i class=&quot;iconfont icon-user&quot;&gt;&lt;/i&gt;&#123;&#123; userInfo.account &#125;&#125;&lt;/a</span><br><span class="line">            &gt;</span><br><span class="line">          &lt;/li&gt;</span><br><span class="line">          &lt;li&gt;</span><br><span class="line">            &lt;el-popconfirm</span><br><span class="line">              title=&quot;确认退出吗?&quot;</span><br><span class="line">              confirm-button-text=&quot;确认&quot;</span><br><span class="line">              cancel-button-text=&quot;取消&quot;</span><br><span class="line">              @confirm=&quot;confirm&quot;</span><br><span class="line">            &gt;</span><br><span class="line">              &lt;template #reference&gt;</span><br><span class="line">                &lt;a href=&quot;javascript:;&quot;&gt;退出登录&lt;/a&gt;</span><br><span class="line">              &lt;/template&gt;</span><br><span class="line">            &lt;/el-popconfirm&gt;</span><br><span class="line">          &lt;/li&gt;</span><br><span class="line">          &lt;li&gt;&lt;a href=&quot;javascript:;&quot;&gt;我的订单&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">          &lt;li&gt;&lt;a href=&quot;/VIP&quot;&gt;会员中心&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">        &lt;/template&gt;</span><br><span class="line">        &lt;template v-else&gt;</span><br><span class="line">          &lt;li&gt;&lt;a href=&quot;/login&quot;&gt;请先登录&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">          &lt;li&gt;&lt;a href=&quot;javascript:;&quot;&gt;帮助中心&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">          &lt;li&gt;&lt;a href=&quot;javascript:;&quot;&gt;关于我们&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">        &lt;/template&gt;</span><br><span class="line">      &lt;/ul&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/nav&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class="line">.app-topnav &#123;</span><br><span class="line">  background: #333;</span><br><span class="line">  ul &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    height: 53px;</span><br><span class="line">    justify-content: flex-end;</span><br><span class="line">    align-items: center;</span><br><span class="line">    li &#123;</span><br><span class="line">      a &#123;</span><br><span class="line">        padding: 0 15px;</span><br><span class="line">        color: #cdcdcd;</span><br><span class="line">        line-height: 1;</span><br><span class="line">        display: inline-block;</span><br><span class="line"></span><br><span class="line">        i &#123;</span><br><span class="line">          font-size: 14px;</span><br><span class="line">          margin-right: 2px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &amp;:hover &#123;</span><br><span class="line">          color: $xtxColor;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      ~ li &#123;</span><br><span class="line">        a &#123;</span><br><span class="line">          border-left: 2px solid #666;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p>Header 组件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; toRefs &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123; useCategoryStore &#125; from &quot;@/stores/category&quot;;</span><br><span class="line">import HeadCart from &quot;./headCart.vue&quot;;</span><br><span class="line">const &#123; categoryList &#125; = toRefs(useCategoryStore());</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;header class=&quot;app-header&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">      &lt;h1 class=&quot;logo&quot;&gt;</span><br><span class="line">        &lt;RouterLink to=&quot;/&quot;&gt;小兔鲜&lt;/RouterLink&gt;</span><br><span class="line">      &lt;/h1&gt;</span><br><span class="line">      &lt;ul class=&quot;app-header-nav&quot;&gt;</span><br><span class="line">        &lt;li class=&quot;home&quot;&gt;</span><br><span class="line">          &lt;RouterLink to=&quot;/&quot;&gt;首页&lt;/RouterLink&gt;</span><br><span class="line">        &lt;/li&gt;</span><br><span class="line">        &lt;li v-for=&quot;item in categoryList&quot; :key=&quot;item.id&quot;&gt;</span><br><span class="line">          &lt;RouterLink :to=&quot;`/category/$&#123;item.id&#125;`&quot; active-class=&quot;active&quot;&gt;&#123;&#123;</span><br><span class="line">            item.name</span><br><span class="line">          &#125;&#125;&lt;/RouterLink&gt;</span><br><span class="line">        &lt;/li&gt;</span><br><span class="line">      &lt;/ul&gt;</span><br><span class="line">      &lt;div class=&quot;search&quot;&gt;</span><br><span class="line">        &lt;i class=&quot;iconfont icon-search&quot;&gt;&lt;/i&gt;</span><br><span class="line">        &lt;input type=&quot;text&quot; placeholder=&quot;搜一搜&quot; /&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;!-- 头部购物车 --&gt;</span><br><span class="line">      &lt;HeadCart /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/header&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class="line">.app-header &#123;</span><br><span class="line">  background: #fff;</span><br><span class="line"></span><br><span class="line">  .container &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    align-items: center;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .logo &#123;</span><br><span class="line">    width: 200px;</span><br><span class="line"></span><br><span class="line">    a &#123;</span><br><span class="line">      display: block;</span><br><span class="line">      height: 132px;</span><br><span class="line">      width: 100%;</span><br><span class="line">      text-indent: -9999px;</span><br><span class="line">      background: url(&quot;@/assets/images/logo.png&quot;) no-repeat center 18px /</span><br><span class="line">        contain;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .app-header-nav &#123;</span><br><span class="line">    width: 820px;</span><br><span class="line">    display: flex;</span><br><span class="line">    padding-left: 40px;</span><br><span class="line">    position: relative;</span><br><span class="line">    z-index: 998;</span><br><span class="line"></span><br><span class="line">    li &#123;</span><br><span class="line">      margin-right: 40px;</span><br><span class="line">      width: 38px;</span><br><span class="line">      text-align: center;</span><br><span class="line"></span><br><span class="line">      a &#123;</span><br><span class="line">        font-size: 16px;</span><br><span class="line">        line-height: 32px;</span><br><span class="line">        height: 32px;</span><br><span class="line">        display: inline-block;</span><br><span class="line"></span><br><span class="line">        &amp;:hover &#123;</span><br><span class="line">          color: $xtxColor;</span><br><span class="line">          border-bottom: 1px solid $xtxColor;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      .active &#123;</span><br><span class="line">        color: $xtxColor;</span><br><span class="line">        border-bottom: 1px solid $xtxColor;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .search &#123;</span><br><span class="line">    width: 170px;</span><br><span class="line">    height: 32px;</span><br><span class="line">    position: relative;</span><br><span class="line">    border-bottom: 1px solid #e7e7e7;</span><br><span class="line">    line-height: 32px;</span><br><span class="line"></span><br><span class="line">    .icon-search &#123;</span><br><span class="line">      font-size: 18px;</span><br><span class="line">      margin-left: 5px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    input &#123;</span><br><span class="line">      width: 140px;</span><br><span class="line">      padding-left: 5px;</span><br><span class="line">      color: #666;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .cart &#123;</span><br><span class="line">    width: 50px;</span><br><span class="line"></span><br><span class="line">    .curr &#123;</span><br><span class="line">      height: 32px;</span><br><span class="line">      line-height: 32px;</span><br><span class="line">      text-align: center;</span><br><span class="line">      position: relative;</span><br><span class="line">      display: block;</span><br><span class="line"></span><br><span class="line">      .icon-cart &#123;</span><br><span class="line">        font-size: 22px;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      em &#123;</span><br><span class="line">        font-style: normal;</span><br><span class="line">        position: absolute;</span><br><span class="line">        right: 0;</span><br><span class="line">        top: 0;</span><br><span class="line">        padding: 1px 6px;</span><br><span class="line">        line-height: 1;</span><br><span class="line">        background: $helpColor;</span><br><span class="line">        color: #fff;</span><br><span class="line">        font-size: 12px;</span><br><span class="line">        border-radius: 10px;</span><br><span class="line">        font-family: Arial;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p>HeaderSticky 组件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; toRefs &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123; useCategoryStore &#125; from &quot;@/stores/category&quot;;</span><br><span class="line">defineProps(&#123;</span><br><span class="line">  y: &#123;</span><br><span class="line">    type: Number,</span><br><span class="line">    required: true,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line">const &#123; categoryList &#125; = toRefs(useCategoryStore());</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;app-header-sticky&quot; :class=&quot;&#123; show: y &gt; 78 &#125;&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">      &lt;RouterLink class=&quot;logo&quot; to=&quot;/&quot; /&gt;</span><br><span class="line">      &lt;!-- 导航区域 --&gt;</span><br><span class="line">      &lt;ul class=&quot;app-header-nav&quot;&gt;</span><br><span class="line">        &lt;li class=&quot;home&quot;&gt;</span><br><span class="line">          &lt;RouterLink to=&quot;/&quot;&gt;首页&lt;/RouterLink&gt;</span><br><span class="line">        &lt;/li&gt;</span><br><span class="line">        &lt;li v-for=&quot;item in categoryList&quot; :key=&quot;item.id&quot;&gt;</span><br><span class="line">          &lt;RouterLink :to=&quot;`/category/$&#123;item.id&#125;`&quot; active-class=&quot;active&quot;&gt;&#123;&#123;</span><br><span class="line">            item.name</span><br><span class="line">          &#125;&#125;&lt;/RouterLink&gt;</span><br><span class="line">        &lt;/li&gt;</span><br><span class="line">      &lt;/ul&gt;</span><br><span class="line"></span><br><span class="line">      &lt;div class=&quot;right&quot;&gt;</span><br><span class="line">        &lt;RouterLink to=&quot;/&quot;&gt;品牌&lt;/RouterLink&gt;</span><br><span class="line">        &lt;RouterLink to=&quot;/&quot;&gt;专题&lt;/RouterLink&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class="line">.app-header-sticky &#123;</span><br><span class="line">  width: 100%;</span><br><span class="line">  height: 80px;</span><br><span class="line">  position: fixed;</span><br><span class="line">  left: 0;</span><br><span class="line">  top: 0;</span><br><span class="line">  z-index: 999;</span><br><span class="line">  background-color: #fff;</span><br><span class="line">  border-bottom: 1px solid #e4e4e4;</span><br><span class="line">  // 此处为关键样式!!!</span><br><span class="line">  // 状态一：往上平移自身高度 + 完全透明</span><br><span class="line">  transform: translateY(-100%);</span><br><span class="line">  opacity: 0;</span><br><span class="line"></span><br><span class="line">  // 状态二：移除平移 + 完全不透明</span><br><span class="line">  &amp;.show &#123;</span><br><span class="line">    transition: all 0.3s linear;</span><br><span class="line">    transform: none;</span><br><span class="line">    opacity: 1;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .container &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    align-items: center;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .logo &#123;</span><br><span class="line">    width: 200px;</span><br><span class="line">    height: 80px;</span><br><span class="line">    background: url(&quot;@/assets/images/logo.png&quot;) no-repeat right 2px;</span><br><span class="line">    background-size: 160px auto;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .right &#123;</span><br><span class="line">    width: 220px;</span><br><span class="line">    display: flex;</span><br><span class="line">    text-align: center;</span><br><span class="line">    padding-left: 40px;</span><br><span class="line">    border-left: 2px solid $xtxColor;</span><br><span class="line"></span><br><span class="line">    a &#123;</span><br><span class="line">      width: 38px;</span><br><span class="line">      margin-right: 40px;</span><br><span class="line">      font-size: 16px;</span><br><span class="line">      line-height: 1;</span><br><span class="line"></span><br><span class="line">      &amp;:hover &#123;</span><br><span class="line">        color: $xtxColor;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.app-header-nav &#123;</span><br><span class="line">  width: 820px;</span><br><span class="line">  display: flex;</span><br><span class="line">  padding-left: 40px;</span><br><span class="line">  position: relative;</span><br><span class="line">  z-index: 998;</span><br><span class="line"></span><br><span class="line">  li &#123;</span><br><span class="line">    margin-right: 40px;</span><br><span class="line">    width: 38px;</span><br><span class="line">    text-align: center;</span><br><span class="line"></span><br><span class="line">    a &#123;</span><br><span class="line">      font-size: 16px;</span><br><span class="line">      line-height: 32px;</span><br><span class="line">      height: 32px;</span><br><span class="line">      display: inline-block;</span><br><span class="line"></span><br><span class="line">      &amp;:hover &#123;</span><br><span class="line">        color: $xtxColor;</span><br><span class="line">        border-bottom: 1px solid $xtxColor;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .active &#123;</span><br><span class="line">      color: $xtxColor;</span><br><span class="line">      border-bottom: 1px solid $xtxColor;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p>Footer 组件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;footer class=&quot;app_footer&quot;&gt;</span><br><span class="line">    &lt;!-- 联系我们 --&gt;</span><br><span class="line">    &lt;div class=&quot;contact&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">        &lt;dl&gt;</span><br><span class="line">          &lt;dt&gt;客户服务&lt;/dt&gt;</span><br><span class="line">          &lt;dd&gt;&lt;i class=&quot;iconfont icon-kefu&quot;&gt;&lt;/i&gt; 在线客服&lt;/dd&gt;</span><br><span class="line">          &lt;dd&gt;&lt;i class=&quot;iconfont icon-question&quot;&gt;&lt;/i&gt; 问题反馈&lt;/dd&gt;</span><br><span class="line">        &lt;/dl&gt;</span><br><span class="line">        &lt;dl&gt;</span><br><span class="line">          &lt;dt&gt;关注我们&lt;/dt&gt;</span><br><span class="line">          &lt;dd&gt;&lt;i class=&quot;iconfont icon-weixin&quot;&gt;&lt;/i&gt; 公众号&lt;/dd&gt;</span><br><span class="line">          &lt;dd&gt;&lt;i class=&quot;iconfont icon-weibo&quot;&gt;&lt;/i&gt; 微博&lt;/dd&gt;</span><br><span class="line">        &lt;/dl&gt;</span><br><span class="line">        &lt;dl&gt;</span><br><span class="line">          &lt;dt&gt;下载APP&lt;/dt&gt;</span><br><span class="line">          &lt;dd class=&quot;qrcode&quot;&gt;&lt;img src=&quot;@/assets/images/qrcode.jpg&quot; /&gt;&lt;/dd&gt;</span><br><span class="line">          &lt;dd class=&quot;download&quot;&gt;</span><br><span class="line">            &lt;span&gt;扫描二维码&lt;/span&gt;</span><br><span class="line">            &lt;span&gt;立马下载APP&lt;/span&gt;</span><br><span class="line">            &lt;a href=&quot;javascript:;&quot;&gt;下载页面&lt;/a&gt;</span><br><span class="line">          &lt;/dd&gt;</span><br><span class="line">        &lt;/dl&gt;</span><br><span class="line">        &lt;dl&gt;</span><br><span class="line">          &lt;dt&gt;服务热线&lt;/dt&gt;</span><br><span class="line">          &lt;dd class=&quot;hotline&quot;&gt;</span><br><span class="line">            400-0000-000 &lt;small&gt;周一至周日 8:00-18:00&lt;/small&gt;</span><br><span class="line">          &lt;/dd&gt;</span><br><span class="line">        &lt;/dl&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;!-- 其它 --&gt;</span><br><span class="line">    &lt;div class=&quot;extra&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;slogan&quot;&gt;</span><br><span class="line">          &lt;a href=&quot;javascript:;&quot;&gt;</span><br><span class="line">            &lt;i class=&quot;iconfont icon-footer01&quot;&gt;&lt;/i&gt;</span><br><span class="line">            &lt;span&gt;价格亲民&lt;/span&gt;</span><br><span class="line">          &lt;/a&gt;</span><br><span class="line">          &lt;a href=&quot;javascript:;&quot;&gt;</span><br><span class="line">            &lt;i class=&quot;iconfont icon-footer02&quot;&gt;&lt;/i&gt;</span><br><span class="line">            &lt;span&gt;物流快捷&lt;/span&gt;</span><br><span class="line">          &lt;/a&gt;</span><br><span class="line">          &lt;a href=&quot;javascript:;&quot;&gt;</span><br><span class="line">            &lt;i class=&quot;iconfont icon-footer03&quot;&gt;&lt;/i&gt;</span><br><span class="line">            &lt;span&gt;品质新鲜&lt;/span&gt;</span><br><span class="line">          &lt;/a&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;!-- 版权信息 --&gt;</span><br><span class="line">        &lt;div class=&quot;copyright&quot;&gt;</span><br><span class="line">          &lt;p&gt;</span><br><span class="line">            &lt;a href=&quot;javascript:;&quot;&gt;关于我们&lt;/a&gt;</span><br><span class="line">            &lt;a href=&quot;javascript:;&quot;&gt;帮助中心&lt;/a&gt;</span><br><span class="line">            &lt;a href=&quot;javascript:;&quot;&gt;售后服务&lt;/a&gt;</span><br><span class="line">            &lt;a href=&quot;javascript:;&quot;&gt;配送与验收&lt;/a&gt;</span><br><span class="line">            &lt;a href=&quot;javascript:;&quot;&gt;商务合作&lt;/a&gt;</span><br><span class="line">            &lt;a href=&quot;javascript:;&quot;&gt;搜索推荐&lt;/a&gt;</span><br><span class="line">            &lt;a href=&quot;javascript:;&quot;&gt;友情链接&lt;/a&gt;</span><br><span class="line">          &lt;/p&gt;</span><br><span class="line">          &lt;p&gt;CopyRight © 小兔鲜儿&lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/footer&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class="line">.app_footer &#123;</span><br><span class="line">  overflow: hidden;</span><br><span class="line">  background-color: #f5f5f5;</span><br><span class="line">  padding-top: 20px;</span><br><span class="line"></span><br><span class="line">  .contact &#123;</span><br><span class="line">    background: #fff;</span><br><span class="line"></span><br><span class="line">    .container &#123;</span><br><span class="line">      padding: 60px 0 40px 25px;</span><br><span class="line">      display: flex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    dl &#123;</span><br><span class="line">      height: 190px;</span><br><span class="line">      text-align: center;</span><br><span class="line">      padding: 0 72px;</span><br><span class="line">      border-right: 1px solid #f2f2f2;</span><br><span class="line">      color: #999;</span><br><span class="line"></span><br><span class="line">      &amp;:first-child &#123;</span><br><span class="line">        padding-left: 0;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      &amp;:last-child &#123;</span><br><span class="line">        border-right: none;</span><br><span class="line">        padding-right: 0;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    dt &#123;</span><br><span class="line">      line-height: 1;</span><br><span class="line">      font-size: 18px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    dd &#123;</span><br><span class="line">      margin: 36px 12px 0 0;</span><br><span class="line">      float: left;</span><br><span class="line">      width: 92px;</span><br><span class="line">      height: 92px;</span><br><span class="line">      padding-top: 10px;</span><br><span class="line">      border: 1px solid #ededed;</span><br><span class="line"></span><br><span class="line">      .iconfont &#123;</span><br><span class="line">        font-size: 36px;</span><br><span class="line">        display: block;</span><br><span class="line">        color: #666;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      &amp;:hover &#123;</span><br><span class="line">        .iconfont &#123;</span><br><span class="line">          color: $xtxColor;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      &amp;:last-child &#123;</span><br><span class="line">        margin-right: 0;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .qrcode &#123;</span><br><span class="line">      width: 92px;</span><br><span class="line">      height: 92px;</span><br><span class="line">      padding: 7px;</span><br><span class="line">      border: 1px solid #ededed;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .download &#123;</span><br><span class="line">      padding-top: 5px;</span><br><span class="line">      font-size: 14px;</span><br><span class="line">      width: auto;</span><br><span class="line">      height: auto;</span><br><span class="line">      border: none;</span><br><span class="line"></span><br><span class="line">      span &#123;</span><br><span class="line">        display: block;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      a &#123;</span><br><span class="line">        display: block;</span><br><span class="line">        line-height: 1;</span><br><span class="line">        padding: 10px 25px;</span><br><span class="line">        margin-top: 5px;</span><br><span class="line">        color: #fff;</span><br><span class="line">        border-radius: 2px;</span><br><span class="line">        background-color: $xtxColor;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .hotline &#123;</span><br><span class="line">      padding-top: 20px;</span><br><span class="line">      font-size: 22px;</span><br><span class="line">      color: #666;</span><br><span class="line">      width: auto;</span><br><span class="line">      height: auto;</span><br><span class="line">      border: none;</span><br><span class="line"></span><br><span class="line">      small &#123;</span><br><span class="line">        display: block;</span><br><span class="line">        font-size: 15px;</span><br><span class="line">        color: #999;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .extra &#123;</span><br><span class="line">    background-color: #333;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .slogan &#123;</span><br><span class="line">    height: 178px;</span><br><span class="line">    line-height: 58px;</span><br><span class="line">    padding: 60px 100px;</span><br><span class="line">    border-bottom: 1px solid #434343;</span><br><span class="line">    display: flex;</span><br><span class="line">    justify-content: space-between;</span><br><span class="line"></span><br><span class="line">    a &#123;</span><br><span class="line">      height: 58px;</span><br><span class="line">      line-height: 58px;</span><br><span class="line">      color: #fff;</span><br><span class="line">      font-size: 28px;</span><br><span class="line"></span><br><span class="line">      i &#123;</span><br><span class="line">        font-size: 50px;</span><br><span class="line">        vertical-align: middle;</span><br><span class="line">        margin-right: 10px;</span><br><span class="line">        font-weight: 100;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      span &#123;</span><br><span class="line">        vertical-align: middle;</span><br><span class="line">        text-shadow: 0 0 1px #333;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .copyright &#123;</span><br><span class="line">    height: 170px;</span><br><span class="line">    padding-top: 40px;</span><br><span class="line">    text-align: center;</span><br><span class="line">    color: #999;</span><br><span class="line">    font-size: 15px;</span><br><span class="line"></span><br><span class="line">    p &#123;</span><br><span class="line">      line-height: 1;</span><br><span class="line">      margin-bottom: 20px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    a &#123;</span><br><span class="line">      color: #999;</span><br><span class="line">      line-height: 1;</span><br><span class="line">      padding: 0 10px;</span><br><span class="line">      border-right: 1px solid #999;</span><br><span class="line"></span><br><span class="line">      &amp;:last-child &#123;</span><br><span class="line">        border-right: none;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<h3 id="2、吸顶交互效果"><a href="#2、吸顶交互效果" class="headerlink" title="2、吸顶交互效果"></a>2、吸顶交互效果</h3><p>实现吸顶交互效果的核心逻辑：根据滚动距离判断当前 show 类名是否显示，大于 78 显示，小于 78，不显示</p>
<p>这里我们使用@vueuse&#x2F;core 提供的 useScroll 方法可以很方便的实现获取页面滚动距离的目的</p>
<p>VueUse 是一个为 Vue 组合式 API 提供服务的工具库，也就是说在 Vue 选项式 API 中它将不能使用</p>
<p>VueUse 官网<a href="https://vueuse.org/">https://vueuse.org/</a></p>
<h3 id="3、Pinia-优化重复请求"><a href="#3、Pinia-优化重复请求" class="headerlink" title="3、Pinia 优化重复请求"></a>3、Pinia 优化重复请求</h3><p>注意到获取商品的分类信息在多个模块中都会用到，为了避免重复请求，我们将其抽取成一个 store 模块</p>
<p>在 src&#x2F;stores 中新建 categoryStore.js</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; defineStore &#125; <span class="keyword">from</span> <span class="string">&quot;pinia&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; getCategoryAPI &#125; <span class="keyword">from</span> <span class="string">&quot;@/apis/layout&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useCategoryStore = <span class="title function_">defineStore</span>(<span class="string">&quot;category&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">//分类列表数据</span></span><br><span class="line">  <span class="keyword">const</span> isLoading = <span class="title function_">ref</span>(<span class="literal">true</span>);</span><br><span class="line">  <span class="keyword">const</span> categoryList = <span class="title function_">ref</span>([]);</span><br><span class="line">  <span class="keyword">function</span> <span class="title function_">getCategory</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">getCategoryAPI</span>().<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">      categoryList.<span class="property">value</span> = res.<span class="property">data</span>.<span class="property">result</span>;</span><br><span class="line">      isLoading.<span class="property">value</span> = <span class="literal">false</span>;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> &#123; categoryList, getCategory, isLoading &#125;;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h2 id="四、Home-页"><a href="#四、Home-页" class="headerlink" title="四、Home 页"></a>四、Home 页</h2><h3 id="1、总体架构-1"><a href="#1、总体架构-1" class="headerlink" title="1、总体架构"></a>1、总体架构</h3><p>Home 页整体结构如下</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230601103822925.png" alt="image-20230601103822925"></p>
<p>按照结构新增五个组件，并在 Home 模块的入口组件中引入</p>
<p>Home&#x2F;index.vue</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import HomeCategory from &quot;./HomeCategory.vue&quot;;</span><br><span class="line">import HomeBanner from &quot;./HomeBanner.vue&quot;;</span><br><span class="line">import HomeHot from &quot;./HomeHot.vue&quot;;</span><br><span class="line">import HomeNew from &quot;./HomeNew.vue&quot;;</span><br><span class="line">import HomeProduct from &quot;./HomeProduct.vue&quot;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">    &lt;!-- 分类区域 --&gt;</span><br><span class="line">    &lt;HomeCategory /&gt;</span><br><span class="line">    &lt;!-- 轮播图区域 --&gt;</span><br><span class="line">    &lt;HomeBanner /&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;!-- 新鲜好物区域 --&gt;</span><br><span class="line">  &lt;HomeNew /&gt;</span><br><span class="line">  &lt;!-- 人气推荐区域 --&gt;</span><br><span class="line">  &lt;HomeHot /&gt;</span><br><span class="line">  &lt;!-- 产品列表区域 --&gt;</span><br><span class="line">  &lt;HomeProduct /&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&quot;scss&quot;&gt;&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p>其中 HomeCategory 组件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; toRefs &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123; useCategoryStore &#125; from &quot;@/stores/category&quot;;</span><br><span class="line">const &#123; categoryList, isLoading &#125; = toRefs(useCategoryStore());</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;home-category&quot;&gt;</span><br><span class="line">    &lt;ul class=&quot;menu&quot;&gt;</span><br><span class="line">      &lt;li v-for=&quot;item in categoryList&quot; :key=&quot;item.id&quot;&gt;</span><br><span class="line">        &lt;!-- 骨架屏 --&gt;</span><br><span class="line">        &lt;el-skeleton</span><br><span class="line">          style=&quot;width: 200px&quot;</span><br><span class="line">          :loading=&quot;isLoading&quot;</span><br><span class="line">          animated</span><br><span class="line">          :throttle=&quot;10000&quot;</span><br><span class="line">        &gt;</span><br><span class="line">          &lt;template #template&gt;</span><br><span class="line">            &lt;el-skeleton-item variant=&quot;p&quot; style=&quot;width: 32px; height: 20px&quot; /&gt;</span><br><span class="line">            &lt;el-skeleton-item</span><br><span class="line">              variant=&quot;p&quot;</span><br><span class="line">              style=&quot;width: 100px; margin-left: 10px&quot;</span><br><span class="line">            /&gt;</span><br><span class="line">          &lt;/template&gt;</span><br><span class="line">          &lt;template #default&gt;</span><br><span class="line">            &lt;RouterLink :to=&quot;`/category/$&#123;item.id&#125;`&quot;&gt;&#123;&#123;</span><br><span class="line">              item.name</span><br><span class="line">            &#125;&#125;&lt;/RouterLink&gt;</span><br><span class="line">            &lt;RouterLink</span><br><span class="line">              v-for=&quot;i in item.children.slice(0, 2)&quot;</span><br><span class="line">              :key=&quot;i.id&quot;</span><br><span class="line">              :to=&quot;`/category/sub/$&#123;i.id&#125;`&quot;</span><br><span class="line">              &gt;&#123;&#123; i.name &#125;&#125;&lt;/RouterLink</span><br><span class="line">            &gt;</span><br><span class="line">          &lt;/template&gt;</span><br><span class="line">        &lt;/el-skeleton&gt;</span><br><span class="line">        &lt;!-- 弹层layer位置 --&gt;</span><br><span class="line">        &lt;div class=&quot;layer&quot;&gt;</span><br><span class="line">          &lt;h4&gt;分类推荐 &lt;small&gt;根据您的购买或浏览记录推荐&lt;/small&gt;&lt;/h4&gt;</span><br><span class="line">          &lt;ul&gt;</span><br><span class="line">            &lt;li v-for=&quot;i in item.goods&quot; :key=&quot;i.id&quot;&gt;</span><br><span class="line">              &lt;RouterLink :to=&quot;`/goodsInfo/$&#123;i.id&#125;`&quot;&gt;</span><br><span class="line">                &lt;img alt=&quot;&quot; :src=&quot;i.picture&quot; /&gt;</span><br><span class="line">                &lt;div class=&quot;info&quot;&gt;</span><br><span class="line">                  &lt;p class=&quot;name ellipsis-2&quot;&gt;&#123;&#123; i.name &#125;&#125;&lt;/p&gt;</span><br><span class="line">                  &lt;p class=&quot;desc ellipsis&quot;&gt;&#123;&#123; i.desc &#125;&#125;&lt;/p&gt;</span><br><span class="line">                  &lt;p class=&quot;price&quot;&gt;&lt;i&gt;¥&lt;/i&gt;&#123;&#123; i.price &#125;&#125;&lt;/p&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">              &lt;/RouterLink&gt;</span><br><span class="line">            &lt;/li&gt;</span><br><span class="line">          &lt;/ul&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class="line">.home-category &#123;</span><br><span class="line">  width: 250px;</span><br><span class="line">  height: 500px;</span><br><span class="line">  background: rgba(0, 0, 0, 0.8);</span><br><span class="line">  position: relative;</span><br><span class="line">  z-index: 99;</span><br><span class="line"></span><br><span class="line">  .menu &#123;</span><br><span class="line">    li &#123;</span><br><span class="line">      padding-left: 40px;</span><br><span class="line">      height: 55px;</span><br><span class="line">      line-height: 55px;</span><br><span class="line"></span><br><span class="line">      &amp;:hover &#123;</span><br><span class="line">        background: $xtxColor;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      a &#123;</span><br><span class="line">        margin-right: 4px;</span><br><span class="line">        color: #fff;</span><br><span class="line"></span><br><span class="line">        &amp;:first-child &#123;</span><br><span class="line">          font-size: 16px;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      .layer &#123;</span><br><span class="line">        width: 990px;</span><br><span class="line">        height: 500px;</span><br><span class="line">        background: rgba(255, 255, 255, 0.8);</span><br><span class="line">        position: absolute;</span><br><span class="line">        left: 250px;</span><br><span class="line">        top: 0;</span><br><span class="line">        display: none;</span><br><span class="line">        padding: 0 15px;</span><br><span class="line"></span><br><span class="line">        h4 &#123;</span><br><span class="line">          font-size: 20px;</span><br><span class="line">          font-weight: normal;</span><br><span class="line">          line-height: 80px;</span><br><span class="line"></span><br><span class="line">          small &#123;</span><br><span class="line">            font-size: 16px;</span><br><span class="line">            color: #666;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ul &#123;</span><br><span class="line">          display: flex;</span><br><span class="line">          flex-wrap: wrap;</span><br><span class="line"></span><br><span class="line">          li &#123;</span><br><span class="line">            width: 310px;</span><br><span class="line">            height: 120px;</span><br><span class="line">            margin-right: 15px;</span><br><span class="line">            margin-bottom: 15px;</span><br><span class="line">            border: 1px solid #eee;</span><br><span class="line">            border-radius: 4px;</span><br><span class="line">            background: #fff;</span><br><span class="line"></span><br><span class="line">            &amp;:nth-child(3n) &#123;</span><br><span class="line">              margin-right: 0;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            a &#123;</span><br><span class="line">              display: flex;</span><br><span class="line">              width: 100%;</span><br><span class="line">              height: 100%;</span><br><span class="line">              align-items: center;</span><br><span class="line">              padding: 10px;</span><br><span class="line"></span><br><span class="line">              &amp;:hover &#123;</span><br><span class="line">                background: #e3f9f4;</span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line">              img &#123;</span><br><span class="line">                width: 95px;</span><br><span class="line">                height: 95px;</span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line">              .info &#123;</span><br><span class="line">                padding-left: 10px;</span><br><span class="line">                line-height: 24px;</span><br><span class="line">                overflow: hidden;</span><br><span class="line"></span><br><span class="line">                .name &#123;</span><br><span class="line">                  font-size: 16px;</span><br><span class="line">                  color: #666;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                .desc &#123;</span><br><span class="line">                  color: #999;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                .price &#123;</span><br><span class="line">                  font-size: 22px;</span><br><span class="line">                  color: $priceColor;</span><br><span class="line"></span><br><span class="line">                  i &#123;</span><br><span class="line">                    font-size: 16px;</span><br><span class="line">                  &#125;</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      // 关键样式  hover状态下的layer盒子变成block</span><br><span class="line">      &amp;:hover &#123;</span><br><span class="line">        .layer &#123;</span><br><span class="line">          display: block;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p>HomeBanner 组件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; ref &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123; getBannerAPI &#125; from &quot;@/apis/home&quot;;</span><br><span class="line">const bannerList = ref([]);</span><br><span class="line">getBannerAPI().then((res) =&gt; &#123;</span><br><span class="line">  bannerList.value = res.data.result;</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;home-banner&quot;&gt;</span><br><span class="line">    &lt;el-carousel height=&quot;500px&quot;&gt;</span><br><span class="line">      &lt;el-carousel-item v-for=&quot;item in bannerList&quot; :key=&quot;item.id&quot;&gt;</span><br><span class="line">        &lt;img :src=&quot;item.imgUrl&quot; alt=&quot;&quot; /&gt;</span><br><span class="line">      &lt;/el-carousel-item&gt;</span><br><span class="line">    &lt;/el-carousel&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class="line">.home-banner &#123;</span><br><span class="line">  width: 1240px;</span><br><span class="line">  height: 500px;</span><br><span class="line">  position: absolute;</span><br><span class="line">  left: 0;</span><br><span class="line">  top: 0;</span><br><span class="line">  z-index: 98;</span><br><span class="line"></span><br><span class="line">  img &#123;</span><br><span class="line">    width: 100%;</span><br><span class="line">    height: 500px;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p>HomeNew 组件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import HomePanel from &quot;./HomePanel.vue&quot;;</span><br><span class="line">import &#123; getNewList &#125; from &quot;@/apis/home&quot;;</span><br><span class="line">import &#123; useRequestLazy &#125; from &quot;@/hooks/request-lazy&quot;;</span><br><span class="line">const &#123; target, list, isLoading &#125; = useRequestLazy(getNewList);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;HomePanel title=&quot;新鲜好物&quot; sub-title=&quot;新鲜出炉 品质靠谱&quot; ref=&quot;target&quot;&gt;</span><br><span class="line">    &lt;ul class=&quot;goods-list&quot;&gt;</span><br><span class="line">      &lt;li v-for=&quot;item in list&quot; :key=&quot;item.id&quot;&gt;</span><br><span class="line">        &lt;!-- 骨架屏 --&gt;</span><br><span class="line">        &lt;el-skeleton style=&quot;width: 306px&quot; animated :loading=&quot;isLoading&quot;&gt;</span><br><span class="line">          &lt;template #template&gt;</span><br><span class="line">            &lt;el-skeleton-item</span><br><span class="line">              variant=&quot;image&quot;</span><br><span class="line">              style=&quot;width: 306px; height: 306px&quot;</span><br><span class="line">            /&gt;</span><br><span class="line">            &lt;div style=&quot;padding: 14px; text-align: center&quot;&gt;</span><br><span class="line">              &lt;el-skeleton-item variant=&quot;p&quot; style=&quot;width: 50%&quot; /&gt;</span><br><span class="line">              &lt;div</span><br><span class="line">                style=&quot;display: flex; align-items: center; justify-items: space-between&quot;</span><br><span class="line">              &gt;</span><br><span class="line">                &lt;el-skeleton-item variant=&quot;text&quot; style=&quot;margin-right: 16px&quot; /&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/template&gt;</span><br><span class="line">          &lt;template #default&gt;</span><br><span class="line">            &lt;RouterLink :to=&quot;`/goodsInfo/$&#123;item.id&#125;`&quot;&gt;</span><br><span class="line">              &lt;img :src=&quot;item.picture&quot; alt=&quot;&quot; /&gt;</span><br><span class="line">              &lt;p&gt;&#123;&#123; item.name &#125;&#125;&lt;/p&gt;</span><br><span class="line">              &lt;p class=&quot;price&quot;&gt;&amp;yen;&#123;&#123; item.price &#125;&#125;&lt;/p&gt;</span><br><span class="line">            &lt;/RouterLink&gt;</span><br><span class="line">          &lt;/template&gt;</span><br><span class="line">        &lt;/el-skeleton&gt;</span><br><span class="line">      &lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">  &lt;/HomePanel&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class="line">.goods-list &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  justify-content: space-between;</span><br><span class="line">  height: 406px;</span><br><span class="line"></span><br><span class="line">  li &#123;</span><br><span class="line">    width: 306px;</span><br><span class="line">    height: 406px;</span><br><span class="line"></span><br><span class="line">    background: #f0f9f4;</span><br><span class="line">    transition: all 0.5s;</span><br><span class="line"></span><br><span class="line">    &amp;:hover &#123;</span><br><span class="line">      transform: translate3d(0, -3px, 0);</span><br><span class="line">      box-shadow: 0 3px 8px rgb(0 0 0 / 20%);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    img &#123;</span><br><span class="line">      width: 306px;</span><br><span class="line">      height: 306px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    p &#123;</span><br><span class="line">      font-size: 22px;</span><br><span class="line">      padding-top: 12px;</span><br><span class="line">      text-align: center;</span><br><span class="line">      text-overflow: ellipsis;</span><br><span class="line">      overflow: hidden;</span><br><span class="line">      white-space: nowrap;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .price &#123;</span><br><span class="line">      color: $priceColor;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p>这里由于几个模块结构类似，因此封装了一个 HomePanel 组件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup lang=&quot;ts&quot;&gt;</span><br><span class="line">defineProps(&#123;</span><br><span class="line">  title: &#123;</span><br><span class="line">    type: String,</span><br><span class="line">    require: true,</span><br><span class="line">  &#125;,</span><br><span class="line">  subTitle: &#123;</span><br><span class="line">    type: String,</span><br><span class="line">    require: true,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;home-panel&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;head&quot;&gt;</span><br><span class="line">        &lt;!-- 主标题和副标题 --&gt;</span><br><span class="line">        &lt;h3&gt;</span><br><span class="line">          &#123;&#123; title &#125;&#125;&lt;small&gt;&#123;&#123; subTitle &#125;&#125;&lt;/small&gt;</span><br><span class="line">        &lt;/h3&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;!-- 主体内容区域 --&gt;</span><br><span class="line">      &lt;slot&gt;&lt;/slot&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class="line">.home-panel &#123;</span><br><span class="line">  background-color: #fff;</span><br><span class="line"></span><br><span class="line">  .head &#123;</span><br><span class="line">    padding: 40px 0;</span><br><span class="line">    display: flex;</span><br><span class="line">    align-items: flex-end;</span><br><span class="line"></span><br><span class="line">    h3 &#123;</span><br><span class="line">      flex: 1;</span><br><span class="line">      font-size: 32px;</span><br><span class="line">      font-weight: normal;</span><br><span class="line">      margin-left: 6px;</span><br><span class="line">      height: 35px;</span><br><span class="line">      line-height: 35px;</span><br><span class="line"></span><br><span class="line">      small &#123;</span><br><span class="line">        font-size: 16px;</span><br><span class="line">        color: #999;</span><br><span class="line">        margin-left: 20px;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p>HomeHot 组件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import HomePanel from &quot;./HomePanel.vue&quot;;</span><br><span class="line">import &#123; getHotList &#125; from &quot;@/apis/home&quot;;</span><br><span class="line">import &#123; useRequestLazy &#125; from &quot;@/hooks/request-lazy&quot;;</span><br><span class="line">const &#123; target, list, isLoading &#125; = useRequestLazy(getHotList);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;HomePanel title=&quot;人气推荐&quot; sub-title=&quot;人气爆款 不容错过&quot; ref=&quot;target&quot;&gt;</span><br><span class="line">    &lt;ul class=&quot;goods-list&quot;&gt;</span><br><span class="line">      &lt;li v-for=&quot;item in list&quot; :key=&quot;item.id&quot;&gt;</span><br><span class="line">        &lt;!-- 骨架屏 --&gt;</span><br><span class="line">        &lt;el-skeleton style=&quot;width: 306px&quot; animated :loading=&quot;isLoading&quot;&gt;</span><br><span class="line">          &lt;template #template&gt;</span><br><span class="line">            &lt;el-skeleton-item</span><br><span class="line">              variant=&quot;image&quot;</span><br><span class="line">              style=&quot;width: 306px; height: 306px&quot;</span><br><span class="line">            /&gt;</span><br><span class="line">            &lt;div style=&quot;padding: 14px; text-align: center&quot;&gt;</span><br><span class="line">              &lt;el-skeleton-item variant=&quot;p&quot; style=&quot;width: 50%&quot; /&gt;</span><br><span class="line">              &lt;div</span><br><span class="line">                style=&quot;display: flex; align-items: center; justify-items: space-between&quot;</span><br><span class="line">              &gt;</span><br><span class="line">                &lt;el-skeleton-item variant=&quot;text&quot; style=&quot;margin-right: 16px&quot; /&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/template&gt;</span><br><span class="line">          &lt;template #default&gt;</span><br><span class="line">            &lt;RouterLink to=&quot;/&quot;&gt;</span><br><span class="line">              &lt;img :src=&quot;item.picture&quot; alt=&quot;&quot; /&gt;</span><br><span class="line">              &lt;p class=&quot;name&quot;&gt;&#123;&#123; item.title &#125;&#125;&lt;/p&gt;</span><br><span class="line">              &lt;p class=&quot;alt&quot;&gt;&#123;&#123; item.alt &#125;&#125;&lt;/p&gt;</span><br><span class="line">            &lt;/RouterLink&gt;</span><br><span class="line">          &lt;/template&gt;</span><br><span class="line">        &lt;/el-skeleton&gt;</span><br><span class="line">      &lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">  &lt;/HomePanel&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class="line">.goods-list &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  justify-content: space-between;</span><br><span class="line">  height: 406px;</span><br><span class="line"></span><br><span class="line">  li &#123;</span><br><span class="line">    width: 306px;</span><br><span class="line">    height: 406px;</span><br><span class="line"></span><br><span class="line">    background: #f0f9f4;</span><br><span class="line">    transition: all 0.5s;</span><br><span class="line"></span><br><span class="line">    &amp;:hover &#123;</span><br><span class="line">      transform: translate3d(0, -3px, 0);</span><br><span class="line">      box-shadow: 0 3px 8px rgb(0 0 0 / 20%);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    img &#123;</span><br><span class="line">      width: 306px;</span><br><span class="line">      height: 306px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    p &#123;</span><br><span class="line">      font-size: 22px;</span><br><span class="line">      padding-top: 12px;</span><br><span class="line">      text-align: center;</span><br><span class="line">      text-overflow: ellipsis;</span><br><span class="line">      overflow: hidden;</span><br><span class="line">      white-space: nowrap;</span><br><span class="line">    &#125;</span><br><span class="line">    .alt &#123;</span><br><span class="line">      font-size: 18px;</span><br><span class="line">      color: #b5b5b5;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p>HomeProduct 组件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; ref &#125; from &quot;vue&quot;;</span><br><span class="line">import HomePanel from &quot;./HomePanel.vue&quot;;</span><br><span class="line">import &#123; getGoods &#125; from &quot;@/apis/home&quot;;</span><br><span class="line">const goodsList = ref([]);</span><br><span class="line">getGoods().then((res) =&gt; &#123;</span><br><span class="line">  goodsList.value = res.data.result;</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;home-product&quot;&gt;</span><br><span class="line">    &lt;HomePanel :title=&quot;cate.name&quot; v-for=&quot;cate in goodsList&quot; :key=&quot;cate.id&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;box&quot;&gt;</span><br><span class="line">        &lt;RouterLink class=&quot;cover&quot; :to=&quot;`/category/$&#123;cate.id&#125;`&quot;&gt;</span><br><span class="line">          &lt;el-image lazy fit=&quot;fill&quot; :src=&quot;cate.picture&quot;&gt;</span><br><span class="line">            &lt;template #error&gt;</span><br><span class="line">              &lt;div class=&quot;image-slot&quot;&gt;</span><br><span class="line">                &lt;el-image src=&quot;@/assets/images/200.png&quot;&gt;&lt;/el-image&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">          &lt;/el-image&gt;</span><br><span class="line">          &lt;strong class=&quot;label&quot;&gt;</span><br><span class="line">            &lt;span&gt;&#123;&#123; cate.name &#125;&#125;馆&lt;/span&gt;</span><br><span class="line">            &lt;span&gt;&#123;&#123; cate.saleInfo &#125;&#125;&lt;/span&gt;</span><br><span class="line">          &lt;/strong&gt;</span><br><span class="line">        &lt;/RouterLink&gt;</span><br><span class="line">        &lt;ul class=&quot;goods-list&quot;&gt;</span><br><span class="line">          &lt;li v-for=&quot;good in cate.goods&quot; :key=&quot;good.id&quot;&gt;</span><br><span class="line">            &lt;GoodsItem :goods=&quot;good&quot; /&gt;</span><br><span class="line">          &lt;/li&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/HomePanel&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class="line">.home-product &#123;</span><br><span class="line">  background: #fff;</span><br><span class="line">  margin-top: -20px;</span><br><span class="line">  .sub &#123;</span><br><span class="line">    margin-bottom: 2px;</span><br><span class="line"></span><br><span class="line">    a &#123;</span><br><span class="line">      padding: 2px 12px;</span><br><span class="line">      font-size: 16px;</span><br><span class="line">      border-radius: 4px;</span><br><span class="line"></span><br><span class="line">      &amp;:hover &#123;</span><br><span class="line">        background: $xtxColor;</span><br><span class="line">        color: #fff;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      &amp;:last-child &#123;</span><br><span class="line">        margin-right: 80px;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .box &#123;</span><br><span class="line">    display: flex;</span><br><span class="line"></span><br><span class="line">    .cover &#123;</span><br><span class="line">      width: 240px;</span><br><span class="line">      height: 610px;</span><br><span class="line">      margin-right: 10px;</span><br><span class="line">      position: relative;</span><br><span class="line"></span><br><span class="line">      img &#123;</span><br><span class="line">        width: 100%;</span><br><span class="line">        height: 100%;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      .label &#123;</span><br><span class="line">        width: 188px;</span><br><span class="line">        height: 66px;</span><br><span class="line">        display: flex;</span><br><span class="line">        font-size: 18px;</span><br><span class="line">        color: #fff;</span><br><span class="line">        line-height: 66px;</span><br><span class="line">        font-weight: normal;</span><br><span class="line">        position: absolute;</span><br><span class="line">        left: 0;</span><br><span class="line">        top: 50%;</span><br><span class="line">        transform: translate3d(0, -50%, 0);</span><br><span class="line"></span><br><span class="line">        span &#123;</span><br><span class="line">          text-align: center;</span><br><span class="line"></span><br><span class="line">          &amp;:first-child &#123;</span><br><span class="line">            width: 76px;</span><br><span class="line">            background: rgba(0, 0, 0, 0.9);</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          &amp;:last-child &#123;</span><br><span class="line">            flex: 1;</span><br><span class="line">            background: rgba(0, 0, 0, 0.7);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .goods-list &#123;</span><br><span class="line">      width: 990px;</span><br><span class="line">      display: flex;</span><br><span class="line">      flex-wrap: wrap;</span><br><span class="line"></span><br><span class="line">      li &#123;</span><br><span class="line">        width: 240px;</span><br><span class="line">        height: 300px;</span><br><span class="line">        margin-right: 10px;</span><br><span class="line">        margin-bottom: 10px;</span><br><span class="line"></span><br><span class="line">        &amp;:nth-last-child(-n + 4) &#123;</span><br><span class="line">          margin-bottom: 0;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &amp;:nth-child(4n) &#123;</span><br><span class="line">          margin-right: 0;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .goods-item &#123;</span><br><span class="line">      display: block;</span><br><span class="line">      width: 220px;</span><br><span class="line">      padding: 20px 30px;</span><br><span class="line">      text-align: center;</span><br><span class="line">      transition: all 0.5s;</span><br><span class="line"></span><br><span class="line">      &amp;:hover &#123;</span><br><span class="line">        transform: translate3d(0, -3px, 0);</span><br><span class="line">        box-shadow: 0 3px 8px rgb(0 0 0 / 20%);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      img &#123;</span><br><span class="line">        width: 160px;</span><br><span class="line">        height: 160px;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      p &#123;</span><br><span class="line">        padding-top: 10px;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      .name &#123;</span><br><span class="line">        font-size: 16px;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      .desc &#123;</span><br><span class="line">        color: #999;</span><br><span class="line">        height: 29px;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      .price &#123;</span><br><span class="line">        color: $priceColor;</span><br><span class="line">        font-size: 20px;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p>同样的结构类似，并且在后面的模块中会多次用到。因此在 src&#x2F;components 下封装一个全局组件 GoodsItem</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import errorIMG from &quot;@/assets/images/200.png&quot;;</span><br><span class="line">defineProps(&#123;</span><br><span class="line">  goods: &#123;</span><br><span class="line">    type: Object,</span><br><span class="line">    default: () =&gt; &#123;&#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;RouterLink :to=&quot;`/goodsInfo/$&#123;goods.id&#125;`&quot; class=&quot;goods-item&quot;&gt;</span><br><span class="line">    &lt;el-image lazy :src=&quot;goods.picture&quot; alt=&quot;&quot;&gt;</span><br><span class="line">      &lt;template #error&gt;</span><br><span class="line">        &lt;div class=&quot;image-slot&quot;&gt;</span><br><span class="line">          &lt;el-image :src=&quot;errorIMG&quot;&gt;&lt;/el-image&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/template&gt;</span><br><span class="line">    &lt;/el-image&gt;</span><br><span class="line">    &lt;p class=&quot;name ellipsis&quot;&gt;&#123;&#123; goods.name &#125;&#125;&lt;/p&gt;</span><br><span class="line">    &lt;p class=&quot;desc ellipsis&quot;&gt;&#123;&#123; goods.desc &#125;&#125;&lt;/p&gt;</span><br><span class="line">    &lt;p class=&quot;price&quot;&gt;&amp;yen;&#123;&#123; goods.price &#125;&#125;&lt;/p&gt;</span><br><span class="line">  &lt;/RouterLink&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class="line">.goods-item &#123;</span><br><span class="line">  display: block;</span><br><span class="line">  width: 220px;</span><br><span class="line">  padding: 20px 30px;</span><br><span class="line">  text-align: center;</span><br><span class="line">  transition: all 0.5s;</span><br><span class="line"></span><br><span class="line">  &amp;:hover &#123;</span><br><span class="line">    transform: translate3d(0, -3px, 0);</span><br><span class="line">    box-shadow: 0 3px 8px rgb(0 0 0 / 20%);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  img &#123;</span><br><span class="line">    width: 160px;</span><br><span class="line">    height: 160px;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  p &#123;</span><br><span class="line">    padding-top: 10px;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .name &#123;</span><br><span class="line">    font-size: 16px;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .desc &#123;</span><br><span class="line">    color: #999;</span><br><span class="line">    height: 29px;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .price &#123;</span><br><span class="line">    color: $priceColor;</span><br><span class="line">    font-size: 20px;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p>不要忘了全局注册它</p>
<p>在 src&#x2F;components&#x2F;index.js</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 通用组件全局注册</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">GoodsItem</span> <span class="keyword">from</span> <span class="string">&quot;./GoodsItem.vue&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="title function_">install</span>(<span class="params">app</span>) &#123;</span><br><span class="line">    app.<span class="title function_">component</span>(<span class="string">&quot;GoodsItem&quot;</span>, <span class="title class_">GoodsItem</span>);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>main.js 中</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// ...省略其他代码</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Components</span> <span class="keyword">from</span> <span class="string">&quot;./components/index.js&quot;</span>;</span><br><span class="line">app.<span class="title function_">use</span>(<span class="title class_">Components</span>);</span><br><span class="line"><span class="comment">// ...省略其他代码</span></span><br></pre></td></tr></table></figure>

<h3 id="2、实现数据懒加载和图片懒加载"><a href="#2、实现数据懒加载和图片懒加载" class="headerlink" title="2、实现数据懒加载和图片懒加载"></a>2、实现数据懒加载和图片懒加载</h3><p>对于这种页面较长的网页，可以使用数据懒加载来优化性能。</p>
<p>数据懒加载的核心逻辑：当页面滚动到当前模块，也即模块在可视区域时才发起请求加载数据。而不是一上来就将数据全部加载。问题的关键在于如何判断模块是否处于可视区域了呢。</p>
<p>这里同样使用@vueuse&#x2F;core 提供的 useIntersectionObserver 方法，它可以方便的检测模块是否处于可视区域</p>
<p>由于这是一个公共的方法，因此在 src 下新建 hooks&#x2F;request-lazy.js</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 利用vueuse的useIntersectionObserver封装一个请求懒加载的方法</span></span><br><span class="line"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useIntersectionObserver &#125; <span class="keyword">from</span> <span class="string">&quot;@vueuse/core&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">useRequestLazy</span>(<span class="params">apiFn</span>) &#123;</span><br><span class="line">  <span class="comment">// 定义一个判断数据是否在加载的变量</span></span><br><span class="line">  <span class="keyword">const</span> isLoading = <span class="title function_">ref</span>(<span class="literal">true</span>);</span><br><span class="line">  <span class="comment">// 监视的目标ref对象容器，最后返回出去</span></span><br><span class="line">  <span class="keyword">const</span> target = <span class="title function_">ref</span>(<span class="literal">null</span>);</span><br><span class="line">  <span class="comment">// 发送请求得到的数据</span></span><br><span class="line">  <span class="keyword">const</span> list = <span class="title function_">ref</span>([]);</span><br><span class="line">  <span class="keyword">const</span> &#123; stop &#125; = <span class="title function_">useIntersectionObserver</span>(target, <span class="function">(<span class="params">[&#123; isIntersecting &#125;]</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 进入可视区域的逻辑</span></span><br><span class="line">    <span class="keyword">if</span> (isIntersecting) &#123;</span><br><span class="line">      <span class="title function_">stop</span>();</span><br><span class="line">      <span class="title function_">apiFn</span>().<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">        list.<span class="property">value</span> = res.<span class="property">data</span>.<span class="property">result</span>;</span><br><span class="line">        isLoading.<span class="property">value</span> = <span class="literal">false</span>;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    target,</span><br><span class="line">    list,</span><br><span class="line">    isLoading,</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>以后就可以在需要做数据懒加载的地方使用它了</p>
<p>图片懒加载我直接使用了 el-image 的 lazy 属性，当然也可以自己封装一个图片懒加载自定义指令来实现。图片懒加载自定义指令的核心逻辑与数据懒加载一样，因此它主要还是用到@vueuse&#x2F;core 提供的 useIntersectionObserver 方法</p>
<h3 id="3、骨架屏效果"><a href="#3、骨架屏效果" class="headerlink" title="3、骨架屏效果"></a>3、骨架屏效果</h3><p>为了优化用户体验，这种涉及图片较多、页面较长、加载速度可能较慢的网站，可以使用骨架屏效果</p>
<p>**<em>但是，这个项目我用 Element-Plus 提供的骨架屏组件始终不生效，不知道哪里不对</em>**😂😂😂</p>
<h2 id="五、一级分类页"><a href="#五、一级分类页" class="headerlink" title="五、一级分类页"></a>五、一级分类页</h2><h3 id="1、总体架构-2"><a href="#1、总体架构-2" class="headerlink" title="1、总体架构"></a>1、总体架构</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; getTopCategoryAPI &#125; from &quot;@/apis/category&quot;;</span><br><span class="line">import &#123; ref &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123; useRoute, onBeforeRouteUpdate &#125; from &quot;vue-router&quot;;</span><br><span class="line">import &#123; getBannerAPI &#125; from &quot;@/apis/home&quot;;</span><br><span class="line">const route = useRoute();</span><br><span class="line">// 获取一级分类数据</span><br><span class="line">const categoryData = ref(&#123;&#125;);</span><br><span class="line">const getTopCategory = (id) =&gt; &#123;</span><br><span class="line">  getTopCategoryAPI(id).then((res) =&gt; &#123;</span><br><span class="line">    categoryData.value = res.data.result;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line">getTopCategory(route.params.id);</span><br><span class="line">// 会有缓存问题：当路由path一样，参数不同的时候会优先复用路由对应的组件，而不是销毁重建,调用onBeforeRouteUpdate解决该问题，它能检测路由变化</span><br><span class="line">onBeforeRouteUpdate((to) =&gt; getTopCategory(to.params.id));</span><br><span class="line">// 获取轮播图数据</span><br><span class="line">const bannerList = ref([]);</span><br><span class="line">getBannerAPI(2).then((res) =&gt; &#123;</span><br><span class="line">  bannerList.value = res.data.result;</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;top-category&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;container m-top-20&quot;&gt;</span><br><span class="line">      &lt;!-- 面包屑 --&gt;</span><br><span class="line">      &lt;div class=&quot;bread-container&quot;&gt;</span><br><span class="line">        &lt;el-breadcrumb separator=&quot;&gt;&quot;&gt;</span><br><span class="line">          &lt;el-breadcrumb-item :to=&quot;&#123; path: &#x27;/&#x27; &#125;&quot;&gt;首页&lt;/el-breadcrumb-item&gt;</span><br><span class="line">          &lt;el-breadcrumb-item&gt;&#123;&#123; categoryData.name &#125;&#125;&lt;/el-breadcrumb-item&gt;</span><br><span class="line">        &lt;/el-breadcrumb&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;!-- 轮播图 --&gt;</span><br><span class="line">      &lt;el-carousel height=&quot;500px&quot; class=&quot;container&quot;&gt;</span><br><span class="line">        &lt;el-carousel-item v-for=&quot;item in bannerList&quot; :key=&quot;item.id&quot;&gt;</span><br><span class="line">          &lt;img :src=&quot;item.imgUrl&quot; alt=&quot;&quot; /&gt;</span><br><span class="line">        &lt;/el-carousel-item&gt;</span><br><span class="line">      &lt;/el-carousel&gt;</span><br><span class="line">      &lt;!-- 分类数据 --&gt;</span><br><span class="line">      &lt;div class=&quot;sub-list&quot;&gt;</span><br><span class="line">        &lt;h3&gt;全部分类&lt;/h3&gt;</span><br><span class="line">        &lt;ul&gt;</span><br><span class="line">          &lt;li v-for=&quot;i in categoryData.children&quot; :key=&quot;i.id&quot;&gt;</span><br><span class="line">            &lt;RouterLink :to=&quot;`/category/sub/$&#123;i.id&#125;`&quot;&gt;</span><br><span class="line">              &lt;img :src=&quot;i.picture&quot; /&gt;</span><br><span class="line">              &lt;p&gt;&#123;&#123; i.name &#125;&#125;&lt;/p&gt;</span><br><span class="line">            &lt;/RouterLink&gt;</span><br><span class="line">          &lt;/li&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        class=&quot;ref-goods&quot;</span><br><span class="line">        v-for=&quot;item in categoryData.children&quot;</span><br><span class="line">        :key=&quot;item.id&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;div class=&quot;head&quot;&gt;</span><br><span class="line">          &lt;h3&gt;- &#123;&#123; item.name &#125;&#125;-&lt;/h3&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;body&quot;&gt;</span><br><span class="line">          &lt;GoodsItem v-for=&quot;good in item.goods&quot; :goods=&quot;good&quot; :key=&quot;good.id&quot; /&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class="line">.top-category &#123;</span><br><span class="line">  h3 &#123;</span><br><span class="line">    font-size: 28px;</span><br><span class="line">    color: #666;</span><br><span class="line">    font-weight: normal;</span><br><span class="line">    text-align: center;</span><br><span class="line">    line-height: 100px;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .sub-list &#123;</span><br><span class="line">    margin-top: 20px;</span><br><span class="line">    background-color: #fff;</span><br><span class="line"></span><br><span class="line">    ul &#123;</span><br><span class="line">      display: flex;</span><br><span class="line">      padding: 0 32px;</span><br><span class="line">      flex-wrap: wrap;</span><br><span class="line"></span><br><span class="line">      li &#123;</span><br><span class="line">        width: 168px;</span><br><span class="line">        height: 160px;</span><br><span class="line"></span><br><span class="line">        a &#123;</span><br><span class="line">          text-align: center;</span><br><span class="line">          display: block;</span><br><span class="line">          font-size: 16px;</span><br><span class="line"></span><br><span class="line">          img &#123;</span><br><span class="line">            width: 100px;</span><br><span class="line">            height: 100px;</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          p &#123;</span><br><span class="line">            line-height: 40px;</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          &amp;:hover &#123;</span><br><span class="line">            color: $xtxColor;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .ref-goods &#123;</span><br><span class="line">    background-color: #fff;</span><br><span class="line">    margin-top: 20px;</span><br><span class="line">    position: relative;</span><br><span class="line"></span><br><span class="line">    .head &#123;</span><br><span class="line">      .xtx-more &#123;</span><br><span class="line">        position: absolute;</span><br><span class="line">        top: 20px;</span><br><span class="line">        right: 20px;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      .tag &#123;</span><br><span class="line">        text-align: center;</span><br><span class="line">        color: #999;</span><br><span class="line">        font-size: 20px;</span><br><span class="line">        position: relative;</span><br><span class="line">        top: -20px;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .body &#123;</span><br><span class="line">      display: flex;</span><br><span class="line">      justify-content: space-around;</span><br><span class="line">      padding: 0 40px 30px;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .bread-container &#123;</span><br><span class="line">    padding: 25px 0;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<h3 id="2、路由缓存问题解决"><a href="#2、路由缓存问题解决" class="headerlink" title="2、路由缓存问题解决"></a>2、路由缓存问题解决</h3><p>使用带有参数的路由时需要注意的是，当路由 path 一样，参数不同的时候<strong>相同的组件实例将被重复使用</strong>。因为两个路由都渲染同个组件，比起销毁再创建，复用则显得更加高效。<strong>不过，这也意味着组件的生命周期钩子不会被调用</strong>。因此当我们在不同分类间切换时会发现，路径确实发生了变化，但对应的页面并没有任何变化</p>
<p>解决方案：使用 onBeforeRouteUpdate 钩子函数，做精确更新</p>
<p><em>详情参考<a href="https://router.vuejs.org/zh/guide/essentials/dynamic-matching.html#%E5%93%8D%E5%BA%94%E8%B7%AF%E7%94%B1%E5%8F%82%E6%95%B0%E7%9A%84%E5%8F%98%E5%8C%96">https://router.vuejs.org/zh/guide/essentials/dynamic-matching.html#%E5%93%8D%E5%BA%94%E8%B7%AF%E7%94%B1%E5%8F%82%E6%95%B0%E7%9A%84%E5%8F%98%E5%8C%96</a></em></p>
<h2 id="六、二级分类页"><a href="#六、二级分类页" class="headerlink" title="六、二级分类页"></a>六、二级分类页</h2><h3 id="1、整体架构"><a href="#1、整体架构" class="headerlink" title="1、整体架构"></a>1、整体架构</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; getCategoryFilterAPI, getSubCategoryAPI &#125; from &quot;@/apis/sub-category&quot;;</span><br><span class="line">import &#123; useRoute &#125; from &quot;vue-router&quot;;</span><br><span class="line">import &#123; ref &#125; from &quot;vue&quot;;</span><br><span class="line">import GoodsItem from &quot;@/components/GoodsItem.vue&quot;;</span><br><span class="line">const route = useRoute();</span><br><span class="line">const subCategoryData = ref(&#123;&#125;);</span><br><span class="line">const activeName = ref(&quot;publishTime&quot;);</span><br><span class="line">getCategoryFilterAPI(route.params.id).then((res) =&gt; &#123;</span><br><span class="line">  subCategoryData.value = res.data.result;</span><br><span class="line">&#125;);</span><br><span class="line">// 选项卡改变时</span><br><span class="line">const queryData = ref(&#123;</span><br><span class="line">  categoryId: subCategoryData.value.parentId,</span><br><span class="line">  page: 1,</span><br><span class="line">  pageSize: 20,</span><br><span class="line">  sortField: &quot;publishTime&quot;,</span><br><span class="line">&#125;);</span><br><span class="line">const goodsList = ref([]);</span><br><span class="line">const getSubCategory = () =&gt; &#123;</span><br><span class="line">  getSubCategoryAPI(queryData.value).then((res) =&gt; &#123;</span><br><span class="line">    goodsList.value = [...goodsList.value, ...res.data.result.items];</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line">getSubCategory();</span><br><span class="line">const changeSelected = (val) =&gt; &#123;</span><br><span class="line">  queryData.value.sortField = val;</span><br><span class="line">  getSubCategory();</span><br><span class="line">&#125;;</span><br><span class="line">// 无限滚动加载</span><br><span class="line">const disabled = ref(false);</span><br><span class="line">const load = () =&gt; &#123;</span><br><span class="line">  queryData.value.page++;</span><br><span class="line">  getSubCategoryAPI(queryData.value).then((res) =&gt; &#123;</span><br><span class="line">    goodsList.value = [...goodsList.value, ...res.data.result.items];</span><br><span class="line">    if (!res.data.result.items.length) disabled.value = true;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">    &lt;!-- 面包屑 --&gt;</span><br><span class="line">    &lt;div class=&quot;bread-container&quot;&gt;</span><br><span class="line">      &lt;el-breadcrumb separator=&quot;&gt;&quot;&gt;</span><br><span class="line">        &lt;el-breadcrumb-item :to=&quot;&#123; path: &#x27;/&#x27; &#125;&quot;&gt;首页&lt;/el-breadcrumb-item&gt;</span><br><span class="line">        &lt;el-breadcrumb-item :to=&quot;`/category/$&#123;subCategoryData.parentId&#125;`&quot;&gt;&#123;&#123;</span><br><span class="line">          subCategoryData.parentName</span><br><span class="line">        &#125;&#125;&lt;/el-breadcrumb-item&gt;</span><br><span class="line">        &lt;el-breadcrumb-item&gt;&#123;&#123; subCategoryData.name &#125;&#125;&lt;/el-breadcrumb-item&gt;</span><br><span class="line">      &lt;/el-breadcrumb&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;sub-container&quot;&gt;</span><br><span class="line">      &lt;el-tabs @tab-change=&quot;changeSelected&quot; v-model=&quot;activeName&quot;&gt;</span><br><span class="line">        &lt;el-tab-pane label=&quot;最新商品&quot; name=&quot;publishTime&quot;&gt;&lt;/el-tab-pane&gt;</span><br><span class="line">        &lt;el-tab-pane label=&quot;最高人气&quot; name=&quot;orderNum&quot;&gt;&lt;/el-tab-pane&gt;</span><br><span class="line">        &lt;el-tab-pane label=&quot;评论最多&quot; name=&quot;evaluateNum&quot;&gt;&lt;/el-tab-pane&gt;</span><br><span class="line">      &lt;/el-tabs&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        class=&quot;body&quot;</span><br><span class="line">        v-infinite-scroll=&quot;load&quot;</span><br><span class="line">        :infinite-scroll-disabled=&quot;disabled&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;!-- 商品列表--&gt;</span><br><span class="line">        &lt;GoodsItem v-for=&quot;item in goodsList&quot; :key=&quot;item.id&quot; :goods=&quot;item&quot; /&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;scss&quot; scoped&gt;</span><br><span class="line">.bread-container &#123;</span><br><span class="line">  padding: 25px 0;</span><br><span class="line">  color: #666;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.sub-container &#123;</span><br><span class="line">  padding: 20px 10px;</span><br><span class="line">  background-color: #fff;</span><br><span class="line"></span><br><span class="line">  .body &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    flex-wrap: wrap;</span><br><span class="line">    padding: 0 10px;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .goods-item &#123;</span><br><span class="line">    display: block;</span><br><span class="line">    width: 220px;</span><br><span class="line">    margin-right: 20px;</span><br><span class="line">    padding: 20px 30px;</span><br><span class="line">    text-align: center;</span><br><span class="line"></span><br><span class="line">    img &#123;</span><br><span class="line">      width: 160px;</span><br><span class="line">      height: 160px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    p &#123;</span><br><span class="line">      padding-top: 10px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .name &#123;</span><br><span class="line">      font-size: 16px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .desc &#123;</span><br><span class="line">      color: #999;</span><br><span class="line">      height: 29px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .price &#123;</span><br><span class="line">      color: $priceColor;</span><br><span class="line">      font-size: 20px;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .pagination-container &#123;</span><br><span class="line">    margin-top: 20px;</span><br><span class="line">    display: flex;</span><br><span class="line">    justify-content: center;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<h2 id="七、商品详情"><a href="#七、商品详情" class="headerlink" title="七、商品详情"></a>七、商品详情</h2><h3 id="1、整体架构-1"><a href="#1、整体架构-1" class="headerlink" title="1、整体架构"></a>1、整体架构</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; getDetail &#125; from &quot;@/apis/goodsInfo&quot;;</span><br><span class="line">import &#123; ref, onMounted &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123; useRoute &#125; from &quot;vue-router&quot;;</span><br><span class="line">import GoodsHot from &quot;./goodsHot.vue&quot;;</span><br><span class="line">import GoodsPreview from &quot;@/components/goodsPreview.vue&quot;;</span><br><span class="line">import GoodsSKU from &quot;@/XtxSku/index.vue&quot;;</span><br><span class="line">import &#123; useCartStore &#125; from &quot;@/stores/cart&quot;;</span><br><span class="line">import &#123; ElMessage &#125; from &quot;element-plus&quot;;</span><br><span class="line">const route = useRoute();</span><br><span class="line">const goodsInfo = ref(&#123;&#125;);</span><br><span class="line">const getGoodsInfo = async () =&gt; &#123;</span><br><span class="line">  const &#123; data &#125; = await getDetail(route.params.id);</span><br><span class="line">  goodsInfo.value = data.result;</span><br><span class="line">&#125;;</span><br><span class="line">onMounted(() =&gt; &#123;</span><br><span class="line">  getGoodsInfo();</span><br><span class="line">&#125;);</span><br><span class="line">// 数量数据</span><br><span class="line">const count = ref(1);</span><br><span class="line">const countChange = (val) =&gt; &#123;</span><br><span class="line">  count.value = val;</span><br><span class="line">&#125;;</span><br><span class="line">// SKU组件得到的数据</span><br><span class="line">const SKUData = ref(&#123;&#125;);</span><br><span class="line">const change = (data) =&gt; &#123;</span><br><span class="line">  SKUData.value = data;</span><br><span class="line">&#125;;</span><br><span class="line">// 加入购物车</span><br><span class="line">const &#123; addCart &#125; = useCartStore();</span><br><span class="line">const addtocart = () =&gt; &#123;</span><br><span class="line">  if (!SKUData.value.skuId) return ElMessage.warning(&quot;请选择规格&quot;);</span><br><span class="line">  addCart(&#123;</span><br><span class="line">    id: goodsInfo.value.id,</span><br><span class="line">    name: goodsInfo.value.name,</span><br><span class="line">    picture: goodsInfo.value.mainPictures[0],</span><br><span class="line">    price: goodsInfo.value.price,</span><br><span class="line">    count: count.value,</span><br><span class="line">    skuId: SKUData.value.skuId,</span><br><span class="line">    attrsText: SKUData.value.specsText,</span><br><span class="line">    selected: true,</span><br><span class="line">  &#125;);</span><br><span class="line">  ElMessage.success(&quot;加入购物车成功&quot;);</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;xtx-goods-page&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;bread-container&quot;&gt;</span><br><span class="line">        &lt;el-breadcrumb separator=&quot;&gt;&quot; v-if=&quot;goodsInfo.categories&quot;&gt;</span><br><span class="line">          &lt;el-breadcrumb-item :to=&quot;&#123; path: &#x27;/&#x27; &#125;&quot;&gt;首页&lt;/el-breadcrumb-item&gt;</span><br><span class="line">          &lt;el-breadcrumb-item :to=&quot;`category/$&#123;goodsInfo.categories[1].id&#125;`&quot;</span><br><span class="line">            &gt;&#123;&#123; goodsInfo.categories[1].name &#125;&#125;</span><br><span class="line">          &lt;/el-breadcrumb-item&gt;</span><br><span class="line">          &lt;el-breadcrumb-item :to=&quot;`category/sub/$&#123;goodsInfo.categories[0].id&#125;`&quot;</span><br><span class="line">            &gt;&#123;&#123; goodsInfo.categories[0].name &#125;&#125;</span><br><span class="line">          &lt;/el-breadcrumb-item&gt;</span><br><span class="line">          &lt;el-breadcrumb-item&gt;&#123;&#123; goodsInfo.name &#125;&#125;&lt;/el-breadcrumb-item&gt;</span><br><span class="line">        &lt;/el-breadcrumb&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;!-- 商品信息 --&gt;</span><br><span class="line">      &lt;div class=&quot;info-container&quot;&gt;</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">          &lt;div class=&quot;goods-info&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;media&quot;&gt;</span><br><span class="line">              &lt;!-- 图片预览区 --&gt;</span><br><span class="line">              &lt;GoodsPreview :mainPictures=&quot;goodsInfo.mainPictures&quot; /&gt;</span><br><span class="line">              &lt;!-- 统计数量 --&gt;</span><br><span class="line">              &lt;ul class=&quot;goods-sales&quot;&gt;</span><br><span class="line">                &lt;li&gt;</span><br><span class="line">                  &lt;p&gt;销量人气&lt;/p&gt;</span><br><span class="line">                  &lt;p&gt;&#123;&#123; goodsInfo.salesCount &#125;&#125;+&lt;/p&gt;</span><br><span class="line">                  &lt;p&gt;&lt;i class=&quot;iconfont icon-task-filling&quot;&gt;&lt;/i&gt;销量人气&lt;/p&gt;</span><br><span class="line">                &lt;/li&gt;</span><br><span class="line">                &lt;li&gt;</span><br><span class="line">                  &lt;p&gt;商品评价&lt;/p&gt;</span><br><span class="line">                  &lt;p&gt;&#123;&#123; goodsInfo.commentCount &#125;&#125;+&lt;/p&gt;</span><br><span class="line">                  &lt;p&gt;&lt;i class=&quot;iconfont icon-comment-filling&quot;&gt;&lt;/i&gt;查看评价&lt;/p&gt;</span><br><span class="line">                &lt;/li&gt;</span><br><span class="line">                &lt;li&gt;</span><br><span class="line">                  &lt;p&gt;收藏人气&lt;/p&gt;</span><br><span class="line">                  &lt;p&gt;&#123;&#123; goodsInfo.collectCount &#125;&#125;+&lt;/p&gt;</span><br><span class="line">                  &lt;p&gt;&lt;i class=&quot;iconfont icon-favorite-filling&quot;&gt;&lt;/i&gt;收藏商品&lt;/p&gt;</span><br><span class="line">                &lt;/li&gt;</span><br><span class="line">                &lt;li&gt;</span><br><span class="line">                  &lt;p&gt;品牌信息&lt;/p&gt;</span><br><span class="line">                  &lt;p v-if=&quot;goodsInfo.brand&quot;&gt;&#123;&#123; goodsInfo.brand.name &#125;&#125;&lt;/p&gt;</span><br><span class="line">                  &lt;p&gt;&lt;i class=&quot;iconfont icon-dynamic-filling&quot;&gt;&lt;/i&gt;品牌主页&lt;/p&gt;</span><br><span class="line">                &lt;/li&gt;</span><br><span class="line">              &lt;/ul&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;spec&quot;&gt;</span><br><span class="line">              &lt;!-- 商品信息区 --&gt;</span><br><span class="line">              &lt;p class=&quot;g-name&quot;&gt;&#123;&#123; goodsInfo.name &#125;&#125;&lt;/p&gt;</span><br><span class="line">              &lt;p class=&quot;g-desc&quot;&gt;&#123;&#123; goodsInfo.desc &#125;&#125;&lt;/p&gt;</span><br><span class="line">              &lt;p class=&quot;g-price&quot;&gt;</span><br><span class="line">                &lt;span&gt;&#123;&#123; goodsInfo.oldPrice &#125;&#125;&lt;/span&gt;</span><br><span class="line">                &lt;span&gt;&#123;&#123; goodsInfo.price &#125;&#125;&lt;/span&gt;</span><br><span class="line">              &lt;/p&gt;</span><br><span class="line">              &lt;div class=&quot;g-service&quot;&gt;</span><br><span class="line">                &lt;dl&gt;</span><br><span class="line">                  &lt;dt&gt;促销&lt;/dt&gt;</span><br><span class="line">                  &lt;dd&gt;12月好物放送，App领券购买直降120元&lt;/dd&gt;</span><br><span class="line">                &lt;/dl&gt;</span><br><span class="line">                &lt;dl&gt;</span><br><span class="line">                  &lt;dt&gt;服务&lt;/dt&gt;</span><br><span class="line">                  &lt;dd&gt;</span><br><span class="line">                    &lt;span&gt;无忧退货&lt;/span&gt;</span><br><span class="line">                    &lt;span&gt;快速退款&lt;/span&gt;</span><br><span class="line">                    &lt;span&gt;免费包邮&lt;/span&gt;</span><br><span class="line">                    &lt;a href=&quot;javascript:;&quot;&gt;了解详情&lt;/a&gt;</span><br><span class="line">                  &lt;/dd&gt;</span><br><span class="line">                &lt;/dl&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">              &lt;!-- sku组件 --&gt;</span><br><span class="line">              &lt;GoodsSKU :goods=&quot;goodsInfo&quot; @change=&quot;change&quot; /&gt;</span><br><span class="line">              &lt;!-- 数据组件 --&gt;</span><br><span class="line">              &lt;el-input-number v-model=&quot;count&quot; @change=&quot;countChange&quot; /&gt;</span><br><span class="line">              &lt;!-- 按钮组件 --&gt;</span><br><span class="line">              &lt;div&gt;</span><br><span class="line">                &lt;el-button size=&quot;large&quot; class=&quot;btn&quot; @click=&quot;addtocart&quot;&gt;</span><br><span class="line">                  加入购物车</span><br><span class="line">                &lt;/el-button&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;div class=&quot;goods-footer&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;goods-article&quot;&gt;</span><br><span class="line">              &lt;!-- 商品详情 --&gt;</span><br><span class="line">              &lt;div class=&quot;goods-tabs&quot;&gt;</span><br><span class="line">                &lt;nav&gt;</span><br><span class="line">                  &lt;a&gt;商品详情&lt;/a&gt;</span><br><span class="line">                &lt;/nav&gt;</span><br><span class="line">                &lt;div class=&quot;goods-detail&quot; v-if=&quot;goodsInfo.details&quot;&gt;</span><br><span class="line">                  &lt;!-- 属性 --&gt;</span><br><span class="line">                  &lt;ul class=&quot;attrs&quot;&gt;</span><br><span class="line">                    &lt;li</span><br><span class="line">                      v-for=&quot;item in goodsInfo.details.properties&quot;</span><br><span class="line">                      :key=&quot;item.value&quot;</span><br><span class="line">                    &gt;</span><br><span class="line">                      &lt;span class=&quot;dt&quot;&gt;&#123;&#123; item.name &#125;&#125;&lt;/span&gt;</span><br><span class="line">                      &lt;span class=&quot;dd&quot;&gt;&#123;&#123; item.value &#125;&#125;&lt;/span&gt;</span><br><span class="line">                    &lt;/li&gt;</span><br><span class="line">                  &lt;/ul&gt;</span><br><span class="line">                  &lt;!-- 图片 --&gt;</span><br><span class="line">                  &lt;img</span><br><span class="line">                    v-for=&quot;img in goodsInfo.details.pictures&quot;</span><br><span class="line">                    :src=&quot;img&quot;</span><br><span class="line">                    :key=&quot;img&quot;</span><br><span class="line">                    alt=&quot;&quot;</span><br><span class="line">                  /&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;!-- 24热榜+专题推荐 --&gt;</span><br><span class="line">            &lt;div class=&quot;goods-aside&quot;&gt;</span><br><span class="line">              &lt;GoodsHot :type=&quot;1&quot; /&gt;</span><br><span class="line">              &lt;GoodsHot :type=&quot;2&quot; /&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class="line">.xtx-goods-page &#123;</span><br><span class="line">  .goods-info &#123;</span><br><span class="line">    min-height: 600px;</span><br><span class="line">    background: #fff;</span><br><span class="line">    display: flex;</span><br><span class="line"></span><br><span class="line">    .media &#123;</span><br><span class="line">      width: 580px;</span><br><span class="line">      height: 600px;</span><br><span class="line">      padding: 30px 50px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .spec &#123;</span><br><span class="line">      flex: 1;</span><br><span class="line">      padding: 30px 30px 30px 0;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .goods-footer &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    margin-top: 20px;</span><br><span class="line"></span><br><span class="line">    .goods-article &#123;</span><br><span class="line">      width: 940px;</span><br><span class="line">      margin-right: 20px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .goods-aside &#123;</span><br><span class="line">      width: 280px;</span><br><span class="line">      min-height: 1000px;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .goods-tabs &#123;</span><br><span class="line">    min-height: 600px;</span><br><span class="line">    background: #fff;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .goods-warn &#123;</span><br><span class="line">    min-height: 600px;</span><br><span class="line">    background: #fff;</span><br><span class="line">    margin-top: 20px;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .number-box &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    align-items: center;</span><br><span class="line"></span><br><span class="line">    .label &#123;</span><br><span class="line">      width: 60px;</span><br><span class="line">      color: #999;</span><br><span class="line">      padding-left: 10px;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .g-name &#123;</span><br><span class="line">    font-size: 22px;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .g-desc &#123;</span><br><span class="line">    color: #999;</span><br><span class="line">    margin-top: 10px;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .g-price &#123;</span><br><span class="line">    margin-top: 10px;</span><br><span class="line"></span><br><span class="line">    span &#123;</span><br><span class="line">      &amp;::before &#123;</span><br><span class="line">        content: &quot;¥&quot;;</span><br><span class="line">        font-size: 14px;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      &amp;:first-child &#123;</span><br><span class="line">        color: $priceColor;</span><br><span class="line">        margin-right: 10px;</span><br><span class="line">        font-size: 22px;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      &amp;:last-child &#123;</span><br><span class="line">        color: #999;</span><br><span class="line">        text-decoration: line-through;</span><br><span class="line">        font-size: 16px;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .g-service &#123;</span><br><span class="line">    background: #f5f5f5;</span><br><span class="line">    width: 500px;</span><br><span class="line">    padding: 20px 10px 0 10px;</span><br><span class="line">    margin-top: 10px;</span><br><span class="line"></span><br><span class="line">    dl &#123;</span><br><span class="line">      padding-bottom: 20px;</span><br><span class="line">      display: flex;</span><br><span class="line">      align-items: center;</span><br><span class="line"></span><br><span class="line">      dt &#123;</span><br><span class="line">        width: 50px;</span><br><span class="line">        color: #999;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      dd &#123;</span><br><span class="line">        color: #666;</span><br><span class="line"></span><br><span class="line">        &amp;:last-child &#123;</span><br><span class="line">          span &#123;</span><br><span class="line">            margin-right: 10px;</span><br><span class="line"></span><br><span class="line">            &amp;::before &#123;</span><br><span class="line">              content: &quot;•&quot;;</span><br><span class="line">              color: $xtxColor;</span><br><span class="line">              margin-right: 2px;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          a &#123;</span><br><span class="line">            color: $xtxColor;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .goods-sales &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    width: 400px;</span><br><span class="line">    align-items: center;</span><br><span class="line">    text-align: center;</span><br><span class="line">    height: 140px;</span><br><span class="line"></span><br><span class="line">    li &#123;</span><br><span class="line">      flex: 1;</span><br><span class="line">      position: relative;</span><br><span class="line"></span><br><span class="line">      ~ li::after &#123;</span><br><span class="line">        position: absolute;</span><br><span class="line">        top: 10px;</span><br><span class="line">        left: 0;</span><br><span class="line">        height: 60px;</span><br><span class="line">        border-left: 1px solid #e4e4e4;</span><br><span class="line">        content: &quot;&quot;;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      p &#123;</span><br><span class="line">        &amp;:first-child &#123;</span><br><span class="line">          color: #999;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &amp;:nth-child(2) &#123;</span><br><span class="line">          color: $priceColor;</span><br><span class="line">          margin-top: 10px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &amp;:last-child &#123;</span><br><span class="line">          color: #666;</span><br><span class="line">          margin-top: 10px;</span><br><span class="line"></span><br><span class="line">          i &#123;</span><br><span class="line">            color: $xtxColor;</span><br><span class="line">            font-size: 14px;</span><br><span class="line">            margin-right: 2px;</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          &amp;:hover &#123;</span><br><span class="line">            color: $xtxColor;</span><br><span class="line">            cursor: pointer;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.goods-tabs &#123;</span><br><span class="line">  min-height: 600px;</span><br><span class="line">  background: #fff;</span><br><span class="line"></span><br><span class="line">  nav &#123;</span><br><span class="line">    height: 70px;</span><br><span class="line">    line-height: 70px;</span><br><span class="line">    display: flex;</span><br><span class="line">    border-bottom: 1px solid #f5f5f5;</span><br><span class="line"></span><br><span class="line">    a &#123;</span><br><span class="line">      padding: 0 40px;</span><br><span class="line">      font-size: 18px;</span><br><span class="line">      position: relative;</span><br><span class="line"></span><br><span class="line">      &gt; span &#123;</span><br><span class="line">        color: $priceColor;</span><br><span class="line">        font-size: 16px;</span><br><span class="line">        margin-left: 10px;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.goods-detail &#123;</span><br><span class="line">  padding: 40px;</span><br><span class="line"></span><br><span class="line">  .attrs &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    flex-wrap: wrap;</span><br><span class="line">    margin-bottom: 30px;</span><br><span class="line"></span><br><span class="line">    li &#123;</span><br><span class="line">      display: flex;</span><br><span class="line">      margin-bottom: 10px;</span><br><span class="line">      width: 50%;</span><br><span class="line"></span><br><span class="line">      .dt &#123;</span><br><span class="line">        width: 100px;</span><br><span class="line">        color: #999;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      .dd &#123;</span><br><span class="line">        flex: 1;</span><br><span class="line">        color: #666;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  &gt; img &#123;</span><br><span class="line">    width: 100%;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.btn &#123;</span><br><span class="line">  margin-top: 20px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.bread-container &#123;</span><br><span class="line">  padding: 25px 0;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p>其中热榜组件 goodsHot</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; fetchHotGoodsAPI &#125; from &quot;@/apis/goodsInfo&quot;;</span><br><span class="line">import &#123; ref, onMounted &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123; useRoute &#125; from &quot;vue-router&quot;;</span><br><span class="line">const route = useRoute();</span><br><span class="line">const queryData = defineProps([&quot;type&quot;]);</span><br><span class="line">const hotGoods = ref([]);</span><br><span class="line">const getHotGoods = async () =&gt; &#123;</span><br><span class="line">  const &#123; data &#125; = await fetchHotGoodsAPI(&#123;</span><br><span class="line">    id: route.params.id,</span><br><span class="line">    type: queryData.type,</span><br><span class="line">  &#125;);</span><br><span class="line">  hotGoods.value = data.result;</span><br><span class="line">&#125;;</span><br><span class="line">onMounted(() =&gt; &#123;</span><br><span class="line">  getHotGoods();</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;goods-hot&quot;&gt;</span><br><span class="line">    &lt;h3&gt;&#123;&#123; queryData.type === 1 ? &quot;24小时热销榜&quot; : &quot;周热销榜&quot; &#125;&#125;&lt;/h3&gt;</span><br><span class="line">    &lt;!-- 商品区块 --&gt;</span><br><span class="line">    &lt;RouterLink</span><br><span class="line">      :to=&quot;`/goodsInfo/$&#123;item.id&#125;`&quot;</span><br><span class="line">      class=&quot;goods-item&quot;</span><br><span class="line">      v-for=&quot;item in hotGoods&quot;</span><br><span class="line">      :key=&quot;item.id&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;img :src=&quot;item.picture&quot; alt=&quot;&quot; /&gt;</span><br><span class="line">      &lt;p class=&quot;name ellipsis&quot;&gt;&#123;&#123; item.name &#125;&#125;&lt;/p&gt;</span><br><span class="line">      &lt;p class=&quot;desc ellipsis&quot;&gt;&#123;&#123; item.desc &#125;&#125;&lt;/p&gt;</span><br><span class="line">      &lt;p class=&quot;price&quot;&gt;&amp;yen;&#123;&#123; item.price &#125;&#125;&lt;/p&gt;</span><br><span class="line">    &lt;/RouterLink&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class="line">.goods-hot &#123;</span><br><span class="line">  h3 &#123;</span><br><span class="line">    height: 70px;</span><br><span class="line">    background: $helpColor;</span><br><span class="line">    color: #fff;</span><br><span class="line">    font-size: 18px;</span><br><span class="line">    line-height: 70px;</span><br><span class="line">    padding-left: 25px;</span><br><span class="line">    margin-bottom: 10px;</span><br><span class="line">    font-weight: normal;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .goods-item &#123;</span><br><span class="line">    display: block;</span><br><span class="line">    padding: 20px 30px;</span><br><span class="line">    text-align: center;</span><br><span class="line">    background: #fff;</span><br><span class="line"></span><br><span class="line">    img &#123;</span><br><span class="line">      width: 160px;</span><br><span class="line">      height: 160px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    p &#123;</span><br><span class="line">      padding-top: 10px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .name &#123;</span><br><span class="line">      font-size: 16px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .desc &#123;</span><br><span class="line">      color: #999;</span><br><span class="line">      height: 29px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .price &#123;</span><br><span class="line">      color: $priceColor;</span><br><span class="line">      font-size: 20px;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p>图片预览组件 goodsPreview</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; ref, onMounted, watch, computed &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123; useMouseInElement &#125; from &quot;@vueuse/core&quot;;</span><br><span class="line">// 图片列表</span><br><span class="line">defineProps(&#123;</span><br><span class="line">  mainPictures: &#123;</span><br><span class="line">    type: Array,</span><br><span class="line">    default: () =&gt; [],</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line">// 当前选中的图片索引</span><br><span class="line">const currentIndex = ref(0);</span><br><span class="line">// 获取鼠标相对位置</span><br><span class="line">const target = ref(null);</span><br><span class="line">const &#123; elementX, elementY, isOutside &#125; = useMouseInElement(target);</span><br><span class="line">const X = ref(0);</span><br><span class="line">const Y = ref(0);</span><br><span class="line">// 监听鼠标相对位置的变化</span><br><span class="line">watch([elementX, elementY, isOutside], () =&gt; &#123;</span><br><span class="line">  if (isOutside.value) &#123;</span><br><span class="line">    return;</span><br><span class="line">  &#125;</span><br><span class="line">  if (elementX.value &gt; 100 &amp;&amp; elementX.value &lt; 300) &#123;</span><br><span class="line">    X.value = elementX.value - 100;</span><br><span class="line">  &#125; else if (elementX.value &lt;= 100) &#123;</span><br><span class="line">    X.value = 0;</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    X.value = 200;</span><br><span class="line">  &#125;</span><br><span class="line">  if (elementY.value &gt; 100 &amp;&amp; elementY.value &lt; 300) &#123;</span><br><span class="line">    Y.value = elementY.value - 100;</span><br><span class="line">  &#125; else if (elementY.value &lt;= 100) &#123;</span><br><span class="line">    Y.value = 0;</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    Y.value = 200;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line">const positionX = computed(() =&gt; -X.value * 2);</span><br><span class="line">const positionY = computed(() =&gt; -Y.value * 2);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;goods-image&quot;&gt;</span><br><span class="line">    &lt;!-- 左侧大图--&gt;</span><br><span class="line">    &lt;div class=&quot;middle&quot; ref=&quot;target&quot;&gt;</span><br><span class="line">      &lt;img :src=&quot;mainPictures[currentIndex]&quot; alt=&quot;&quot; /&gt;</span><br><span class="line">      &lt;!-- 蒙层小滑块 --&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        class=&quot;layer&quot;</span><br><span class="line">        v-show=&quot;!isOutside&quot;</span><br><span class="line">        :style=&quot;&#123; left: `$&#123;X&#125;px`, top: `$&#123;Y&#125;px` &#125;&quot;</span><br><span class="line">      &gt;&lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;!-- 小图列表 --&gt;</span><br><span class="line">    &lt;ul class=&quot;small&quot;&gt;</span><br><span class="line">      &lt;li</span><br><span class="line">        v-for=&quot;(img, i) in mainPictures&quot;</span><br><span class="line">        :key=&quot;i&quot;</span><br><span class="line">        @mouseenter=&quot;currentIndex = i&quot;</span><br><span class="line">        :class=&quot;&#123; active: currentIndex === i &#125;&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;img :src=&quot;img&quot; alt=&quot;&quot; /&gt;</span><br><span class="line">      &lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">    &lt;!-- 放大镜大图 --&gt;</span><br><span class="line">    &lt;div</span><br><span class="line">      class=&quot;large&quot;</span><br><span class="line">      :style=&quot;[</span><br><span class="line">        &#123;</span><br><span class="line">          backgroundImage: `url($&#123;mainPictures[currentIndex]&#125;)`,</span><br><span class="line">          backgroundPositionX: `$&#123;positionX&#125;px`,</span><br><span class="line">          backgroundPositionY: `$&#123;positionY&#125;px`,</span><br><span class="line">        &#125;,</span><br><span class="line">      ]&quot;</span><br><span class="line">      v-show=&quot;!isOutside&quot;</span><br><span class="line">    &gt;&lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class="line">.goods-image &#123;</span><br><span class="line">  width: 480px;</span><br><span class="line">  height: 400px;</span><br><span class="line">  position: relative;</span><br><span class="line">  display: flex;</span><br><span class="line"></span><br><span class="line">  .middle &#123;</span><br><span class="line">    width: 400px;</span><br><span class="line">    height: 400px;</span><br><span class="line">    background: #f5f5f5;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .large &#123;</span><br><span class="line">    position: absolute;</span><br><span class="line">    top: 0;</span><br><span class="line">    left: 412px;</span><br><span class="line">    width: 400px;</span><br><span class="line">    height: 400px;</span><br><span class="line">    z-index: 500;</span><br><span class="line">    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);</span><br><span class="line">    background-repeat: no-repeat;</span><br><span class="line">    // 背景图:盒子的大小 = 2:1  将来控制背景图的移动来实现放大的效果查看 background-position</span><br><span class="line">    background-size: 800px 800px;</span><br><span class="line">    background-color: #f8f8f8;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .layer &#123;</span><br><span class="line">    width: 200px;</span><br><span class="line">    height: 200px;</span><br><span class="line">    background: rgba(0, 0, 0, 0.2);</span><br><span class="line">    // 绝对定位 然后跟随咱们鼠标控制left和top属性就可以让滑块移动起来</span><br><span class="line">    left: 0;</span><br><span class="line">    top: 0;</span><br><span class="line">    position: absolute;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .small &#123;</span><br><span class="line">    width: 80px;</span><br><span class="line"></span><br><span class="line">    li &#123;</span><br><span class="line">      width: 68px;</span><br><span class="line">      height: 68px;</span><br><span class="line">      margin-left: 12px;</span><br><span class="line">      margin-bottom: 15px;</span><br><span class="line">      cursor: pointer;</span><br><span class="line"></span><br><span class="line">      &amp;:hover,</span><br><span class="line">      &amp;.active &#123;</span><br><span class="line">        border: 2px solid $xtxColor;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<h3 id="2、图片预览组件"><a href="#2、图片预览组件" class="headerlink" title="2、图片预览组件"></a>2、图片预览组件</h3><p>功能拆解：</p>
<ol>
<li><p>通过小图切换大图显示</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230605085705589.png" alt="image-20230605085705589"></p>
</li>
<li><p>放大镜效果</p>
</li>
</ol>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230605085737400.png" alt="image-20230605085737400"></p>
<p>小图切换大图实现起来比较简单，主要是放大镜效果有点复杂，我们再对其进行进一步分解：</p>
<ol>
<li><p>左侧滑块跟随鼠标移动</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230605090240710.png" alt="image-20230605090240710"></p>
</li>
<li><p>右侧大图放大效果实现</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230605090400445.png" alt="image-20230605090400445"></p>
</li>
<li><p>鼠标移入控制滑块和大图显示隐藏</p>
</li>
</ol>
<h3 id="3、规格组件-SKU-amp-SPU"><a href="#3、规格组件-SKU-amp-SPU" class="headerlink" title="3、规格组件 SKU&amp;SPU"></a>3、规格组件 SKU&amp;SPU</h3><ul>
<li>SPU（Standard Product Unit）：标准化产品单元。是商品信息聚合的最小单位，是一组可复用、易检索的标准化信息的集合，该集合描述了一个产品的特性。通俗点讲，属性值、特性相同的商品就可以称为一个 SPU。</li>
<li>SKU（Stock Keeping Unit）库存量单位，即库存进出计量的单位， 可以是以件、盒、托盘等为单位。SKU 是物理上不可分割的最小存货单元。在使用时要根据不同业态，不同管理模式来处理</li>
</ul>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230605090703869.png" alt="image-20230605090703869"></p>
<p>即，spu 代表一个商品，拥有很多相同的属性。sku 代表该商品可选规格的任意组合，他是库存单位的唯一标识。</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230605090822108.png" alt="image-20230605090822108"></p>
<h2 id="八、登录页"><a href="#八、登录页" class="headerlink" title="八、登录页"></a>八、登录页</h2><h3 id="1、整体架构-2"><a href="#1、整体架构-2" class="headerlink" title="1、整体架构"></a>1、整体架构</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; ElMessage &#125; from &quot;element-plus&quot;;</span><br><span class="line">import &#123; ref, toRefs &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123; useUserInfoStore &#125; from &quot;@/stores/userInfo&quot;;</span><br><span class="line">const ruleFormRef = ref(null);</span><br><span class="line">const ruleForm = ref(&#123;</span><br><span class="line">  account: &quot;&quot;,</span><br><span class="line">  password: &quot;&quot;,</span><br><span class="line">  agreement: false,</span><br><span class="line">&#125;);</span><br><span class="line">// 单独校验是否同意条款</span><br><span class="line">const validateAgree = (rule, value, callback) =&gt; &#123;</span><br><span class="line">  if (value) &#123;</span><br><span class="line">    callback();</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    callback(new Error(&quot;请同意条款&quot;));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">const rules = ref(&#123;</span><br><span class="line">  account: [&#123; required: true, message: &quot;请输入账户&quot;, trigger: &quot;blur&quot; &#125;],</span><br><span class="line">  password: [</span><br><span class="line">    &#123; required: true, message: &quot;请输入密码&quot;, trigger: &quot;blur&quot; &#125;,</span><br><span class="line">    &#123; min: 6, max: 16, message: &quot;长度在 6 到 16 个字符&quot;, trigger: &quot;blur&quot; &#125;,</span><br><span class="line">  ],</span><br><span class="line">  agreement: [&#123; validator: validateAgree, trigger: &quot;change&quot; &#125;],</span><br><span class="line">&#125;);</span><br><span class="line">// 登录按钮</span><br><span class="line">const loginBtn = () =&gt; &#123;</span><br><span class="line">  ruleFormRef.value.validate((valid) =&gt; &#123;</span><br><span class="line">    if (valid) &#123;</span><br><span class="line">      const &#123; getUserInfo &#125; = toRefs(useUserInfoStore());</span><br><span class="line">      getUserInfo.value(ruleForm.value);</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      ElMessage.error(&quot;验证失败&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;header class=&quot;login-header&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;container m-top-20&quot;&gt;</span><br><span class="line">        &lt;h1 class=&quot;logo&quot;&gt;</span><br><span class="line">          &lt;RouterLink to=&quot;/&quot;&gt;小兔鲜&lt;/RouterLink&gt;</span><br><span class="line">        &lt;/h1&gt;</span><br><span class="line">        &lt;RouterLink class=&quot;entry&quot; to=&quot;/&quot;&gt;</span><br><span class="line">          进入网站首页</span><br><span class="line">          &lt;i class=&quot;iconfont icon-angle-right&quot;&gt;&lt;/i&gt;</span><br><span class="line">          &lt;i class=&quot;iconfont icon-angle-right&quot;&gt;&lt;/i&gt;</span><br><span class="line">        &lt;/RouterLink&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/header&gt;</span><br><span class="line">    &lt;section class=&quot;login-section&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;wrapper&quot;&gt;</span><br><span class="line">        &lt;nav&gt;</span><br><span class="line">          &lt;a href=&quot;javascript:;&quot;&gt;账户登录&lt;/a&gt;</span><br><span class="line">        &lt;/nav&gt;</span><br><span class="line">        &lt;div class=&quot;account-box&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;form&quot;&gt;</span><br><span class="line">            &lt;el-form</span><br><span class="line">              label-position=&quot;right&quot;</span><br><span class="line">              label-width=&quot;60px&quot;</span><br><span class="line">              status-icon</span><br><span class="line">              ref=&quot;ruleFormRef&quot;</span><br><span class="line">              :model=&quot;ruleForm&quot;</span><br><span class="line">              :rules=&quot;rules&quot;</span><br><span class="line">            &gt;</span><br><span class="line">              &lt;el-form-item prop=&quot;account&quot; label=&quot;账户&quot;&gt;</span><br><span class="line">                &lt;el-input v-model=&quot;ruleForm.account&quot; /&gt;</span><br><span class="line">              &lt;/el-form-item&gt;</span><br><span class="line">              &lt;el-form-item prop=&quot;password&quot; label=&quot;密码&quot;&gt;</span><br><span class="line">                &lt;el-input</span><br><span class="line">                  type=&quot;password&quot;</span><br><span class="line">                  show-password</span><br><span class="line">                  v-model=&quot;ruleForm.password&quot;</span><br><span class="line">                /&gt;</span><br><span class="line">              &lt;/el-form-item&gt;</span><br><span class="line">              &lt;el-form-item label-width=&quot;22px&quot; prop=&quot;agreement&quot;&gt;</span><br><span class="line">                &lt;el-checkbox size=&quot;large&quot; v-model=&quot;ruleForm.agreement&quot;&gt;</span><br><span class="line">                  我已同意隐私条款和服务条款</span><br><span class="line">                &lt;/el-checkbox&gt;</span><br><span class="line">              &lt;/el-form-item&gt;</span><br><span class="line">              &lt;el-button size=&quot;large&quot; class=&quot;subBtn&quot; @click=&quot;loginBtn&quot;</span><br><span class="line">                &gt;点击登录&lt;/el-button</span><br><span class="line">              &gt;</span><br><span class="line">            &lt;/el-form&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/section&gt;</span><br><span class="line"></span><br><span class="line">    &lt;footer class=&quot;login-footer&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">        &lt;p&gt;</span><br><span class="line">          &lt;a href=&quot;javascript:;&quot;&gt;关于我们&lt;/a&gt;</span><br><span class="line">          &lt;a href=&quot;javascript:;&quot;&gt;帮助中心&lt;/a&gt;</span><br><span class="line">          &lt;a href=&quot;javascript:;&quot;&gt;售后服务&lt;/a&gt;</span><br><span class="line">          &lt;a href=&quot;javascript:;&quot;&gt;配送与验收&lt;/a&gt;</span><br><span class="line">          &lt;a href=&quot;javascript:;&quot;&gt;商务合作&lt;/a&gt;</span><br><span class="line">          &lt;a href=&quot;javascript:;&quot;&gt;搜索推荐&lt;/a&gt;</span><br><span class="line">          &lt;a href=&quot;javascript:;&quot;&gt;友情链接&lt;/a&gt;</span><br><span class="line">        &lt;/p&gt;</span><br><span class="line">        &lt;p&gt;CopyRight &amp;copy; 小兔鲜儿&lt;/p&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/footer&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class="line">.login-header &#123;</span><br><span class="line">  background: #fff;</span><br><span class="line">  border-bottom: 1px solid #e4e4e4;</span><br><span class="line"></span><br><span class="line">  .container &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    align-items: flex-end;</span><br><span class="line">    justify-content: space-between;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .logo &#123;</span><br><span class="line">    width: 200px;</span><br><span class="line"></span><br><span class="line">    a &#123;</span><br><span class="line">      display: block;</span><br><span class="line">      height: 132px;</span><br><span class="line">      width: 100%;</span><br><span class="line">      text-indent: -9999px;</span><br><span class="line">      background: url(&quot;@/assets/images/logo.png&quot;) no-repeat center 18px /</span><br><span class="line">        contain;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .sub &#123;</span><br><span class="line">    flex: 1;</span><br><span class="line">    font-size: 24px;</span><br><span class="line">    font-weight: normal;</span><br><span class="line">    margin-bottom: 38px;</span><br><span class="line">    margin-left: 20px;</span><br><span class="line">    color: #666;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .entry &#123;</span><br><span class="line">    width: 120px;</span><br><span class="line">    margin-bottom: 38px;</span><br><span class="line">    font-size: 16px;</span><br><span class="line"></span><br><span class="line">    i &#123;</span><br><span class="line">      font-size: 14px;</span><br><span class="line">      color: $xtxColor;</span><br><span class="line">      letter-spacing: -5px;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.login-section &#123;</span><br><span class="line">  background: url(&quot;@/assets/images/login-bg.png&quot;) no-repeat center / cover;</span><br><span class="line">  height: 488px;</span><br><span class="line">  position: relative;</span><br><span class="line"></span><br><span class="line">  .wrapper &#123;</span><br><span class="line">    width: 380px;</span><br><span class="line">    background: #fff;</span><br><span class="line">    position: absolute;</span><br><span class="line">    left: 50%;</span><br><span class="line">    top: 54px;</span><br><span class="line">    transform: translate3d(100px, 0, 0);</span><br><span class="line">    box-shadow: 0 0 10px rgba(0, 0, 0, 0.15);</span><br><span class="line"></span><br><span class="line">    nav &#123;</span><br><span class="line">      font-size: 14px;</span><br><span class="line">      height: 55px;</span><br><span class="line">      margin-bottom: 20px;</span><br><span class="line">      border-bottom: 1px solid #f5f5f5;</span><br><span class="line">      display: flex;</span><br><span class="line">      padding: 0 40px;</span><br><span class="line">      text-align: right;</span><br><span class="line">      align-items: center;</span><br><span class="line"></span><br><span class="line">      a &#123;</span><br><span class="line">        flex: 1;</span><br><span class="line">        line-height: 1;</span><br><span class="line">        display: inline-block;</span><br><span class="line">        font-size: 18px;</span><br><span class="line">        position: relative;</span><br><span class="line">        text-align: center;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.login-footer &#123;</span><br><span class="line">  padding: 30px 0 50px;</span><br><span class="line">  background: #fff;</span><br><span class="line"></span><br><span class="line">  p &#123;</span><br><span class="line">    text-align: center;</span><br><span class="line">    color: #999;</span><br><span class="line">    padding-top: 20px;</span><br><span class="line"></span><br><span class="line">    a &#123;</span><br><span class="line">      line-height: 1;</span><br><span class="line">      padding: 0 10px;</span><br><span class="line">      color: #999;</span><br><span class="line">      display: inline-block;</span><br><span class="line"></span><br><span class="line">      ~ a &#123;</span><br><span class="line">        border-left: 1px solid #ccc;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.account-box &#123;</span><br><span class="line">  .toggle &#123;</span><br><span class="line">    padding: 15px 40px;</span><br><span class="line">    text-align: right;</span><br><span class="line"></span><br><span class="line">    a &#123;</span><br><span class="line">      color: $xtxColor;</span><br><span class="line"></span><br><span class="line">      i &#123;</span><br><span class="line">        font-size: 14px;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .form &#123;</span><br><span class="line">    padding: 0 20px 20px 20px;</span><br><span class="line"></span><br><span class="line">    &amp;-item &#123;</span><br><span class="line">      margin-bottom: 28px;</span><br><span class="line"></span><br><span class="line">      .input &#123;</span><br><span class="line">        position: relative;</span><br><span class="line">        height: 36px;</span><br><span class="line"></span><br><span class="line">        &gt; i &#123;</span><br><span class="line">          width: 34px;</span><br><span class="line">          height: 34px;</span><br><span class="line">          background: #cfcdcd;</span><br><span class="line">          color: #fff;</span><br><span class="line">          position: absolute;</span><br><span class="line">          left: 1px;</span><br><span class="line">          top: 1px;</span><br><span class="line">          text-align: center;</span><br><span class="line">          line-height: 34px;</span><br><span class="line">          font-size: 18px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        input &#123;</span><br><span class="line">          padding-left: 44px;</span><br><span class="line">          border: 1px solid #cfcdcd;</span><br><span class="line">          height: 36px;</span><br><span class="line">          line-height: 36px;</span><br><span class="line">          width: 100%;</span><br><span class="line"></span><br><span class="line">          &amp;.error &#123;</span><br><span class="line">            border-color: $priceColor;</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          &amp;.active,</span><br><span class="line">          &amp;:focus &#123;</span><br><span class="line">            border-color: $xtxColor;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .code &#123;</span><br><span class="line">          position: absolute;</span><br><span class="line">          right: 1px;</span><br><span class="line">          top: 1px;</span><br><span class="line">          text-align: center;</span><br><span class="line">          line-height: 34px;</span><br><span class="line">          font-size: 14px;</span><br><span class="line">          background: #f5f5f5;</span><br><span class="line">          color: #666;</span><br><span class="line">          width: 90px;</span><br><span class="line">          height: 34px;</span><br><span class="line">          cursor: pointer;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      &gt; .error &#123;</span><br><span class="line">        position: absolute;</span><br><span class="line">        font-size: 12px;</span><br><span class="line">        line-height: 28px;</span><br><span class="line">        color: $priceColor;</span><br><span class="line"></span><br><span class="line">        i &#123;</span><br><span class="line">          font-size: 14px;</span><br><span class="line">          margin-right: 2px;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .agree &#123;</span><br><span class="line">      a &#123;</span><br><span class="line">        color: #069;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .btn &#123;</span><br><span class="line">      display: block;</span><br><span class="line">      width: 100%;</span><br><span class="line">      height: 40px;</span><br><span class="line">      color: #fff;</span><br><span class="line">      text-align: center;</span><br><span class="line">      line-height: 40px;</span><br><span class="line">      background: $xtxColor;</span><br><span class="line"></span><br><span class="line">      &amp;.disabled &#123;</span><br><span class="line">        background: #cfcdcd;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .action &#123;</span><br><span class="line">    padding: 20px 40px;</span><br><span class="line">    display: flex;</span><br><span class="line">    justify-content: space-between;</span><br><span class="line">    align-items: center;</span><br><span class="line"></span><br><span class="line">    .url &#123;</span><br><span class="line">      a &#123;</span><br><span class="line">        color: #999;</span><br><span class="line">        margin-left: 10px;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.subBtn &#123;</span><br><span class="line">  background: $xtxColor;</span><br><span class="line">  width: 100%;</span><br><span class="line">  color: #fff;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<h3 id="2、pinia-管理用户数据"><a href="#2、pinia-管理用户数据" class="headerlink" title="2、pinia 管理用户数据"></a>2、pinia 管理用户数据</h3><p>stores 下新建 userInfo.js</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; defineStore &#125; <span class="keyword">from</span> <span class="string">&quot;pinia&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; loginAPI &#125; <span class="keyword">from</span> <span class="string">&quot;@/apis/login&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&quot;@/router/index.js&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ElMessage</span> &#125; <span class="keyword">from</span> <span class="string">&quot;element-plus&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useCartStore &#125; <span class="keyword">from</span> <span class="string">&quot;@/stores/cart&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> &#123; mergeCart &#125; = <span class="title function_">useCartStore</span>();</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useUserInfoStore = <span class="title function_">defineStore</span>(</span><br><span class="line">  <span class="string">&quot;userInfo&quot;</span>,</span><br><span class="line">  <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">//用户数据</span></span><br><span class="line">    <span class="keyword">const</span> userInfo = <span class="title function_">ref</span>(&#123;&#125;);</span><br><span class="line">    <span class="comment">// 获取用户数据</span></span><br><span class="line">    <span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">getUserInfo</span>(<span class="params">Data</span>) &#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> &#123; data &#125; = <span class="keyword">await</span> <span class="title function_">loginAPI</span>(<span class="title class_">Data</span>);</span><br><span class="line">        userInfo.<span class="property">value</span> = data.<span class="property">result</span>;</span><br><span class="line">        <span class="title function_">mergeCart</span>();</span><br><span class="line">        <span class="title class_">ElMessage</span>.<span class="title function_">success</span>(<span class="string">&quot;登录成功&quot;</span>);</span><br><span class="line">        router.<span class="title function_">replace</span>(<span class="string">&quot;/&quot;</span>);</span><br><span class="line">      &#125; <span class="keyword">catch</span> &#123;</span><br><span class="line">        <span class="title class_">ElMessage</span>.<span class="title function_">error</span>(<span class="string">&quot;登录失败&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 清除用户数据</span></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">clearUserInfo</span>(<span class="params"></span>) &#123;</span><br><span class="line">      userInfo.<span class="property">value</span> = &#123;&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> &#123; userInfo, getUserInfo, clearUserInfo &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">persist</span>: <span class="literal">true</span>,</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<h3 id="3、请求拦截器统一注入-token"><a href="#3、请求拦截器统一注入-token" class="headerlink" title="3、请求拦截器统一注入 token"></a>3、请求拦截器统一注入 token</h3><p>utils&#x2F;request.js</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&quot;axios&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useUserInfoStore &#125; <span class="keyword">from</span> <span class="string">&quot;@/stores/userInfo&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ElMessage</span> &#125; <span class="keyword">from</span> <span class="string">&quot;element-plus&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> request = axios.<span class="title function_">create</span>(&#123;</span><br><span class="line">  <span class="attr">baseURL</span>: <span class="string">&quot;http://pcapi-xiaotuxian-front-devtest.itheima.net/&quot;</span>,</span><br><span class="line">  <span class="attr">timeout</span>: <span class="number">5000</span>, <span class="comment">// 单位是毫秒</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 请求拦截器，统一注入token</span></span><br><span class="line">request.<span class="property">interceptors</span>.<span class="property">request</span>.<span class="title function_">use</span>(<span class="function">(<span class="params">config</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; userInfo &#125; = <span class="title function_">useUserInfoStore</span>();</span><br><span class="line">  <span class="keyword">if</span> (userInfo.<span class="property">token</span>) &#123;</span><br><span class="line">    config.<span class="property">headers</span>.<span class="property">Authorization</span> = <span class="string">`Bearer <span class="subst">$&#123;userInfo.token&#125;</span>`</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> config;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 响应拦截器,这里可以将axios默认添加的一层data剥离出来</span></span><br><span class="line">request.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(</span><br><span class="line">  <span class="function">(<span class="params">response</span>) =&gt;</span> response,</span><br><span class="line">  <span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (error.<span class="property">response</span>.<span class="property">status</span> === <span class="number">401</span>) &#123;</span><br><span class="line">      <span class="title class_">ElMessage</span>.<span class="title function_">error</span>(<span class="string">&quot;请先登录&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error);</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> request;</span><br></pre></td></tr></table></figure>

<h2 id="九、购物车"><a href="#九、购物车" class="headerlink" title="九、购物车"></a>九、购物车</h2><h3 id="1、整体架构-3"><a href="#1、整体架构-3" class="headerlink" title="1、整体架构"></a>1、整体架构</h3><p>头部购物车 HeadCart</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; useCartStore &#125; from &quot;@/stores/cart&quot;;</span><br><span class="line">import &#123; toRefs &#125; from &quot;vue&quot;;</span><br><span class="line">const &#123; cartList, total, totalPrice, removeCart &#125; = toRefs(useCartStore());</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;cart&quot;&gt;</span><br><span class="line">    &lt;a class=&quot;curr&quot; href=&quot;javascript:;&quot;&gt;</span><br><span class="line">      &lt;i class=&quot;iconfont icon-cart&quot;&gt;&lt;/i&gt;&lt;em&gt;&#123;&#123; cartList.length &#125;&#125;&lt;/em&gt;</span><br><span class="line">    &lt;/a&gt;</span><br><span class="line">    &lt;div class=&quot;layer&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;list&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;item&quot; v-for=&quot;i in cartList&quot; :key=&quot;i.id&quot;&gt;</span><br><span class="line">          &lt;RouterLink to=&quot;&quot;&gt;</span><br><span class="line">            &lt;img :src=&quot;i.picture&quot; alt=&quot;&quot; /&gt;</span><br><span class="line">            &lt;div class=&quot;center&quot;&gt;</span><br><span class="line">              &lt;p class=&quot;name ellipsis-2&quot;&gt;</span><br><span class="line">                &#123;&#123; i.name &#125;&#125;</span><br><span class="line">              &lt;/p&gt;</span><br><span class="line">              &lt;p class=&quot;attr ellipsis&quot;&gt;&#123;&#123; i.attrsText &#125;&#125;&lt;/p&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;right&quot;&gt;</span><br><span class="line">              &lt;p class=&quot;price&quot;&gt;&amp;yen;&#123;&#123; i.price &#125;&#125;&lt;/p&gt;</span><br><span class="line">              &lt;p class=&quot;count&quot;&gt;x&#123;&#123; i.count &#125;&#125;&lt;/p&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/RouterLink&gt;</span><br><span class="line">          &lt;i class=&quot;iconfont icon-close-new&quot; @click=&quot;removeCart(i)&quot;&gt;&lt;/i&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;foot&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;total&quot;&gt;</span><br><span class="line">          &lt;p&gt;共 &#123;&#123; total &#125;&#125; 件商品&lt;/p&gt;</span><br><span class="line">          &lt;p&gt;&amp;yen; &#123;&#123; totalPrice.toFixed(2) &#125;&#125;&lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;el-button</span><br><span class="line">          size=&quot;large&quot;</span><br><span class="line">          type=&quot;primary&quot;</span><br><span class="line">          @click=&quot;$router.push(&#x27;/cartList&#x27;)&quot;</span><br><span class="line">          &gt;去购物车结算&lt;/el-button</span><br><span class="line">        &gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class="line">.cart &#123;</span><br><span class="line">  width: 50px;</span><br><span class="line">  position: relative;</span><br><span class="line">  z-index: 600;</span><br><span class="line"></span><br><span class="line">  .curr &#123;</span><br><span class="line">    height: 32px;</span><br><span class="line">    line-height: 32px;</span><br><span class="line">    text-align: center;</span><br><span class="line">    position: relative;</span><br><span class="line">    display: block;</span><br><span class="line"></span><br><span class="line">    .icon-cart &#123;</span><br><span class="line">      font-size: 22px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    em &#123;</span><br><span class="line">      font-style: normal;</span><br><span class="line">      position: absolute;</span><br><span class="line">      right: 0;</span><br><span class="line">      top: 0;</span><br><span class="line">      padding: 1px 6px;</span><br><span class="line">      line-height: 1;</span><br><span class="line">      background: $helpColor;</span><br><span class="line">      color: #fff;</span><br><span class="line">      font-size: 12px;</span><br><span class="line">      border-radius: 10px;</span><br><span class="line">      font-family: Arial;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  &amp;:hover &#123;</span><br><span class="line">    .layer &#123;</span><br><span class="line">      opacity: 1;</span><br><span class="line">      transform: none;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .layer &#123;</span><br><span class="line">    opacity: 0;</span><br><span class="line">    transition: all 0.4s 0.2s;</span><br><span class="line">    transform: translateY(-200px) scale(1, 0);</span><br><span class="line">    width: 400px;</span><br><span class="line">    height: 400px;</span><br><span class="line">    position: absolute;</span><br><span class="line">    top: 50px;</span><br><span class="line">    right: 0;</span><br><span class="line">    box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);</span><br><span class="line">    background: #fff;</span><br><span class="line">    border-radius: 4px;</span><br><span class="line">    padding-top: 10px;</span><br><span class="line"></span><br><span class="line">    &amp;::before &#123;</span><br><span class="line">      content: &quot;&quot;;</span><br><span class="line">      position: absolute;</span><br><span class="line">      right: 14px;</span><br><span class="line">      top: -10px;</span><br><span class="line">      width: 20px;</span><br><span class="line">      height: 20px;</span><br><span class="line">      background: #fff;</span><br><span class="line">      transform: scale(0.6, 1) rotate(45deg);</span><br><span class="line">      box-shadow: -3px -3px 5px rgba(0, 0, 0, 0.1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .foot &#123;</span><br><span class="line">      position: absolute;</span><br><span class="line">      left: 0;</span><br><span class="line">      bottom: 0;</span><br><span class="line">      height: 70px;</span><br><span class="line">      width: 100%;</span><br><span class="line">      padding: 10px;</span><br><span class="line">      display: flex;</span><br><span class="line">      justify-content: space-between;</span><br><span class="line">      background: #f8f8f8;</span><br><span class="line">      align-items: center;</span><br><span class="line"></span><br><span class="line">      .total &#123;</span><br><span class="line">        padding-left: 10px;</span><br><span class="line">        color: #999;</span><br><span class="line"></span><br><span class="line">        p &#123;</span><br><span class="line">          &amp;:last-child &#123;</span><br><span class="line">            font-size: 18px;</span><br><span class="line">            color: $priceColor;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .list &#123;</span><br><span class="line">    height: 310px;</span><br><span class="line">    overflow: auto;</span><br><span class="line">    padding: 0 10px;</span><br><span class="line"></span><br><span class="line">    &amp;::-webkit-scrollbar &#123;</span><br><span class="line">      width: 10px;</span><br><span class="line">      height: 10px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &amp;::-webkit-scrollbar-track &#123;</span><br><span class="line">      background: #f8f8f8;</span><br><span class="line">      border-radius: 2px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &amp;::-webkit-scrollbar-thumb &#123;</span><br><span class="line">      background: #eee;</span><br><span class="line">      border-radius: 10px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &amp;::-webkit-scrollbar-thumb:hover &#123;</span><br><span class="line">      background: #ccc;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .item &#123;</span><br><span class="line">      border-bottom: 1px solid #f5f5f5;</span><br><span class="line">      padding: 10px 0;</span><br><span class="line">      position: relative;</span><br><span class="line"></span><br><span class="line">      i &#123;</span><br><span class="line">        position: absolute;</span><br><span class="line">        bottom: 38px;</span><br><span class="line">        right: 0;</span><br><span class="line">        opacity: 0;</span><br><span class="line">        color: #666;</span><br><span class="line">        transition: all 0.5s;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      &amp;:hover &#123;</span><br><span class="line">        i &#123;</span><br><span class="line">          opacity: 1;</span><br><span class="line">          cursor: pointer;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      a &#123;</span><br><span class="line">        display: flex;</span><br><span class="line">        align-items: center;</span><br><span class="line"></span><br><span class="line">        img &#123;</span><br><span class="line">          height: 80px;</span><br><span class="line">          width: 80px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .center &#123;</span><br><span class="line">          padding: 0 10px;</span><br><span class="line">          width: 200px;</span><br><span class="line"></span><br><span class="line">          .name &#123;</span><br><span class="line">            font-size: 16px;</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          .attr &#123;</span><br><span class="line">            color: #999;</span><br><span class="line">            padding-top: 5px;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .right &#123;</span><br><span class="line">          width: 100px;</span><br><span class="line">          padding-right: 20px;</span><br><span class="line">          text-align: center;</span><br><span class="line"></span><br><span class="line">          .price &#123;</span><br><span class="line">            font-size: 16px;</span><br><span class="line">            color: $priceColor;</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          .count &#123;</span><br><span class="line">            color: #999;</span><br><span class="line">            margin-top: 5px;</span><br><span class="line">            font-size: 16px;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p>列表购物车 cartList</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; useCartStore &#125; from &quot;@/stores/cart&quot;;</span><br><span class="line">import &#123; toRefs &#125; from &quot;vue&quot;;</span><br><span class="line">// 注意这里因为有点击选择框导致选择框状态的改变，选择框状态的改变需要同步到pinia中，解构会使响应式数据丢失响应性，所以这里使用toRefs解构</span><br><span class="line">const &#123;</span><br><span class="line">  cartList,</span><br><span class="line">  total,</span><br><span class="line">  removeCart,</span><br><span class="line">  isCheckAll,</span><br><span class="line">  selectedCount,</span><br><span class="line">  selectedTotalPrice,</span><br><span class="line">&#125; = toRefs(useCartStore());</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;xtx-cart-page&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;container m-top-20&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;cart&quot;&gt;</span><br><span class="line">        &lt;table&gt;</span><br><span class="line">          &lt;thead&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">              &lt;th width=&quot;120&quot;&gt;</span><br><span class="line">                &lt;el-checkbox v-model=&quot;isCheckAll&quot; /&gt;</span><br><span class="line">              &lt;/th&gt;</span><br><span class="line">              &lt;th width=&quot;400&quot;&gt;商品信息&lt;/th&gt;</span><br><span class="line">              &lt;th width=&quot;220&quot;&gt;单价&lt;/th&gt;</span><br><span class="line">              &lt;th width=&quot;180&quot;&gt;数量&lt;/th&gt;</span><br><span class="line">              &lt;th width=&quot;180&quot;&gt;小计&lt;/th&gt;</span><br><span class="line">              &lt;th width=&quot;140&quot;&gt;操作&lt;/th&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">          &lt;/thead&gt;</span><br><span class="line">          &lt;!-- 商品列表 --&gt;</span><br><span class="line">          &lt;tbody&gt;</span><br><span class="line">            &lt;tr v-for=&quot;i in cartList&quot; :key=&quot;i.id&quot;&gt;</span><br><span class="line">              &lt;td&gt;</span><br><span class="line">                &lt;el-checkbox v-model=&quot;i.selected&quot; /&gt;</span><br><span class="line">              &lt;/td&gt;</span><br><span class="line">              &lt;td&gt;</span><br><span class="line">                &lt;div class=&quot;goods&quot;&gt;</span><br><span class="line">                  &lt;RouterLink to=&quot;/&quot;</span><br><span class="line">                    &gt;&lt;img :src=&quot;i.picture&quot; alt=&quot;&quot;</span><br><span class="line">                  /&gt;&lt;/RouterLink&gt;</span><br><span class="line">                  &lt;div&gt;</span><br><span class="line">                    &lt;p class=&quot;name ellipsis&quot;&gt;</span><br><span class="line">                      &#123;&#123; i.name &#125;&#125;</span><br><span class="line">                    &lt;/p&gt;</span><br><span class="line">                  &lt;/div&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">              &lt;/td&gt;</span><br><span class="line">              &lt;td class=&quot;tc&quot;&gt;</span><br><span class="line">                &lt;p&gt;&amp;yen;&#123;&#123; i.price &#125;&#125;&lt;/p&gt;</span><br><span class="line">              &lt;/td&gt;</span><br><span class="line">              &lt;td class=&quot;tc&quot;&gt;</span><br><span class="line">                &lt;el-input-number v-model=&quot;i.count&quot; /&gt;</span><br><span class="line">              &lt;/td&gt;</span><br><span class="line">              &lt;td class=&quot;tc&quot;&gt;</span><br><span class="line">                &lt;p class=&quot;f16 red&quot;&gt;&amp;yen;&#123;&#123; (i.price * i.count).toFixed(2) &#125;&#125;&lt;/p&gt;</span><br><span class="line">              &lt;/td&gt;</span><br><span class="line">              &lt;td class=&quot;tc&quot;&gt;</span><br><span class="line">                &lt;p&gt;</span><br><span class="line">                  &lt;el-popconfirm</span><br><span class="line">                    title=&quot;确认删除吗?&quot;</span><br><span class="line">                    confirm-button-text=&quot;确认&quot;</span><br><span class="line">                    cancel-button-text=&quot;取消&quot;</span><br><span class="line">                    @confirm=&quot;removeCart(i)&quot;</span><br><span class="line">                  &gt;</span><br><span class="line">                    &lt;template #reference&gt;</span><br><span class="line">                      &lt;a href=&quot;javascript:;&quot;&gt;删除&lt;/a&gt;</span><br><span class="line">                    &lt;/template&gt;</span><br><span class="line">                  &lt;/el-popconfirm&gt;</span><br><span class="line">                &lt;/p&gt;</span><br><span class="line">              &lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">            &lt;tr v-if=&quot;cartList.length === 0&quot;&gt;</span><br><span class="line">              &lt;td colspan=&quot;6&quot;&gt;</span><br><span class="line">                &lt;div class=&quot;cart-none&quot;&gt;</span><br><span class="line">                  &lt;el-empty description=&quot;购物车列表为空&quot;&gt;</span><br><span class="line">                    &lt;el-button type=&quot;primary&quot;&gt;随便逛逛&lt;/el-button&gt;</span><br><span class="line">                  &lt;/el-empty&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">              &lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">          &lt;/tbody&gt;</span><br><span class="line">        &lt;/table&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;!-- 操作栏 --&gt;</span><br><span class="line">      &lt;div class=&quot;action&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;batch&quot;&gt;</span><br><span class="line">          共 &#123;&#123; total &#125;&#125; 件商品，已选择 &#123;&#123; selectedCount &#125;&#125; 件，商品合计：</span><br><span class="line">          &lt;span class=&quot;red&quot;&gt;¥ &#123;&#123; selectedTotalPrice.toFixed(2) &#125;&#125; &lt;/span&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;total&quot;&gt;</span><br><span class="line">          &lt;el-button</span><br><span class="line">            size=&quot;large&quot;</span><br><span class="line">            type=&quot;primary&quot;</span><br><span class="line">            @click=&quot;$router.push(&#x27;/orders&#x27;)&quot;</span><br><span class="line">            &gt;下单结算&lt;/el-button</span><br><span class="line">          &gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class="line">.xtx-cart-page &#123;</span><br><span class="line">  margin-top: 20px;</span><br><span class="line"></span><br><span class="line">  .cart &#123;</span><br><span class="line">    background: #fff;</span><br><span class="line">    color: #666;</span><br><span class="line"></span><br><span class="line">    table &#123;</span><br><span class="line">      border-spacing: 0;</span><br><span class="line">      border-collapse: collapse;</span><br><span class="line">      line-height: 24px;</span><br><span class="line"></span><br><span class="line">      th,</span><br><span class="line">      td &#123;</span><br><span class="line">        padding: 10px;</span><br><span class="line">        border-bottom: 1px solid #f5f5f5;</span><br><span class="line"></span><br><span class="line">        &amp;:first-child &#123;</span><br><span class="line">          text-align: left;</span><br><span class="line">          padding-left: 30px;</span><br><span class="line">          color: #999;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      th &#123;</span><br><span class="line">        font-size: 16px;</span><br><span class="line">        font-weight: normal;</span><br><span class="line">        line-height: 50px;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .cart-none &#123;</span><br><span class="line">    text-align: center;</span><br><span class="line">    padding: 120px 0;</span><br><span class="line">    background: #fff;</span><br><span class="line"></span><br><span class="line">    p &#123;</span><br><span class="line">      color: #999;</span><br><span class="line">      padding: 20px 0;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .tc &#123;</span><br><span class="line">    text-align: center;</span><br><span class="line"></span><br><span class="line">    a &#123;</span><br><span class="line">      color: $xtxColor;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .xtx-numbox &#123;</span><br><span class="line">      margin: 0 auto;</span><br><span class="line">      width: 120px;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .red &#123;</span><br><span class="line">    color: $priceColor;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .green &#123;</span><br><span class="line">    color: $xtxColor;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .f16 &#123;</span><br><span class="line">    font-size: 16px;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .goods &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    align-items: center;</span><br><span class="line"></span><br><span class="line">    img &#123;</span><br><span class="line">      width: 100px;</span><br><span class="line">      height: 100px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &gt; div &#123;</span><br><span class="line">      width: 280px;</span><br><span class="line">      font-size: 16px;</span><br><span class="line">      padding-left: 10px;</span><br><span class="line"></span><br><span class="line">      .attr &#123;</span><br><span class="line">        font-size: 14px;</span><br><span class="line">        color: #999;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .action &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    background: #fff;</span><br><span class="line">    margin-top: 20px;</span><br><span class="line">    height: 80px;</span><br><span class="line">    align-items: center;</span><br><span class="line">    font-size: 16px;</span><br><span class="line">    justify-content: space-between;</span><br><span class="line">    padding: 0 30px;</span><br><span class="line"></span><br><span class="line">    .xtx-checkbox &#123;</span><br><span class="line">      color: #999;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .batch &#123;</span><br><span class="line">      a &#123;</span><br><span class="line">        margin-left: 20px;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .red &#123;</span><br><span class="line">      font-size: 18px;</span><br><span class="line">      margin-right: 20px;</span><br><span class="line">      font-weight: bold;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .tit &#123;</span><br><span class="line">    color: #666;</span><br><span class="line">    font-size: 16px;</span><br><span class="line">    font-weight: normal;</span><br><span class="line">    line-height: 50px;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p><strong><em>接下来需要分两条路：一是未登录状态下操作购物车存储到本地，二是登录状态下操作购物车存储到数据库（调用接口）</em></strong></p>
<h3 id="2、pinia-管理购物车数据"><a href="#2、pinia-管理购物车数据" class="headerlink" title="2、pinia 管理购物车数据"></a>2、pinia 管理购物车数据</h3><p>由于购物车数据多个模块都需要用到，因此在 stores 新建 cart.js</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineStore &#125; <span class="keyword">from</span> <span class="string">&quot;pinia&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; ref, computed &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; insertCartAPI, delCartAPI, getCartListAPI &#125; <span class="keyword">from</span> <span class="string">&quot;@/apis/cartList.js&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; mergeCartAPI &#125; <span class="keyword">from</span> <span class="string">&quot;@/apis/login.js&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; useUserInfoStore &#125; <span class="keyword">from</span> <span class="string">&quot;@/stores/userInfo.js&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useCartStore = <span class="title function_">defineStore</span>(</span><br><span class="line">  <span class="string">&quot;useCartStore&quot;</span>,</span><br><span class="line">  <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">//购物车列表</span></span><br><span class="line">    <span class="keyword">const</span> cartList = <span class="title function_">ref</span>([]);</span><br><span class="line">    <span class="comment">//商品总数量</span></span><br><span class="line">    <span class="keyword">const</span> total = <span class="title function_">computed</span>(<span class="function">() =&gt;</span></span><br><span class="line">      cartList.<span class="property">value</span>.<span class="title function_">reduce</span>(<span class="function">(<span class="params">total, item</span>) =&gt;</span> total + item.<span class="property">count</span>, <span class="number">0</span>)</span><br><span class="line">    );</span><br><span class="line">    <span class="comment">//商品总价格</span></span><br><span class="line">    <span class="keyword">const</span> totalPrice = <span class="title function_">computed</span>(<span class="function">() =&gt;</span></span><br><span class="line">      cartList.<span class="property">value</span>.<span class="title function_">reduce</span>(<span class="function">(<span class="params">total, item</span>) =&gt;</span> total + item.<span class="property">count</span> * item.<span class="property">price</span>, <span class="number">0</span>)</span><br><span class="line">    );</span><br><span class="line">    <span class="comment">//已选件数</span></span><br><span class="line">    <span class="keyword">const</span> selectedCount = <span class="title function_">computed</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> selectedGoods = cartList.<span class="property">value</span>.<span class="title function_">filter</span>(<span class="function">(<span class="params">item</span>) =&gt;</span> item.<span class="property">selected</span>);</span><br><span class="line">      <span class="keyword">return</span> selectedGoods.<span class="title function_">reduce</span>(<span class="function">(<span class="params">total, item</span>) =&gt;</span> total + item.<span class="property">count</span>, <span class="number">0</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">// 已选商品总价</span></span><br><span class="line">    <span class="keyword">const</span> selectedTotalPrice = <span class="title function_">computed</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> selectedGoods = cartList.<span class="property">value</span>.<span class="title function_">filter</span>(<span class="function">(<span class="params">item</span>) =&gt;</span> item.<span class="property">selected</span>);</span><br><span class="line">      <span class="keyword">return</span> selectedGoods.<span class="title function_">reduce</span>(</span><br><span class="line">        <span class="function">(<span class="params">total, item</span>) =&gt;</span> total + item.<span class="property">count</span> * item.<span class="property">price</span>,</span><br><span class="line">        <span class="number">0</span></span><br><span class="line">      );</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">// 全选状态</span></span><br><span class="line">    <span class="keyword">const</span> isCheckAll = <span class="title function_">computed</span>(&#123;</span><br><span class="line">      <span class="title function_">get</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> cartList.<span class="property">value</span>.<span class="title function_">every</span>(<span class="function">(<span class="params">item</span>) =&gt;</span> item.<span class="property">selected</span> === <span class="literal">true</span>);</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="title function_">set</span>(<span class="params">val</span>) &#123;</span><br><span class="line">        cartList.<span class="property">value</span>.<span class="title function_">forEach</span>(<span class="function">(<span class="params">item</span>) =&gt;</span> (item.<span class="property">selected</span> = val));</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">// 获取购物车列表</span></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">getCartList</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">      <span class="keyword">const</span> &#123; data &#125; = <span class="keyword">await</span> <span class="title function_">getCartListAPI</span>();</span><br><span class="line">      cartList.<span class="property">value</span> = data.<span class="property">result</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">// 添加购物车</span></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">addCart</span> = <span class="keyword">async</span> (<span class="params">goods</span>) =&gt; &#123;</span><br><span class="line">      <span class="comment">//如果用户已登录，则调用接口，否则走本地购物车流程</span></span><br><span class="line">      <span class="keyword">const</span> &#123; userInfo &#125; = <span class="title function_">useUserInfoStore</span>();</span><br><span class="line">      <span class="keyword">if</span> (userInfo.<span class="property">token</span>) &#123;</span><br><span class="line">        <span class="keyword">await</span> <span class="title function_">insertCartAPI</span>(&#123;</span><br><span class="line">          <span class="attr">skuId</span>: goods.<span class="property">skuId</span>,</span><br><span class="line">          <span class="attr">count</span>: goods.<span class="property">count</span>,</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// 调用添加接口后，重新获取购物车列表以覆盖本地购物车</span></span><br><span class="line">        <span class="title function_">getCartList</span>();</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//如果购物车中有该商品，数量加1，否则添加该商品</span></span><br><span class="line">        <span class="keyword">const</span> index = cartList.<span class="property">value</span>.<span class="title function_">findIndex</span>(</span><br><span class="line">          <span class="function">(<span class="params">item</span>) =&gt;</span> item.<span class="property">skuId</span> === goods.<span class="property">skuId</span></span><br><span class="line">        );</span><br><span class="line">        <span class="keyword">if</span> (index === -<span class="number">1</span>) &#123;</span><br><span class="line">          cartList.<span class="property">value</span>.<span class="title function_">push</span>(goods);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          cartList.<span class="property">value</span>[index].<span class="property">count</span>++;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">//删除购物车的数据</span></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">removeCart</span> = (<span class="params">goods</span>) =&gt; &#123;</span><br><span class="line">      <span class="comment">//如果用户已登录，则调用接口，否则走本地购物车流程</span></span><br><span class="line">      <span class="keyword">const</span> &#123; userInfo &#125; = <span class="title function_">useUserInfoStore</span>();</span><br><span class="line">      <span class="keyword">if</span> (userInfo.<span class="property">token</span>) &#123;</span><br><span class="line">        <span class="title function_">delCartAPI</span>([goods.<span class="property">skuId</span>]);</span><br><span class="line">        <span class="comment">// 调用删除接口后，重新获取购物车列表以覆盖本地购物车</span></span><br><span class="line">        <span class="title function_">getCartList</span>();</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> index = cartList.<span class="property">value</span>.<span class="title function_">findIndex</span>(</span><br><span class="line">          <span class="function">(<span class="params">item</span>) =&gt;</span> item.<span class="property">skuId</span> === goods.<span class="property">skuId</span></span><br><span class="line">        );</span><br><span class="line">        cartList.<span class="property">value</span>.<span class="title function_">splice</span>(index, <span class="number">1</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">// 合并购物车</span></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">mergeCart</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">      <span class="keyword">await</span> <span class="title function_">mergeCartAPI</span>(cartList.<span class="property">value</span>);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      cartList,</span><br><span class="line">      total,</span><br><span class="line">      totalPrice,</span><br><span class="line">      addCart,</span><br><span class="line">      removeCart,</span><br><span class="line">      isCheckAll,</span><br><span class="line">      selectedCount,</span><br><span class="line">      selectedTotalPrice,</span><br><span class="line">      getCartList,</span><br><span class="line">      mergeCart,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">persist</span>: <span class="literal">true</span>,</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<p><strong><em>注意，这里有一个合并购物车的方法，主要是为了将用户未登录时的购物车操作在登录时合并到服务器</em></strong></p>
<h2 id="十、订单页"><a href="#十、订单页" class="headerlink" title="十、订单页"></a>十、订单页</h2><h3 id="1、整体架构-4"><a href="#1、整体架构-4" class="headerlink" title="1、整体架构"></a>1、整体架构</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; useRouter &#125; from &quot;vue-router&quot;;</span><br><span class="line">import &#123; ref, onMounted, computed &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123;</span><br><span class="line">  getCheckoutInfoAPI,</span><br><span class="line">  addAddressAPI,</span><br><span class="line">  getAddressAPI,</span><br><span class="line">  deleteAddressAPI,</span><br><span class="line">  submitOrderAPI,</span><br><span class="line">&#125; from &quot;@/apis/orders&quot;;</span><br><span class="line">import &#123; regionData, codeToText &#125; from &quot;element-china-area-data&quot;;</span><br><span class="line">import &#123; ElMessage &#125; from &quot;element-plus&quot;;</span><br><span class="line">import &#123; useCartStore &#125; from &quot;@/stores/cart&quot;;</span><br><span class="line">const checkInfo = ref(&#123;&#125;); // 订单对象</span><br><span class="line">const curAddress = ref(&#123;&#125;); // 地址对象</span><br><span class="line">const newAddressList = ref([]); // 地址列表</span><br><span class="line">getCheckoutInfoAPI().then((res) =&gt; &#123;</span><br><span class="line">  checkInfo.value = res.data.result;</span><br><span class="line">&#125;);</span><br><span class="line">const getAddress = async () =&gt; &#123;</span><br><span class="line">  const &#123; data &#125; = await getAddressAPI();</span><br><span class="line">  curAddress.value = data.result.find((item) =&gt; item.isDefault === 0);</span><br><span class="line">  newAddressList.value = data.result.map((ele) =&gt; &#123;</span><br><span class="line">    ele.isSelected = false;</span><br><span class="line">    return ele;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line">onMounted(() =&gt; getAddress());</span><br><span class="line">// 控制切换地址弹窗显示隐藏</span><br><span class="line">const dialogVisible = ref(false);</span><br><span class="line">const toggle = () =&gt; &#123;</span><br><span class="line">  dialogVisible.value = true;</span><br><span class="line">  getAddress();</span><br><span class="line">&#125;;</span><br><span class="line">// 存放临时地址</span><br><span class="line">const tempAddress = ref(&#123;&#125;);</span><br><span class="line">// 选中地址时高亮效果</span><br><span class="line">const confirmAddrsss = (item) =&gt; &#123;</span><br><span class="line">  newAddressList.value</span><br><span class="line">    .filter((element) =&gt; element.id != item.id)</span><br><span class="line">    .forEach((element) =&gt; (element.isSelected = false));</span><br><span class="line">  item.isSelected = !item.isSelected;</span><br><span class="line">  if (item.isSelected) &#123;</span><br><span class="line">    tempAddress.value = item;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">// 确定切换地址</span><br><span class="line">const toggleAddress = () =&gt; &#123;</span><br><span class="line">  if (tempAddress.value.id) &#123;</span><br><span class="line">    curAddress.value = tempAddress.value;</span><br><span class="line">    tempAddress.value = &#123;&#125;;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  dialogVisible.value = false;</span><br><span class="line">&#125;;</span><br><span class="line">// 删除地址</span><br><span class="line">const removeAddress = async (item) =&gt; &#123;</span><br><span class="line">  try &#123;</span><br><span class="line">    await deleteAddressAPI(item.id);</span><br><span class="line">    ElMessage.success(&quot;删除成功&quot;);</span><br><span class="line">    getAddress();</span><br><span class="line">  &#125; catch &#123;</span><br><span class="line">    ElMessage.error(&quot;删除失败&quot;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">// 添加地址</span><br><span class="line">// 添加地址显示隐藏</span><br><span class="line">const addDialogVisible = ref(false);</span><br><span class="line">// 表单数据</span><br><span class="line">const formData = ref(&#123;</span><br><span class="line">  receiver: &quot;&quot;,</span><br><span class="line">  contact: &quot;&quot;,</span><br><span class="line">  region: [],</span><br><span class="line">  address: &quot;&quot;,</span><br><span class="line">  postalCode: &quot;&quot;,</span><br><span class="line">  addressTags: &quot;&quot;,</span><br><span class="line">  isDefault: 1,</span><br><span class="line">&#125;);</span><br><span class="line">// 取消按钮</span><br><span class="line">const cancel = () =&gt; &#123;</span><br><span class="line">  addDialogVisible.value = false;</span><br><span class="line">  formData.value = &#123;</span><br><span class="line">    receiver: &quot;&quot;,</span><br><span class="line">    contact: &quot;&quot;,</span><br><span class="line">    region: [],</span><br><span class="line">    address: &quot;&quot;,</span><br><span class="line">    postalCode: &quot;&quot;,</span><br><span class="line">    addressTags: &quot;&quot;,</span><br><span class="line">    isDefault: 1,</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br><span class="line">// 确认按钮</span><br><span class="line">const confirm = async () =&gt; &#123;</span><br><span class="line">  try &#123;</span><br><span class="line">    await addAddressAPI(&#123;</span><br><span class="line">      ...formData.value,</span><br><span class="line">      provinceCode: formData.value.region[0],</span><br><span class="line">      cityCode: formData.value.region[1],</span><br><span class="line">      countyCode: formData.value.region[2],</span><br><span class="line">      fullLocation:</span><br><span class="line">        codeToText[formData.value.region[0]] +</span><br><span class="line">        codeToText[formData.value.region[1]] +</span><br><span class="line">        codeToText[formData.value.region[2]] +</span><br><span class="line">        formData.value.address,</span><br><span class="line">    &#125;);</span><br><span class="line">    ElMessage.success(&quot;添加成功&quot;);</span><br><span class="line">  &#125; catch &#123;</span><br><span class="line">    ElMessage.error(&quot;添加失败&quot;);</span><br><span class="line">  &#125;</span><br><span class="line">  cancel();</span><br><span class="line">&#125;;</span><br><span class="line">// 提交订单</span><br><span class="line">// 订单数据</span><br><span class="line">const orderData = ref(&#123;</span><br><span class="line">  deliveryTimeType: 1,</span><br><span class="line">  payType: 1,</span><br><span class="line">  payChannel: 1,</span><br><span class="line">  buyerMessage: &quot;&quot;,</span><br><span class="line">  goods: computed(() =&gt; checkInfo.value.goods),</span><br><span class="line">  addressId: computed(() =&gt; curAddress.value.id),</span><br><span class="line">&#125;);</span><br><span class="line">const router = useRouter();</span><br><span class="line">const submitOrders = async () =&gt; &#123;</span><br><span class="line">  const &#123; data &#125; = await submitOrderAPI(orderData.value);</span><br><span class="line">  // 更新购物车数据</span><br><span class="line">  const &#123; removeCart &#125; = useCartStore();</span><br><span class="line">  removeCart(orderData.value);</span><br><span class="line">  router.push(`/payPage/$&#123;data.result.id&#125;`);</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;xtx-pay-checkout-page&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;wrapper&quot;&gt;</span><br><span class="line">        &lt;!-- 收货地址 --&gt;</span><br><span class="line">        &lt;h3 class=&quot;box-title&quot;&gt;收货地址&lt;/h3&gt;</span><br><span class="line">        &lt;div class=&quot;box-body&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;address&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;text&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;none&quot; v-if=&quot;!curAddress&quot;&gt;</span><br><span class="line">                您需要先添加收货地址才可提交订单。</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">              &lt;ul v-else&gt;</span><br><span class="line">                &lt;li&gt;</span><br><span class="line">                  &lt;span&gt;收&lt;i /&gt;货&lt;i /&gt;人：&lt;/span&gt;&#123;&#123; curAddress.receiver &#125;&#125;</span><br><span class="line">                &lt;/li&gt;</span><br><span class="line">                &lt;li&gt;&lt;span&gt;联系方式：&lt;/span&gt;&#123;&#123; curAddress.contact &#125;&#125;&lt;/li&gt;</span><br><span class="line">                &lt;li&gt;</span><br><span class="line">                  &lt;span&gt;收货地址：&lt;/span&gt;&#123;&#123; curAddress.fullLocation &#125;&#125;</span><br><span class="line">                  &#123;&#123; curAddress.address &#125;&#125;</span><br><span class="line">                &lt;/li&gt;</span><br><span class="line">              &lt;/ul&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;action&quot;&gt;</span><br><span class="line">              &lt;el-button size=&quot;large&quot; @click=&quot;toggle&quot;&gt;切换地址&lt;/el-button&gt;</span><br><span class="line">              &lt;el-button size=&quot;large&quot; @click=&quot;addDialogVisible = true&quot;</span><br><span class="line">                &gt;添加地址&lt;/el-button</span><br><span class="line">              &gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;!-- 商品信息 --&gt;</span><br><span class="line">        &lt;h3 class=&quot;box-title&quot;&gt;商品信息&lt;/h3&gt;</span><br><span class="line">        &lt;div class=&quot;box-body&quot;&gt;</span><br><span class="line">          &lt;table class=&quot;goods&quot;&gt;</span><br><span class="line">            &lt;thead&gt;</span><br><span class="line">              &lt;tr&gt;</span><br><span class="line">                &lt;th width=&quot;520&quot;&gt;商品信息&lt;/th&gt;</span><br><span class="line">                &lt;th width=&quot;170&quot;&gt;单价&lt;/th&gt;</span><br><span class="line">                &lt;th width=&quot;170&quot;&gt;数量&lt;/th&gt;</span><br><span class="line">                &lt;th width=&quot;170&quot;&gt;小计&lt;/th&gt;</span><br><span class="line">                &lt;th width=&quot;170&quot;&gt;实付&lt;/th&gt;</span><br><span class="line">              &lt;/tr&gt;</span><br><span class="line">            &lt;/thead&gt;</span><br><span class="line">            &lt;tbody&gt;</span><br><span class="line">              &lt;tr v-for=&quot;i in checkInfo.goods&quot; :key=&quot;i.id&quot;&gt;</span><br><span class="line">                &lt;td&gt;</span><br><span class="line">                  &lt;a href=&quot;javascript:;&quot; class=&quot;info&quot;&gt;</span><br><span class="line">                    &lt;img :src=&quot;i.picture&quot; alt=&quot;&quot; /&gt;</span><br><span class="line">                    &lt;div class=&quot;right&quot;&gt;</span><br><span class="line">                      &lt;p&gt;&#123;&#123; i.name &#125;&#125;&lt;/p&gt;</span><br><span class="line">                      &lt;p&gt;&#123;&#123; i.attrsText &#125;&#125;&lt;/p&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                  &lt;/a&gt;</span><br><span class="line">                &lt;/td&gt;</span><br><span class="line">                &lt;td&gt;&amp;yen;&#123;&#123; i.price &#125;&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;&#123;&#123; i.count &#125;&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;&amp;yen;&#123;&#123; i.totalPrice &#125;&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;&amp;yen;&#123;&#123; i.totalPayPrice &#125;&#125;&lt;/td&gt;</span><br><span class="line">              &lt;/tr&gt;</span><br><span class="line">            &lt;/tbody&gt;</span><br><span class="line">          &lt;/table&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;!-- 配送时间 --&gt;</span><br><span class="line">        &lt;h3 class=&quot;box-title&quot;&gt;配送时间&lt;/h3&gt;</span><br><span class="line">        &lt;div class=&quot;box-body&quot;&gt;</span><br><span class="line">          &lt;a class=&quot;my-btn active&quot; href=&quot;javascript:;&quot;</span><br><span class="line">            &gt;不限送货时间：周一至周日&lt;/a</span><br><span class="line">          &gt;</span><br><span class="line">          &lt;a class=&quot;my-btn&quot; href=&quot;javascript:;&quot;&gt;工作日送货：周一至周五&lt;/a&gt;</span><br><span class="line">          &lt;a class=&quot;my-btn&quot; href=&quot;javascript:;&quot;&gt;双休日、假日送货：周六至周日&lt;/a&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;!-- 支付方式 --&gt;</span><br><span class="line">        &lt;h3 class=&quot;box-title&quot;&gt;支付方式&lt;/h3&gt;</span><br><span class="line">        &lt;div class=&quot;box-body&quot;&gt;</span><br><span class="line">          &lt;a class=&quot;my-btn active&quot; href=&quot;javascript:;&quot;&gt;在线支付&lt;/a&gt;</span><br><span class="line">          &lt;a class=&quot;my-btn&quot; href=&quot;javascript:;&quot;&gt;货到付款&lt;/a&gt;</span><br><span class="line">          &lt;span style=&quot;color: #999&quot;&gt;货到付款需付5元手续费&lt;/span&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;!-- 金额明细 --&gt;</span><br><span class="line">        &lt;h3 class=&quot;box-title&quot;&gt;金额明细&lt;/h3&gt;</span><br><span class="line">        &lt;div class=&quot;box-body&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;total&quot;&gt;</span><br><span class="line">            &lt;dl&gt;</span><br><span class="line">              &lt;dt&gt;商品件数：&lt;/dt&gt;</span><br><span class="line">              &lt;dd&gt;&#123;&#123; checkInfo.summary?.goodsCount &#125;&#125;件&lt;/dd&gt;</span><br><span class="line">            &lt;/dl&gt;</span><br><span class="line">            &lt;dl&gt;</span><br><span class="line">              &lt;dt&gt;商品总价：&lt;/dt&gt;</span><br><span class="line">              &lt;dd&gt;¥&#123;&#123; checkInfo.summary?.totalPrice.toFixed(2) &#125;&#125;&lt;/dd&gt;</span><br><span class="line">            &lt;/dl&gt;</span><br><span class="line">            &lt;dl&gt;</span><br><span class="line">              &lt;dt&gt;运&lt;i&gt;&lt;/i&gt;费：&lt;/dt&gt;</span><br><span class="line">              &lt;dd&gt;¥&#123;&#123; checkInfo.summary?.postFee.toFixed(2) &#125;&#125;&lt;/dd&gt;</span><br><span class="line">            &lt;/dl&gt;</span><br><span class="line">            &lt;dl&gt;</span><br><span class="line">              &lt;dt&gt;应付总额：&lt;/dt&gt;</span><br><span class="line">              &lt;dd class=&quot;price&quot;&gt;</span><br><span class="line">                &#123;&#123; checkInfo.summary?.totalPayPrice.toFixed(2) &#125;&#125;</span><br><span class="line">              &lt;/dd&gt;</span><br><span class="line">            &lt;/dl&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;!-- 提交订单 --&gt;</span><br><span class="line">        &lt;div class=&quot;submit&quot;&gt;</span><br><span class="line">          &lt;el-button type=&quot;primary&quot; size=&quot;large&quot; @click=&quot;submitOrders&quot;</span><br><span class="line">            &gt;提交订单&lt;/el-button</span><br><span class="line">          &gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;!-- 切换地址 --&gt;</span><br><span class="line">  &lt;el-dialog title=&quot;切换收货地址&quot; width=&quot;30%&quot; center v-model=&quot;dialogVisible&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;addressWrapper&quot;&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        class=&quot;text item&quot;</span><br><span class="line">        v-for=&quot;item in newAddressList&quot;</span><br><span class="line">        :key=&quot;item.id&quot;</span><br><span class="line">        @click=&quot;confirmAddrsss(item)&quot;</span><br><span class="line">        :class=&quot;&#123; active: item.isSelected &#125;&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;ul&gt;</span><br><span class="line">          &lt;li&gt;</span><br><span class="line">            &lt;span&gt;收&lt;i /&gt;货&lt;i /&gt;人：&lt;/span&gt;&#123;&#123; item.receiver &#125;&#125;</span><br><span class="line">          &lt;/li&gt;</span><br><span class="line">          &lt;li&gt;&lt;span&gt;联系方式：&lt;/span&gt;&#123;&#123; item.contact &#125;&#125;&lt;/li&gt;</span><br><span class="line">          &lt;li&gt;&lt;span&gt;收货地址：&lt;/span&gt;&#123;&#123; item.fullLocation + item.address &#125;&#125;&lt;/li&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">        &lt;i</span><br><span class="line">          class=&quot;iconfont icon-close-new close&quot;</span><br><span class="line">          @click=&quot;removeAddress(item)&quot;</span><br><span class="line">        &gt;&lt;/i&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;template #footer&gt;</span><br><span class="line">      &lt;span class=&quot;dialog-footer&quot;&gt;</span><br><span class="line">        &lt;el-button @click=&quot;dialogVisible = false&quot;&gt;取消&lt;/el-button&gt;</span><br><span class="line">        &lt;el-button type=&quot;primary&quot; @click=&quot;toggleAddress&quot;&gt;确定&lt;/el-button&gt;</span><br><span class="line">      &lt;/span&gt;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">  &lt;/el-dialog&gt;</span><br><span class="line">  &lt;!-- 添加地址 --&gt;</span><br><span class="line">  &lt;el-dialog title=&quot;添加收货地址&quot; width=&quot;30%&quot; center v-model=&quot;addDialogVisible&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;addressWrapper&quot;&gt;</span><br><span class="line">      &lt;el-form label-width=&quot;100px&quot; :model=&quot;formData&quot; style=&quot;max-width: 460px&quot;&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;收货人&quot; required&gt;</span><br><span class="line">          &lt;el-input placeholder=&quot;请输入收货人&quot; v-model=&quot;formData.receiver&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;手机号&quot; required&gt;</span><br><span class="line">          &lt;el-input placeholder=&quot;请输入手机号&quot; v-model=&quot;formData.contact&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;地区&quot; required&gt;</span><br><span class="line">          &lt;el-cascader</span><br><span class="line">            placeholder=&quot;请选择所在地区&quot;</span><br><span class="line">            v-model=&quot;formData.region&quot;</span><br><span class="line">            :options=&quot;regionData&quot;</span><br><span class="line">            @change=&quot;handleChange&quot;</span><br><span class="line">            required</span><br><span class="line">          /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;详细地址&quot; required&gt;</span><br><span class="line">          &lt;el-input placeholder=&quot;请输入详细地址&quot; v-model=&quot;formData.address&quot; /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;邮政编码&quot; required&gt;</span><br><span class="line">          &lt;el-input</span><br><span class="line">            placeholder=&quot;请输入邮政编码&quot;</span><br><span class="line">            v-model=&quot;formData.postalCode&quot;</span><br><span class="line">          /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;地址标签&quot; required&gt;</span><br><span class="line">          &lt;el-input</span><br><span class="line">            placeholder=&quot;请输入地址标签&quot;</span><br><span class="line">            v-model=&quot;formData.addressTags&quot;</span><br><span class="line">          /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item label=&quot;设为默认地址&quot; required&gt;</span><br><span class="line">          &lt;el-switch</span><br><span class="line">            v-model=&quot;formData.isDefault&quot;</span><br><span class="line">            :active-value=&quot;0&quot;</span><br><span class="line">            :inactive-value=&quot;1&quot;</span><br><span class="line">          /&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">      &lt;/el-form&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;template #footer&gt;</span><br><span class="line">      &lt;span class=&quot;dialog-footer&quot;&gt;</span><br><span class="line">        &lt;el-button @click=&quot;cancel&quot;&gt;取消&lt;/el-button&gt;</span><br><span class="line">        &lt;el-button type=&quot;primary&quot; @click=&quot;confirm&quot;&gt;确定&lt;/el-button&gt;</span><br><span class="line">      &lt;/span&gt;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">  &lt;/el-dialog&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class="line">.xtx-pay-checkout-page &#123;</span><br><span class="line">  margin-top: 20px;</span><br><span class="line"></span><br><span class="line">  .wrapper &#123;</span><br><span class="line">    background: #fff;</span><br><span class="line">    padding: 0 20px;</span><br><span class="line"></span><br><span class="line">    .box-title &#123;</span><br><span class="line">      font-size: 16px;</span><br><span class="line">      font-weight: normal;</span><br><span class="line">      padding-left: 10px;</span><br><span class="line">      line-height: 70px;</span><br><span class="line">      border-bottom: 1px solid #f5f5f5;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .box-body &#123;</span><br><span class="line">      padding: 20px 0;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.address &#123;</span><br><span class="line">  border: 1px solid #f5f5f5;</span><br><span class="line">  display: flex;</span><br><span class="line">  align-items: center;</span><br><span class="line"></span><br><span class="line">  .text &#123;</span><br><span class="line">    flex: 1;</span><br><span class="line">    min-height: 90px;</span><br><span class="line">    display: flex;</span><br><span class="line">    align-items: center;</span><br><span class="line"></span><br><span class="line">    .none &#123;</span><br><span class="line">      line-height: 90px;</span><br><span class="line">      color: #999;</span><br><span class="line">      text-align: center;</span><br><span class="line">      width: 100%;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &gt; ul &#123;</span><br><span class="line">      flex: 1;</span><br><span class="line">      padding: 20px;</span><br><span class="line"></span><br><span class="line">      li &#123;</span><br><span class="line">        line-height: 30px;</span><br><span class="line"></span><br><span class="line">        span &#123;</span><br><span class="line">          color: #999;</span><br><span class="line">          margin-right: 5px;</span><br><span class="line"></span><br><span class="line">          &gt; i &#123;</span><br><span class="line">            width: 0.5em;</span><br><span class="line">            display: inline-block;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &gt; a &#123;</span><br><span class="line">      color: $xtxColor;</span><br><span class="line">      width: 160px;</span><br><span class="line">      text-align: center;</span><br><span class="line">      height: 90px;</span><br><span class="line">      line-height: 90px;</span><br><span class="line">      border-right: 1px solid #f5f5f5;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .action &#123;</span><br><span class="line">    width: 420px;</span><br><span class="line">    text-align: center;</span><br><span class="line"></span><br><span class="line">    .btn &#123;</span><br><span class="line">      width: 140px;</span><br><span class="line">      height: 46px;</span><br><span class="line">      line-height: 44px;</span><br><span class="line">      font-size: 14px;</span><br><span class="line"></span><br><span class="line">      &amp;:first-child &#123;</span><br><span class="line">        margin-right: 10px;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.goods &#123;</span><br><span class="line">  width: 100%;</span><br><span class="line">  border-collapse: collapse;</span><br><span class="line">  border-spacing: 0;</span><br><span class="line"></span><br><span class="line">  .info &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    text-align: left;</span><br><span class="line"></span><br><span class="line">    img &#123;</span><br><span class="line">      width: 70px;</span><br><span class="line">      height: 70px;</span><br><span class="line">      margin-right: 20px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .right &#123;</span><br><span class="line">      line-height: 24px;</span><br><span class="line"></span><br><span class="line">      p &#123;</span><br><span class="line">        &amp;:last-child &#123;</span><br><span class="line">          color: #999;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  tr &#123;</span><br><span class="line">    th &#123;</span><br><span class="line">      background: #f5f5f5;</span><br><span class="line">      font-weight: normal;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    td,</span><br><span class="line">    th &#123;</span><br><span class="line">      text-align: center;</span><br><span class="line">      padding: 20px;</span><br><span class="line">      border-bottom: 1px solid #f5f5f5;</span><br><span class="line"></span><br><span class="line">      &amp;:first-child &#123;</span><br><span class="line">        border-left: 1px solid #f5f5f5;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      &amp;:last-child &#123;</span><br><span class="line">        border-right: 1px solid #f5f5f5;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.my-btn &#123;</span><br><span class="line">  width: 228px;</span><br><span class="line">  height: 50px;</span><br><span class="line">  border: 1px solid #e4e4e4;</span><br><span class="line">  text-align: center;</span><br><span class="line">  line-height: 48px;</span><br><span class="line">  margin-right: 25px;</span><br><span class="line">  color: #666666;</span><br><span class="line">  display: inline-block;</span><br><span class="line"></span><br><span class="line">  &amp;.active,</span><br><span class="line">  &amp;:hover &#123;</span><br><span class="line">    border-color: $xtxColor;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.total &#123;</span><br><span class="line">  dl &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    justify-content: flex-end;</span><br><span class="line">    line-height: 50px;</span><br><span class="line"></span><br><span class="line">    dt &#123;</span><br><span class="line">      i &#123;</span><br><span class="line">        display: inline-block;</span><br><span class="line">        width: 2em;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    dd &#123;</span><br><span class="line">      width: 240px;</span><br><span class="line">      text-align: right;</span><br><span class="line">      padding-right: 70px;</span><br><span class="line"></span><br><span class="line">      &amp;.price &#123;</span><br><span class="line">        font-size: 20px;</span><br><span class="line">        color: $priceColor;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.submit &#123;</span><br><span class="line">  text-align: right;</span><br><span class="line">  padding: 60px;</span><br><span class="line">  border-top: 1px solid #f5f5f5;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.addressWrapper &#123;</span><br><span class="line">  max-height: 500px;</span><br><span class="line">  overflow-y: auto;</span><br><span class="line">  :deep(.el-form-item__label) &#123;</span><br><span class="line">    width: 120px !important;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.text &#123;</span><br><span class="line">  flex: 1;</span><br><span class="line">  position: relative;</span><br><span class="line">  min-height: 90px;</span><br><span class="line">  display: flex;</span><br><span class="line">  align-items: center;</span><br><span class="line">  &amp;.item &#123;</span><br><span class="line">    border: 1px solid #f5f5f5;</span><br><span class="line">    margin-bottom: 10px;</span><br><span class="line">    cursor: pointer;</span><br><span class="line"></span><br><span class="line">    &amp;.active,</span><br><span class="line">    &amp;:hover &#123;</span><br><span class="line">      border-color: $xtxColor;</span><br><span class="line">      background: lighten($xtxColor, 50%);</span><br><span class="line">    &#125;</span><br><span class="line">    &amp;:hover .close &#123;</span><br><span class="line">      opacity: 1;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &gt; ul &#123;</span><br><span class="line">      padding: 10px;</span><br><span class="line">      font-size: 14px;</span><br><span class="line">      line-height: 30px;</span><br><span class="line">    &#125;</span><br><span class="line">    .close &#123;</span><br><span class="line">      position: absolute;</span><br><span class="line">      top: 10px;</span><br><span class="line">      right: 10px;</span><br><span class="line">      opacity: 0;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<h2 id="十一、支付页"><a href="#十一、支付页" class="headerlink" title="十一、支付页"></a>十一、支付页</h2><h3 id="1、整体结构"><a href="#1、整体结构" class="headerlink" title="1、整体结构"></a>1、整体结构</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; getOrderAPI &#125; from &quot;@/apis/payPage&quot;;</span><br><span class="line">import &#123; useRoute &#125; from &quot;vue-router&quot;;</span><br><span class="line">import &#123; ref, computed &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123; onMounted &#125; from &quot;vue&quot;;</span><br><span class="line">import dayjs from &quot;dayjs&quot;;</span><br><span class="line">import &#123; onUnmounted &#125; from &quot;vue&quot;;</span><br><span class="line">const route = useRoute();</span><br><span class="line">const payInfo = ref(&#123;&#125;);</span><br><span class="line">const time = ref(0);</span><br><span class="line">let timer = null;</span><br><span class="line">const getPayInfo = async () =&gt; &#123;</span><br><span class="line">  const &#123; data &#125; = await getOrderAPI(route.params.id);</span><br><span class="line">  payInfo.value = data.result;</span><br><span class="line">  time.value = data.result.countdown;</span><br><span class="line">  timer = setInterval(() =&gt; &#123;</span><br><span class="line">    time.value--;</span><br><span class="line">  &#125;, 1000);</span><br><span class="line">&#125;;</span><br><span class="line">const formateTime = computed(() =&gt; dayjs.unix(time.value).format(&quot;mm分ss秒&quot;));</span><br><span class="line">onMounted(() =&gt; getPayInfo());</span><br><span class="line">// 点击支付宝付款</span><br><span class="line">const baseURL = &quot;http://pcapi-xiaotuxian-front-devtest.itheima.net/&quot;;</span><br><span class="line">const backURL = &quot;http://localhost:5173/paycallback&quot;;</span><br><span class="line">const redirectUrl = encodeURIComponent(backURL);</span><br><span class="line">const payUrl = `$&#123;baseURL&#125;pay/aliPay?orderId=$&#123;route.params.id&#125;&amp;redirect=$&#123;redirectUrl&#125;`;</span><br><span class="line">// 别忘了组件销毁时手动清除定时器，因为浏览器在组件销毁后并不会自动清除定时器</span><br><span class="line">onUnmounted(() =&gt; clearInterval(timer));</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;xtx-pay-page&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">      &lt;!-- 付款信息 --&gt;</span><br><span class="line">      &lt;div class=&quot;pay-info&quot;&gt;</span><br><span class="line">        &lt;span class=&quot;icon iconfont icon-queren2&quot;&gt;&lt;/span&gt;</span><br><span class="line">        &lt;div class=&quot;tip&quot;&gt;</span><br><span class="line">          &lt;p&gt;订单提交成功！请尽快完成支付。&lt;/p&gt;</span><br><span class="line">          &lt;p&gt;</span><br><span class="line">            支付还剩 &lt;span&gt;&#123;&#123; formateTime &#125;&#125;&lt;/span</span><br><span class="line">            &gt;, 超时后将取消订单</span><br><span class="line">          &lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;amount&quot;&gt;</span><br><span class="line">          &lt;span&gt;应付总额：&lt;/span&gt;</span><br><span class="line">          &lt;span&gt;¥&#123;&#123; payInfo.payMoney?.toFixed(2) &#125;&#125;&lt;/span&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;!-- 付款方式 --&gt;</span><br><span class="line">      &lt;div class=&quot;pay-type&quot;&gt;</span><br><span class="line">        &lt;p class=&quot;head&quot;&gt;选择以下支付方式付款&lt;/p&gt;</span><br><span class="line">        &lt;div class=&quot;item&quot;&gt;</span><br><span class="line">          &lt;p&gt;支付平台&lt;/p&gt;</span><br><span class="line">          &lt;a class=&quot;btn wx&quot; href=&quot;javascript:;&quot;&gt;&lt;/a&gt;</span><br><span class="line">          &lt;a class=&quot;btn alipay&quot; :href=&quot;payUrl&quot;&gt;&lt;/a&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;item&quot;&gt;</span><br><span class="line">          &lt;p&gt;支付方式&lt;/p&gt;</span><br><span class="line">          &lt;a class=&quot;btn&quot; href=&quot;javascript:;&quot;&gt;招商银行&lt;/a&gt;</span><br><span class="line">          &lt;a class=&quot;btn&quot; href=&quot;javascript:;&quot;&gt;工商银行&lt;/a&gt;</span><br><span class="line">          &lt;a class=&quot;btn&quot; href=&quot;javascript:;&quot;&gt;建设银行&lt;/a&gt;</span><br><span class="line">          &lt;a class=&quot;btn&quot; href=&quot;javascript:;&quot;&gt;农业银行&lt;/a&gt;</span><br><span class="line">          &lt;a class=&quot;btn&quot; href=&quot;javascript:;&quot;&gt;交通银行&lt;/a&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class="line">.xtx-pay-page &#123;</span><br><span class="line">  margin-top: 20px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.pay-info &#123;</span><br><span class="line">  background: #fff;</span><br><span class="line">  display: flex;</span><br><span class="line">  align-items: center;</span><br><span class="line">  height: 240px;</span><br><span class="line">  padding: 0 80px;</span><br><span class="line"></span><br><span class="line">  .icon &#123;</span><br><span class="line">    font-size: 80px;</span><br><span class="line">    color: #1dc779;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .tip &#123;</span><br><span class="line">    padding-left: 10px;</span><br><span class="line">    flex: 1;</span><br><span class="line"></span><br><span class="line">    p &#123;</span><br><span class="line">      &amp;:first-child &#123;</span><br><span class="line">        font-size: 20px;</span><br><span class="line">        margin-bottom: 5px;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      &amp;:last-child &#123;</span><br><span class="line">        color: #999;</span><br><span class="line">        font-size: 16px;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .amount &#123;</span><br><span class="line">    span &#123;</span><br><span class="line">      &amp;:first-child &#123;</span><br><span class="line">        font-size: 16px;</span><br><span class="line">        color: #999;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      &amp;:last-child &#123;</span><br><span class="line">        color: $priceColor;</span><br><span class="line">        font-size: 20px;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.pay-type &#123;</span><br><span class="line">  margin-top: 20px;</span><br><span class="line">  background-color: #fff;</span><br><span class="line">  padding-bottom: 70px;</span><br><span class="line"></span><br><span class="line">  p &#123;</span><br><span class="line">    line-height: 70px;</span><br><span class="line">    height: 70px;</span><br><span class="line">    padding-left: 30px;</span><br><span class="line">    font-size: 16px;</span><br><span class="line"></span><br><span class="line">    &amp;.head &#123;</span><br><span class="line">      border-bottom: 1px solid #f5f5f5;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .btn &#123;</span><br><span class="line">    width: 150px;</span><br><span class="line">    height: 50px;</span><br><span class="line">    border: 1px solid #e4e4e4;</span><br><span class="line">    text-align: center;</span><br><span class="line">    line-height: 48px;</span><br><span class="line">    margin-left: 30px;</span><br><span class="line">    color: #666666;</span><br><span class="line">    display: inline-block;</span><br><span class="line"></span><br><span class="line">    &amp;.active,</span><br><span class="line">    &amp;:hover &#123;</span><br><span class="line">      border-color: $xtxColor;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &amp;.alipay &#123;</span><br><span class="line">      background: url(https://cdn.cnbj1.fds.api.mi-img.com/mi-mall/7b6b02396368c9314528c0bbd85a2e06.png)</span><br><span class="line">        no-repeat center / contain;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &amp;.wx &#123;</span><br><span class="line">      background: url(https://cdn.cnbj1.fds.api.mi-img.com/mi-mall/c66f98cff8649bd5ba722c2e8067c6ca.jpg)</span><br><span class="line">        no-repeat center / contain;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<h3 id="2、支付业务流程"><a href="#2、支付业务流程" class="headerlink" title="2、支付业务流程"></a>2、支付业务流程</h3><p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230605104940358.png" alt="image-20230605104940358"></p>
<p>因此，在前端我们只需要给<em>点击支付</em>一个 URL 地址，并携带 orderId 参数和 redirect 参数（用于指定支付完成后的回跳地址）即可。支付完成后，页面会携带订单 id 和支付状态的参数自动跳转到我们给定的这个回跳地址</p>
<h3 id="3、支付结果展示"><a href="#3、支付结果展示" class="headerlink" title="3、支付结果展示"></a>3、支付结果展示</h3><p>paycallback 组件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; getOrderAPI &#125; from &quot;@/apis/payPage&quot;;</span><br><span class="line">import &#123; onMounted, ref &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123; useRoute &#125; from &quot;vue-router&quot;;</span><br><span class="line">const route = useRoute();</span><br><span class="line">const orderInfo = ref(&#123;&#125;);</span><br><span class="line"></span><br><span class="line">const getOrderInfo = async () =&gt; &#123;</span><br><span class="line">  const &#123; data &#125; = await getOrderAPI(route.query.orderId);</span><br><span class="line">  orderInfo.value = data.result;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">onMounted(() =&gt; getOrderInfo());</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;xtx-pay-page&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">      &lt;!-- 支付结果 --&gt;</span><br><span class="line">      &lt;div class=&quot;pay-result&quot;&gt;</span><br><span class="line">        &lt;span</span><br><span class="line">          class=&quot;iconfont icon-queren2 green&quot;</span><br><span class="line">          v-if=&quot;$route.query.payResult === &#x27;true&#x27;&quot;</span><br><span class="line">        &gt;&lt;/span&gt;</span><br><span class="line">        &lt;span class=&quot;iconfont icon-shanchu red&quot; v-else&gt;&lt;/span&gt;</span><br><span class="line">        &lt;p class=&quot;tit&quot;&gt;</span><br><span class="line">          支付&#123;&#123; $route.query.payResult === &quot;true&quot; ? &quot;成功&quot; : &quot;失败&quot; &#125;&#125;</span><br><span class="line">        &lt;/p&gt;</span><br><span class="line">        &lt;p class=&quot;tip&quot;&gt;我们将尽快为您发货，收货期间请保持手机畅通&lt;/p&gt;</span><br><span class="line">        &lt;p&gt;支付方式：&lt;span&gt;支付宝&lt;/span&gt;&lt;/p&gt;</span><br><span class="line">        &lt;p&gt;</span><br><span class="line">          支付金额：&lt;span&gt;¥&#123;&#123; orderInfo.payMoney?.toFixed(2) &#125;&#125;&lt;/span&gt;</span><br><span class="line">        &lt;/p&gt;</span><br><span class="line">        &lt;div class=&quot;btn&quot;&gt;</span><br><span class="line">          &lt;el-button</span><br><span class="line">            type=&quot;primary&quot;</span><br><span class="line">            style=&quot;margin-right: 20px&quot;</span><br><span class="line">            @click=&quot;$router.push(&#x27;/VIP&#x27;)&quot;</span><br><span class="line">            &gt;查看订单&lt;/el-button</span><br><span class="line">          &gt;</span><br><span class="line">          &lt;el-button @click=&quot;$router.push(&#x27;/&#x27;)&quot;&gt;进入首页&lt;/el-button&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;p class=&quot;alert&quot;&gt;</span><br><span class="line">          &lt;span class=&quot;iconfont icon-tip&quot;&gt;&lt;/span&gt;</span><br><span class="line">          温馨提示：小兔鲜儿不会以订单异常、系统升级为由要求您点击任何网址链接进行退款操作，保护资产、谨慎操作。</span><br><span class="line">        &lt;/p&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class="line">.pay-result &#123;</span><br><span class="line">  padding: 100px 0;</span><br><span class="line">  background: #fff;</span><br><span class="line">  text-align: center;</span><br><span class="line">  margin-top: 20px;</span><br><span class="line"></span><br><span class="line">  &gt; .iconfont &#123;</span><br><span class="line">    font-size: 100px;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .green &#123;</span><br><span class="line">    color: #1dc779;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .red &#123;</span><br><span class="line">    color: $priceColor;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .tit &#123;</span><br><span class="line">    font-size: 24px;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .tip &#123;</span><br><span class="line">    color: #999;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  p &#123;</span><br><span class="line">    line-height: 40px;</span><br><span class="line">    font-size: 16px;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .btn &#123;</span><br><span class="line">    margin-top: 50px;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .alert &#123;</span><br><span class="line">    font-size: 12px;</span><br><span class="line">    color: #999;</span><br><span class="line">    margin-top: 50px;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<h2 id="十二、会员中心"><a href="#十二、会员中心" class="headerlink" title="十二、会员中心"></a>十二、会员中心</h2><h3 id="1、整体结构-1"><a href="#1、整体结构-1" class="headerlink" title="1、整体结构"></a>1、整体结构</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;xtx-member-aside&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;user-manage&quot;&gt;</span><br><span class="line">        &lt;h4&gt;我的账户&lt;/h4&gt;</span><br><span class="line">        &lt;div class=&quot;links&quot;&gt;</span><br><span class="line">          &lt;RouterLink to=&quot;/VIP&quot;&gt;个人中心&lt;/RouterLink&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;h4&gt;交易管理&lt;/h4&gt;</span><br><span class="line">        &lt;div class=&quot;links&quot;&gt;</span><br><span class="line">          &lt;RouterLink to=&quot;/VIP/myOrders&quot;&gt;我的订单&lt;/RouterLink&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;article&quot;&gt;</span><br><span class="line">      &lt;!-- 三级路由的挂载点 --&gt;</span><br><span class="line">      &lt;RouterView /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class="line">.container &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  padding-top: 20px;</span><br><span class="line"></span><br><span class="line">  .xtx-member-aside &#123;</span><br><span class="line">    width: 220px;</span><br><span class="line">    margin-right: 20px;</span><br><span class="line">    border-radius: 2px;</span><br><span class="line">    background-color: #fff;</span><br><span class="line"></span><br><span class="line">    .user-manage &#123;</span><br><span class="line">      background-color: #fff;</span><br><span class="line"></span><br><span class="line">      h4 &#123;</span><br><span class="line">        font-size: 18px;</span><br><span class="line">        font-weight: 400;</span><br><span class="line">        padding: 20px 52px 5px;</span><br><span class="line">        border-top: 1px solid #f6f6f6;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      .links &#123;</span><br><span class="line">        padding: 0 52px 10px;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      a &#123;</span><br><span class="line">        display: block;</span><br><span class="line">        line-height: 1;</span><br><span class="line">        padding: 15px 0;</span><br><span class="line">        font-size: 14px;</span><br><span class="line">        color: #666;</span><br><span class="line">        position: relative;</span><br><span class="line"></span><br><span class="line">        &amp;:hover &#123;</span><br><span class="line">          color: $xtxColor;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &amp;.active,</span><br><span class="line">        &amp;.router-link-exact-active &#123;</span><br><span class="line">          color: $xtxColor;</span><br><span class="line"></span><br><span class="line">          &amp;:before &#123;</span><br><span class="line">            display: block;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &amp;:before &#123;</span><br><span class="line">          content: &quot;&quot;;</span><br><span class="line">          display: none;</span><br><span class="line">          width: 6px;</span><br><span class="line">          height: 6px;</span><br><span class="line">          border-radius: 50%;</span><br><span class="line">          position: absolute;</span><br><span class="line">          top: 19px;</span><br><span class="line">          left: -16px;</span><br><span class="line">          background-color: $xtxColor;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .article &#123;</span><br><span class="line">    width: 1000px;</span><br><span class="line">    background-color: #fff;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p>我的订单 myOrders 组件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; getUserOrder &#125; from &quot;@/apis/vip&quot;;</span><br><span class="line">import &#123; onMounted &#125; from &quot;vue&quot;;</span><br><span class="line">import &#123; ref &#125; from &quot;vue&quot;;</span><br><span class="line">// 订单列表</span><br><span class="line">const orderList = ref([]);</span><br><span class="line">const queryList = ref(&#123;</span><br><span class="line">  orderState: 0,</span><br><span class="line">  page: 1,</span><br><span class="line">  pageSize: 2,</span><br><span class="line">  totalCount: 0,</span><br><span class="line">&#125;);</span><br><span class="line">const getOrders = async () =&gt; &#123;</span><br><span class="line">  const &#123; data &#125; = await getUserOrder(queryList.value);</span><br><span class="line">  orderList.value = data.result.items;</span><br><span class="line">  queryList.value.totalCount = data.result.counts;</span><br><span class="line">&#125;;</span><br><span class="line">onMounted(() =&gt; getOrders());</span><br><span class="line">// tab列表</span><br><span class="line">const tabTypes = [</span><br><span class="line">  &#123; name: &quot;all&quot;, label: &quot;全部订单&quot; &#125;,</span><br><span class="line">  &#123; name: &quot;unpay&quot;, label: &quot;待付款&quot; &#125;,</span><br><span class="line">  &#123; name: &quot;deliver&quot;, label: &quot;待发货&quot; &#125;,</span><br><span class="line">  &#123; name: &quot;receive&quot;, label: &quot;待收货&quot; &#125;,</span><br><span class="line">  &#123; name: &quot;comment&quot;, label: &quot;待评价&quot; &#125;,</span><br><span class="line">  &#123; name: &quot;complete&quot;, label: &quot;已完成&quot; &#125;,</span><br><span class="line">  &#123; name: &quot;cancel&quot;, label: &quot;已取消&quot; &#125;,</span><br><span class="line">];</span><br><span class="line">// 页码改变时</span><br><span class="line">const pageChange = async (val) =&gt; &#123;</span><br><span class="line">  queryList.value.page = val;</span><br><span class="line">  getOrders();</span><br><span class="line">&#125;;</span><br><span class="line">// tab栏切换</span><br><span class="line">const change = (value) =&gt; &#123;</span><br><span class="line">  queryList.value.orderState = value;</span><br><span class="line">  getOrders();</span><br><span class="line">&#125;;</span><br><span class="line">// 格式化订单状态显示</span><br><span class="line">const stateMap = &#123;</span><br><span class="line">  1: &quot;待付款&quot;,</span><br><span class="line">  2: &quot;待发货&quot;,</span><br><span class="line">  3: &quot;待收货&quot;,</span><br><span class="line">  4: &quot;待评价&quot;,</span><br><span class="line">  5: &quot;已完成&quot;,</span><br><span class="line">  6: &quot;已取消&quot;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;order-container&quot;&gt;</span><br><span class="line">    &lt;el-tabs @tab-change=&quot;change&quot;&gt;</span><br><span class="line">      &lt;!-- tab切换 --&gt;</span><br><span class="line">      &lt;el-tab-pane</span><br><span class="line">        v-for=&quot;item in tabTypes&quot;</span><br><span class="line">        :key=&quot;item.name&quot;</span><br><span class="line">        :label=&quot;item.label&quot;</span><br><span class="line">      /&gt;</span><br><span class="line"></span><br><span class="line">      &lt;div class=&quot;main-container&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;holder-container&quot; v-if=&quot;orderList.length === 0&quot;&gt;</span><br><span class="line">          &lt;el-empty description=&quot;暂无订单数据&quot; /&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div v-else&gt;</span><br><span class="line">          &lt;!-- 订单列表 --&gt;</span><br><span class="line">          &lt;div class=&quot;order-item&quot; v-for=&quot;order in orderList&quot; :key=&quot;order.id&quot;&gt;</span><br><span class="line">            &lt;div class=&quot;head&quot;&gt;</span><br><span class="line">              &lt;span&gt;下单时间：&#123;&#123; order.createTime &#125;&#125;&lt;/span&gt;</span><br><span class="line">              &lt;span&gt;订单编号：&#123;&#123; order.id &#125;&#125;&lt;/span&gt;</span><br><span class="line">              &lt;!-- 未付款，倒计时时间还有 --&gt;</span><br><span class="line">              &lt;span class=&quot;down-time&quot; v-if=&quot;order.orderState === 1&quot;&gt;</span><br><span class="line">                &lt;i class=&quot;iconfont icon-down-time&quot;&gt;&lt;/i&gt;</span><br><span class="line">                &lt;b&gt;付款截止: &#123;&#123; order.countdown &#125;&#125;&lt;/b&gt;</span><br><span class="line">              &lt;/span&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div class=&quot;body&quot;&gt;</span><br><span class="line">              &lt;div class=&quot;column goods&quot;&gt;</span><br><span class="line">                &lt;ul&gt;</span><br><span class="line">                  &lt;li v-for=&quot;item in order.skus&quot; :key=&quot;item.id&quot;&gt;</span><br><span class="line">                    &lt;a class=&quot;image&quot; href=&quot;javascript:;&quot;&gt;</span><br><span class="line">                      &lt;img :src=&quot;item.image&quot; alt=&quot;&quot; /&gt;</span><br><span class="line">                    &lt;/a&gt;</span><br><span class="line">                    &lt;div class=&quot;info&quot;&gt;</span><br><span class="line">                      &lt;p class=&quot;name ellipsis-2&quot;&gt;</span><br><span class="line">                        &#123;&#123; item.name &#125;&#125;</span><br><span class="line">                      &lt;/p&gt;</span><br><span class="line">                      &lt;p class=&quot;attr ellipsis&quot;&gt;</span><br><span class="line">                        &lt;span&gt;&#123;&#123; item.attrsText &#125;&#125;&lt;/span&gt;</span><br><span class="line">                      &lt;/p&gt;</span><br><span class="line">                    &lt;/div&gt;</span><br><span class="line">                    &lt;div class=&quot;price&quot;&gt;¥&#123;&#123; item.realPay?.toFixed(2) &#125;&#125;&lt;/div&gt;</span><br><span class="line">                    &lt;div class=&quot;count&quot;&gt;x&#123;&#123; item.quantity &#125;&#125;&lt;/div&gt;</span><br><span class="line">                  &lt;/li&gt;</span><br><span class="line">                &lt;/ul&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">              &lt;div class=&quot;column state&quot;&gt;</span><br><span class="line">                &lt;p&gt;&#123;&#123; stateMap[order.orderState] &#125;&#125;&lt;/p&gt;</span><br><span class="line">                &lt;p v-if=&quot;order.orderState === 3&quot;&gt;</span><br><span class="line">                  &lt;a href=&quot;javascript:;&quot; class=&quot;green&quot;&gt;查看物流&lt;/a&gt;</span><br><span class="line">                &lt;/p&gt;</span><br><span class="line">                &lt;p v-if=&quot;order.orderState === 4&quot;&gt;</span><br><span class="line">                  &lt;a href=&quot;javascript:;&quot; class=&quot;green&quot;&gt;评价商品&lt;/a&gt;</span><br><span class="line">                &lt;/p&gt;</span><br><span class="line">                &lt;p v-if=&quot;order.orderState === 5&quot;&gt;</span><br><span class="line">                  &lt;a href=&quot;javascript:;&quot; class=&quot;green&quot;&gt;查看评价&lt;/a&gt;</span><br><span class="line">                &lt;/p&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">              &lt;div class=&quot;column amount&quot;&gt;</span><br><span class="line">                &lt;p class=&quot;red&quot;&gt;¥&#123;&#123; order.payMoney?.toFixed(2) &#125;&#125;&lt;/p&gt;</span><br><span class="line">                &lt;p&gt;（含运费：¥&#123;&#123; order.postFee?.toFixed(2) &#125;&#125;）&lt;/p&gt;</span><br><span class="line">                &lt;p&gt;在线支付&lt;/p&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">              &lt;div class=&quot;column action&quot;&gt;</span><br><span class="line">                &lt;el-button</span><br><span class="line">                  v-if=&quot;order.orderState === 1&quot;</span><br><span class="line">                  type=&quot;primary&quot;</span><br><span class="line">                  size=&quot;small&quot;</span><br><span class="line">                &gt;</span><br><span class="line">                  立即付款</span><br><span class="line">                &lt;/el-button&gt;</span><br><span class="line">                &lt;el-button</span><br><span class="line">                  v-if=&quot;order.orderState === 3&quot;</span><br><span class="line">                  type=&quot;primary&quot;</span><br><span class="line">                  size=&quot;small&quot;</span><br><span class="line">                &gt;</span><br><span class="line">                  确认收货</span><br><span class="line">                &lt;/el-button&gt;</span><br><span class="line">                &lt;p&gt;&lt;a href=&quot;javascript:;&quot;&gt;查看详情&lt;/a&gt;&lt;/p&gt;</span><br><span class="line">                &lt;p v-if=&quot;[2, 3, 4, 5].includes(order.orderState)&quot;&gt;</span><br><span class="line">                  &lt;a href=&quot;javascript:;&quot;&gt;再次购买&lt;/a&gt;</span><br><span class="line">                &lt;/p&gt;</span><br><span class="line">                &lt;p v-if=&quot;[4, 5].includes(order.orderState)&quot;&gt;</span><br><span class="line">                  &lt;a href=&quot;javascript:;&quot;&gt;申请售后&lt;/a&gt;</span><br><span class="line">                &lt;/p&gt;</span><br><span class="line">                &lt;p v-if=&quot;order.orderState === 1&quot;&gt;</span><br><span class="line">                  &lt;a href=&quot;javascript:;&quot;&gt;取消订单&lt;/a&gt;</span><br><span class="line">                &lt;/p&gt;</span><br><span class="line">              &lt;/div&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">          &lt;!-- 分页 --&gt;</span><br><span class="line">          &lt;div class=&quot;pagination-container&quot;&gt;</span><br><span class="line">            &lt;el-pagination</span><br><span class="line">              background</span><br><span class="line">              layout=&quot;prev, pager, next&quot;</span><br><span class="line">              :total=&quot;queryList.totalCount&quot;</span><br><span class="line">              :page-size=&quot;queryList.pageSize&quot;</span><br><span class="line">              :current-page=&quot;queryList.page&quot;</span><br><span class="line">              @current-change=&quot;pageChange&quot;</span><br><span class="line">            /&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/el-tabs&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class="line">.order-container &#123;</span><br><span class="line">  padding: 10px 20px;</span><br><span class="line"></span><br><span class="line">  .pagination-container &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    justify-content: center;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .main-container &#123;</span><br><span class="line">    min-height: 500px;</span><br><span class="line"></span><br><span class="line">    .holder-container &#123;</span><br><span class="line">      min-height: 500px;</span><br><span class="line">      display: flex;</span><br><span class="line">      justify-content: center;</span><br><span class="line">      align-items: center;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.order-item &#123;</span><br><span class="line">  margin-bottom: 20px;</span><br><span class="line">  border: 1px solid #f5f5f5;</span><br><span class="line"></span><br><span class="line">  .head &#123;</span><br><span class="line">    height: 50px;</span><br><span class="line">    line-height: 50px;</span><br><span class="line">    background: #f5f5f5;</span><br><span class="line">    padding: 0 20px;</span><br><span class="line">    overflow: hidden;</span><br><span class="line"></span><br><span class="line">    span &#123;</span><br><span class="line">      margin-right: 20px;</span><br><span class="line"></span><br><span class="line">      &amp;.down-time &#123;</span><br><span class="line">        margin-right: 0;</span><br><span class="line">        float: right;</span><br><span class="line"></span><br><span class="line">        i &#123;</span><br><span class="line">          vertical-align: middle;</span><br><span class="line">          margin-right: 3px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        b &#123;</span><br><span class="line">          vertical-align: middle;</span><br><span class="line">          font-weight: normal;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    .del &#123;</span><br><span class="line">      margin-right: 0;</span><br><span class="line">      float: right;</span><br><span class="line">      color: #999;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .body &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    align-items: stretch;</span><br><span class="line"></span><br><span class="line">    .column &#123;</span><br><span class="line">      border-left: 1px solid #f5f5f5;</span><br><span class="line">      text-align: center;</span><br><span class="line">      padding: 20px;</span><br><span class="line"></span><br><span class="line">      &gt; p &#123;</span><br><span class="line">        padding-top: 10px;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      &amp;:first-child &#123;</span><br><span class="line">        border-left: none;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      &amp;.goods &#123;</span><br><span class="line">        flex: 1;</span><br><span class="line">        padding: 0;</span><br><span class="line">        align-self: center;</span><br><span class="line"></span><br><span class="line">        ul &#123;</span><br><span class="line">          li &#123;</span><br><span class="line">            border-bottom: 1px solid #f5f5f5;</span><br><span class="line">            padding: 10px;</span><br><span class="line">            display: flex;</span><br><span class="line"></span><br><span class="line">            &amp;:last-child &#123;</span><br><span class="line">              border-bottom: none;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            .image &#123;</span><br><span class="line">              width: 70px;</span><br><span class="line">              height: 70px;</span><br><span class="line">              border: 1px solid #f5f5f5;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            .info &#123;</span><br><span class="line">              width: 220px;</span><br><span class="line">              text-align: left;</span><br><span class="line">              padding: 0 10px;</span><br><span class="line"></span><br><span class="line">              p &#123;</span><br><span class="line">                margin-bottom: 5px;</span><br><span class="line"></span><br><span class="line">                &amp;.name &#123;</span><br><span class="line">                  height: 38px;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                &amp;.attr &#123;</span><br><span class="line">                  color: #999;</span><br><span class="line">                  font-size: 12px;</span><br><span class="line"></span><br><span class="line">                  span &#123;</span><br><span class="line">                    margin-right: 5px;</span><br><span class="line">                  &#125;</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            .price &#123;</span><br><span class="line">              width: 100px;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            .count &#123;</span><br><span class="line">              width: 80px;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      &amp;.state &#123;</span><br><span class="line">        width: 120px;</span><br><span class="line"></span><br><span class="line">        .green &#123;</span><br><span class="line">          color: $xtxColor;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      &amp;.amount &#123;</span><br><span class="line">        width: 200px;</span><br><span class="line"></span><br><span class="line">        .red &#123;</span><br><span class="line">          color: $priceColor;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      &amp;.action &#123;</span><br><span class="line">        width: 140px;</span><br><span class="line"></span><br><span class="line">        a &#123;</span><br><span class="line">          display: block;</span><br><span class="line"></span><br><span class="line">          &amp;:hover &#123;</span><br><span class="line">            color: $xtxColor;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p>个人中心 userInfo 组件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; useUserInfoStore &#125; from &quot;@/stores/userInfo&quot;;</span><br><span class="line">import &#123; getLikeListAPI &#125; from &quot;@/apis/vip&quot;;</span><br><span class="line">import &#123; ref, onMounted &#125; from &quot;vue&quot;;</span><br><span class="line">const &#123; userInfo &#125; = useUserInfoStore();</span><br><span class="line">const likeList = ref([]);</span><br><span class="line">const getLikeList = async () =&gt; &#123;</span><br><span class="line">  const &#123; data &#125; = await getLikeListAPI(&#123; limit: 4 &#125;);</span><br><span class="line">  likeList.value = data.result;</span><br><span class="line">&#125;;</span><br><span class="line">onMounted(() =&gt; getLikeList());</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;home-overview&quot;&gt;</span><br><span class="line">    &lt;!-- 用户信息 --&gt;</span><br><span class="line">    &lt;div class=&quot;user-meta&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;avatar&quot;&gt;</span><br><span class="line">        &lt;img :src=&quot;userInfo?.avatar&quot; /&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;h4&gt;&#123;&#123; userInfo?.account &#125;&#125;&lt;/h4&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;item&quot;&gt;</span><br><span class="line">      &lt;a href=&quot;javascript:;&quot;&gt;</span><br><span class="line">        &lt;span class=&quot;iconfont icon-hy&quot;&gt;&lt;/span&gt;</span><br><span class="line">        &lt;p&gt;会员中心&lt;/p&gt;</span><br><span class="line">      &lt;/a&gt;</span><br><span class="line">      &lt;a href=&quot;javascript:;&quot;&gt;</span><br><span class="line">        &lt;span class=&quot;iconfont icon-aq&quot;&gt;&lt;/span&gt;</span><br><span class="line">        &lt;p&gt;安全设置&lt;/p&gt;</span><br><span class="line">      &lt;/a&gt;</span><br><span class="line">      &lt;a href=&quot;javascript:;&quot;&gt;</span><br><span class="line">        &lt;span class=&quot;iconfont icon-dw&quot;&gt;&lt;/span&gt;</span><br><span class="line">        &lt;p&gt;地址管理&lt;/p&gt;</span><br><span class="line">      &lt;/a&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;div class=&quot;like-container&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;home-panel&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;header&quot;&gt;</span><br><span class="line">        &lt;h4 data-v-bcb266e0=&quot;&quot;&gt;猜你喜欢&lt;/h4&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;goods-list&quot;&gt;</span><br><span class="line">        &lt;GoodsItem v-for=&quot;good in likeList&quot; :key=&quot;good.id&quot; :goods=&quot;good&quot; /&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped lang=&quot;scss&quot;&gt;</span><br><span class="line">.home-overview &#123;</span><br><span class="line">  height: 132px;</span><br><span class="line">  background: url(@/assets/images/center-bg.png) no-repeat center / cover;</span><br><span class="line">  display: flex;</span><br><span class="line"></span><br><span class="line">  .user-meta &#123;</span><br><span class="line">    flex: 1;</span><br><span class="line">    display: flex;</span><br><span class="line">    align-items: center;</span><br><span class="line"></span><br><span class="line">    .avatar &#123;</span><br><span class="line">      width: 85px;</span><br><span class="line">      height: 85px;</span><br><span class="line">      border-radius: 50%;</span><br><span class="line">      overflow: hidden;</span><br><span class="line">      margin-left: 60px;</span><br><span class="line"></span><br><span class="line">      img &#123;</span><br><span class="line">        width: 100%;</span><br><span class="line">        height: 100%;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    h4 &#123;</span><br><span class="line">      padding-left: 26px;</span><br><span class="line">      font-size: 18px;</span><br><span class="line">      font-weight: normal;</span><br><span class="line">      color: white;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .item &#123;</span><br><span class="line">    flex: 1;</span><br><span class="line">    display: flex;</span><br><span class="line">    align-items: center;</span><br><span class="line">    justify-content: space-around;</span><br><span class="line"></span><br><span class="line">    &amp;:first-child &#123;</span><br><span class="line">      border-right: 1px solid #f4f4f4;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    a &#123;</span><br><span class="line">      color: white;</span><br><span class="line">      font-size: 16px;</span><br><span class="line">      text-align: center;</span><br><span class="line"></span><br><span class="line">      .iconfont &#123;</span><br><span class="line">        font-size: 32px;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      p &#123;</span><br><span class="line">        line-height: 32px;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.like-container &#123;</span><br><span class="line">  margin-top: 20px;</span><br><span class="line">  border-radius: 4px;</span><br><span class="line">  background-color: #fff;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.home-panel &#123;</span><br><span class="line">  background-color: #fff;</span><br><span class="line">  padding: 0 20px;</span><br><span class="line">  margin-top: 20px;</span><br><span class="line">  height: 400px;</span><br><span class="line"></span><br><span class="line">  .header &#123;</span><br><span class="line">    height: 66px;</span><br><span class="line">    border-bottom: 1px solid #f5f5f5;</span><br><span class="line">    padding: 18px 0;</span><br><span class="line">    display: flex;</span><br><span class="line">    justify-content: space-between;</span><br><span class="line">    align-items: baseline;</span><br><span class="line"></span><br><span class="line">    h4 &#123;</span><br><span class="line">      font-size: 22px;</span><br><span class="line">      font-weight: 400;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  .goods-list &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    justify-content: space-around;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p>这样一个基本的电商类项目就开发完成了，源码见<a href="https://github.com/congtianfeng/xtx-pc/">https://github.com/congtianfeng/xtx-pc/</a></p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title>配合腾讯云Cos封装一个上传图片组件</title>
    <url>/2022/11/22/%E9%85%8D%E5%90%88%E8%85%BE%E8%AE%AF%E4%BA%91Cos%E5%B0%81%E8%A3%85%E4%B8%80%E4%B8%AA%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E7%BB%84%E4%BB%B6/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="一、需求分析"><a href="#一、需求分析" class="headerlink" title="一、需求分析"></a>一、需求分析</h2><p>该组件需要满足以下要求：</p>
<ol>
<li>可以显示传入的图片地址</li>
<li>可以删除传入的图片地址</li>
<li>可以上传图片到云服务器</li>
<li>上传到腾讯云之后，可以返回图片地址，显示</li>
<li>上传成功之后，可以回调成功函数</li>
</ol>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20200806174643390.png" alt="image-20200806174643390"></p>
<p>从上图中，我们可以看到，实际上是有两种场景的，本地场景和已经上传的场景</p>
<h2 id="二、安装-JavaScript-SDK"><a href="#二、安装-JavaScript-SDK" class="headerlink" title="二、安装 JavaScript SDK"></a>二、<strong>安装 JavaScript SDK</strong></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm i cos-js-sdk-v5 --save</span><br></pre></td></tr></table></figure>

<h2 id="三、实例化上传-sdk"><a href="#三、实例化上传-sdk" class="headerlink" title="三、实例化上传 sdk"></a>三、<strong>实例化上传 sdk</strong></h2><table>
<thead>
<tr>
<th align="left">名称</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">SecretId</td>
<td align="left">开发者拥有的项目身份识别 ID，用以身份认证，可在 <a href="https://console.cloud.tencent.com/capi">API 密钥管理</a> 页面获取</td>
</tr>
<tr>
<td align="left">SecretKey</td>
<td align="left">开发者拥有的项目身份密钥，可在 <a href="https://console.cloud.tencent.com/capi">API 密钥管理</a> 页面获取</td>
</tr>
</tbody></table>
<blockquote>
<p>注意，为了方便，这里直接将参数放置在前端代码中存储，但是腾讯云本身是不建议这么做的，因为**<code>敏感信息</code>**放在前端很容易被捕获。</p>
<p>正确的做法应该是，通过网站调用接口换取敏感信息</p>
</blockquote>
<p><a href="https://cloud.tencent.com/document/product/436/11459">相关文档</a></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> cos = <span class="keyword">new</span> <span class="title function_">COS</span>(&#123;</span><br><span class="line">  <span class="title class_">SecretId</span>: <span class="string">&quot;COS_SECRETID&quot;</span>, <span class="comment">// 身份识别 ID</span></span><br><span class="line">  <span class="title class_">SecretKey</span>: <span class="string">&quot;COS_SECRETKEY&quot;</span>, <span class="comment">// 身份密钥</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h2 id="四、准备组件并注册"><a href="#四、准备组件并注册" class="headerlink" title="四、准备组件并注册"></a>四、准备组件并注册</h2><p><strong>新建上传图片组件</strong> <strong><code>src/components/ImageUpload/index.vue</code></strong></p>
<blockquote>
<p>上传组件，我们可以沿用 element 的 el-upload 组件,并且采用照片墙的模式 <strong><code>list-type=&quot;picture-card&quot;</code></strong></p>
</blockquote>
<p><strong>放置 el-upload 组件</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;el-upload list-type=&quot;picture-card&quot;&gt;</span><br><span class="line">    &lt;i class=&quot;el-icon-plus&quot; /&gt;</span><br><span class="line">  &lt;/el-upload&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure>

<p><strong>全局注册组件</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">ImageUpload</span> <span class="keyword">from</span> <span class="string">&quot;./ImageUpload&quot;</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="title function_">install</span>(<span class="params">Vue</span>) &#123;</span><br><span class="line">    <span class="title class_">Vue</span>.<span class="title function_">component</span>(<span class="string">&quot;ImageUpload&quot;</span>, <span class="title class_">ImageUpload</span>); <span class="comment">// 注册导入上传组件</span></span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h2 id="五、上传动作调用上传腾讯云"><a href="#五、上传动作调用上传腾讯云" class="headerlink" title="五、上传动作调用上传腾讯云"></a>五、上传动作调用上传腾讯云</h2><p><a href="https://cloud.tencent.com/document/product/436/35649#.E7.AE.80.E5.8D.95.E4.B8.8A.E4.BC.A0.E5.AF.B9.E8.B1.A1">腾讯云文档地址</a></p>
<h3 id="1、上传"><a href="#1、上传" class="headerlink" title="1、上传"></a>1、上传</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 进行上传操作</span></span><br><span class="line"><span class="title function_">upload</span>(<span class="params">params</span>) &#123;</span><br><span class="line"><span class="comment">//   console.log(params.file)</span></span><br><span class="line">  <span class="keyword">if</span> (params.<span class="property">file</span>) &#123;</span><br><span class="line">    <span class="comment">// 执行上传操作</span></span><br><span class="line">    cos.<span class="title function_">putObject</span>(&#123;</span><br><span class="line">      <span class="title class_">Bucket</span>: <span class="string">&#x27;shuiruohanyu-106-1302806742&#x27;</span>, <span class="comment">// 存储桶</span></span><br><span class="line">      <span class="title class_">Region</span>: <span class="string">&#x27;ap-beijing&#x27;</span>, <span class="comment">// 地域</span></span><br><span class="line">      <span class="title class_">Key</span>: params.<span class="property">file</span>.<span class="property">name</span>, <span class="comment">// 文件名</span></span><br><span class="line">      <span class="title class_">Body</span>: params.<span class="property">file</span>, <span class="comment">// 要上传的文件对象</span></span><br><span class="line">      <span class="title class_">StorageClass</span>: <span class="string">&#x27;STANDARD&#x27;</span> <span class="comment">// 上传的模式类型 直接默认 标准模式即可</span></span><br><span class="line">      <span class="comment">// 上传到腾讯云 =》 哪个存储桶 哪个地域的存储桶 文件  格式  名称 回调</span></span><br><span class="line">    &#125;, <span class="keyword">function</span>(<span class="params">err, data</span>) &#123;</span><br><span class="line">      <span class="comment">// data返回数据之后 应该如何处理</span></span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(err || data)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2、上传成功后处理返回数据"><a href="#2、上传成功后处理返回数据" class="headerlink" title="2、上传成功后处理返回数据"></a>2、上传成功后处理返回数据</h3><p>确定要上传记录 id</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title function_">beforeUpload</span>(<span class="params">file</span>) &#123;</span><br><span class="line">    <span class="comment">//   先检查文件类型</span></span><br><span class="line">    <span class="keyword">const</span> types = [<span class="string">&#x27;image/jpeg&#x27;</span>, <span class="string">&#x27;image/gif&#x27;</span>, <span class="string">&#x27;image/bmp&#x27;</span>, <span class="string">&#x27;image/png&#x27;</span>]</span><br><span class="line">    <span class="keyword">if</span> (!types.<span class="title function_">some</span>(<span class="function"><span class="params">item</span> =&gt;</span> item === file.<span class="property">type</span>)) &#123;</span><br><span class="line">      <span class="comment">//   如果不存在</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">error</span>(<span class="string">&#x27;上传图片只能是 JPG、GIF、BMP、PNG 格式!&#x27;</span>)</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span> <span class="comment">// 上传终止</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 检查文件大小  5M 1M = 1024KB 1KB = 1024B</span></span><br><span class="line">    <span class="keyword">const</span> maxSize = <span class="number">5</span> * <span class="number">1024</span> * <span class="number">1024</span></span><br><span class="line">    <span class="keyword">if</span> (file.<span class="property">size</span> &gt; maxSize) &#123;</span><br><span class="line">      <span class="comment">//   超过了限制的文件大小</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">error</span>(<span class="string">&#x27;上传的图片大小不能大于5M&#x27;</span>)</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//   已经确定当前上传的就是当前的这个file了</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">currentFileUid</span> = file.<span class="property">uid</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span> <span class="comment">// 最后一定要return  true</span></span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure>

<p>处理返回的数据</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 进行上传操作</span></span><br><span class="line"><span class="title function_">upload</span>(<span class="params">params</span>) &#123;</span><br><span class="line"><span class="comment">//   console.log(params.file)</span></span><br><span class="line">  <span class="keyword">if</span> (params.<span class="property">file</span>) &#123;</span><br><span class="line">    <span class="comment">// 执行上传操作</span></span><br><span class="line">    cos.<span class="title function_">putObject</span>(&#123;</span><br><span class="line">      <span class="title class_">Bucket</span>: <span class="string">&#x27;shuiruohanyu-106-1302806742&#x27;</span>, <span class="comment">// 存储桶</span></span><br><span class="line">      <span class="title class_">Region</span>: <span class="string">&#x27;ap-beijing&#x27;</span>, <span class="comment">// 地域</span></span><br><span class="line">      <span class="title class_">Key</span>: params.<span class="property">file</span>.<span class="property">name</span>, <span class="comment">// 文件名</span></span><br><span class="line">      <span class="title class_">Body</span>: params.<span class="property">file</span>, <span class="comment">// 要上传的文件对象</span></span><br><span class="line">      <span class="title class_">StorageClass</span>: <span class="string">&#x27;STANDARD&#x27;</span> <span class="comment">// 上传的模式类型 直接默认 标准模式即可</span></span><br><span class="line">      <span class="comment">// 上传到腾讯云 =》 哪个存储桶 哪个地域的存储桶 文件  格式  名称 回调</span></span><br><span class="line">    &#125;, <span class="function">(<span class="params">err, data</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="comment">// data返回数据之后 应该如何处理</span></span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(err || data)</span><br><span class="line">      <span class="comment">// data中有一个statusCode === 200 的时候说明上传成功</span></span><br><span class="line">      <span class="keyword">if</span> (!err &amp;&amp; data.<span class="property">statusCode</span> === <span class="number">200</span>) &#123;</span><br><span class="line">        <span class="comment">//   此时说明文件上传成功  要获取成功的返回地址</span></span><br><span class="line">        <span class="comment">// fileList才能显示到上传组件上 此时我们要将fileList中的数据的url地址变成 现在上传成功的地址</span></span><br><span class="line">        <span class="comment">// 目前虽然是一张图片 但是请注意 我们的fileList是一个数组</span></span><br><span class="line">        <span class="comment">// 需要知道当前上传成功的是哪一张图片</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">fileList</span> = <span class="variable language_">this</span>.<span class="property">fileList</span>.<span class="title function_">map</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">          <span class="comment">// 去找谁的uid等于刚刚记录下来的id</span></span><br><span class="line">          <span class="keyword">if</span> (item.<span class="property">uid</span> === <span class="variable language_">this</span>.<span class="property">currentFileUid</span>) &#123;</span><br><span class="line">            <span class="comment">// 将成功的地址赋值给原来的url属性</span></span><br><span class="line">            <span class="keyword">return</span> &#123; <span class="attr">url</span>: <span class="string">&#x27;http://&#x27;</span> + data.<span class="property">Location</span>, <span class="attr">upload</span>: <span class="literal">true</span> &#125;</span><br><span class="line">            <span class="comment">// upload 为true 表示这张图片已经上传完毕 这个属性要为我们后期应用的时候做标记</span></span><br><span class="line">            <span class="comment">// 保存  =&gt; 图片有大有小 =&gt; 上传速度有快又慢 =&gt;要根据有没有upload这个标记来决定是否去保存</span></span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">return</span> item</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="comment">// 将上传成功的地址 回写到了fileList中 fileList变化  =》 upload组件 就会根据fileList的变化而去渲染视图</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>我们在 fileList 中设置了属性为 upload 为 true 的属性，表示该图片已经上传成功了，如果 fileList 还有 upload 不为 true 的数据，那就表示该图片还没有上传完毕</p>
<h2 id="六、上传的进度条显示"><a href="#六、上传的进度条显示" class="headerlink" title="六、上传的进度条显示"></a>六、上传的进度条显示</h2><p><strong>放置进度条</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;el-progress v-if=&quot;showPercent&quot; style=&quot;width: 180px&quot; :percentage=&quot;percent&quot; /&gt;</span><br></pre></td></tr></table></figure>

<p><strong>通过腾讯云 sdk 监听上传进度</strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">cos.<span class="title function_">putObject</span>(&#123;</span><br><span class="line">         <span class="comment">// 配置</span></span><br><span class="line">         <span class="title class_">Bucket</span>: <span class="string">&#x27;laogao-1302806742&#x27;</span>, <span class="comment">// 存储桶名称</span></span><br><span class="line">         <span class="title class_">Region</span>: <span class="string">&#x27;ap-guangzhou&#x27;</span>, <span class="comment">// 存储桶地域</span></span><br><span class="line">         <span class="title class_">Key</span>: params.<span class="property">file</span>.<span class="property">name</span>, <span class="comment">// 文件名作为key</span></span><br><span class="line">         <span class="title class_">StorageClass</span>: <span class="string">&#x27;STANDARD&#x27;</span>, <span class="comment">// 此类写死</span></span><br><span class="line">         <span class="title class_">Body</span>: params.<span class="property">file</span>, <span class="comment">// 将本地的文件赋值给腾讯云配置</span></span><br><span class="line">         <span class="comment">// 进度条</span></span><br><span class="line">         <span class="attr">onProgress</span>: <span class="function">(<span class="params">params</span>) =&gt;</span> &#123;</span><br><span class="line">           <span class="variable language_">this</span>.<span class="property">percent</span> = params.<span class="property">percent</span> * <span class="number">100</span></span><br><span class="line">         &#125;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure>

<h2 id="七、完整代码"><a href="#七、完整代码" class="headerlink" title="七、完整代码"></a>七、<strong>完整代码</strong></h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;!-- 上传组件 --&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;!-- :class=&quot;&#123; class名称：布尔值 &#125;&quot; --&gt;</span><br><span class="line">    &lt;!-- el-upload之所以能够显示图片 是因为 fileList中有值 --&gt;</span><br><span class="line">    &lt;el-upload</span><br><span class="line">      list-type=&quot;picture-card&quot;</span><br><span class="line">      :file-list=&quot;fileList&quot;</span><br><span class="line">      :on-preview=&quot;preview&quot;</span><br><span class="line">      :on-remove=&quot;handleRemove&quot;</span><br><span class="line">      :on-change=&quot;changeFile&quot;</span><br><span class="line">      :before-upload=&quot;beforeUpload&quot;</span><br><span class="line">      :http-request=&quot;upload&quot;</span><br><span class="line">      action=&quot;#&quot;</span><br><span class="line">      :class=&quot;&#123; disabled: fileComputed &#125;&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;i class=&quot;el-icon-plus&quot; /&gt;</span><br><span class="line">    &lt;/el-upload&gt;</span><br><span class="line">    &lt;el-progress</span><br><span class="line">      v-if=&quot;showPercent&quot;</span><br><span class="line">      :percentage=&quot;percent&quot;</span><br><span class="line">      style=&quot;width: 180px&quot;</span><br><span class="line">    /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 预览图片 --&gt;</span><br><span class="line">    &lt;el-dialog :visible.sync=&quot;showDialog&quot; title=&quot;图片预览&quot;&gt;</span><br><span class="line">      &lt;img :src=&quot;imgUrl&quot; alt=&quot;&quot; style=&quot;width:100%&quot; /&gt;</span><br><span class="line">    &lt;/el-dialog&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import COS from &quot;cos-js-sdk-v5&quot;;</span><br><span class="line">const cos = new COS(&#123;</span><br><span class="line">  SecretId: &quot;AKID0mqfEWqlUzIbeSkGRL6c7ML6c0B93To9&quot;, // 身份识别 ID</span><br><span class="line">  SecretKey: &quot;JFwNZdeRF2iOp03FFsGNDm44vWFitmNF&quot;, // 身份密钥</span><br><span class="line">&#125;);</span><br><span class="line">export default &#123;</span><br><span class="line">  props: &#123;</span><br><span class="line">    limit: &#123;</span><br><span class="line">      type: Number,</span><br><span class="line">      default: 1,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      showPercent: false, // 控制进度条的显示和隐藏</span><br><span class="line">      percent: 0, // 当前的进度</span><br><span class="line">      showDialog: false, // 默认隐藏</span><br><span class="line">      imgUrl: &quot;&quot;,</span><br><span class="line">      fileList: [],</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  computed: &#123;</span><br><span class="line">    // 只要该计算属性为true 就表示 我们需要隐藏上传按钮</span><br><span class="line">    fileComputed() &#123;</span><br><span class="line">      return this.fileList.length === this.limit;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    preview(file) &#123;</span><br><span class="line">      this.imgUrl = file.url;</span><br><span class="line">      this.showDialog = true;</span><br><span class="line">    &#125;,</span><br><span class="line">    // file就是要删除的file</span><br><span class="line">    handleRemove(file) &#123;</span><br><span class="line">      // 根据file中uid将当前的fileList中的数据进行移除</span><br><span class="line">      this.fileList = this.fileList.filter((item) =&gt; item.uid !== file.uid);</span><br><span class="line">      // filter方法会得到一个新的数组</span><br><span class="line">    &#125;,</span><br><span class="line">    // 不能够一味 的进行push 因为该函数会被多次调用 fileList其实就是当前最新的文件列表</span><br><span class="line">    changeFile(file, fileList) &#123;</span><br><span class="line">      // this.fileList = [...fileList]</span><br><span class="line">      this.fileList = fileList.map((item) =&gt; item);</span><br><span class="line">    &#125;,</span><br><span class="line">    // 上传之前检查</span><br><span class="line">    beforeUpload(file) &#123;</span><br><span class="line">      //   console.log(file)</span><br><span class="line">      // 要开始做文件上传的检查了</span><br><span class="line">      // 文件类型 文件大小</span><br><span class="line">      const types = [&quot;image/jpeg&quot;, &quot;image/gif&quot;, &quot;image/bmp&quot;, &quot;image/png&quot;];</span><br><span class="line">      if (!types.includes(file.type)) &#123;</span><br><span class="line">        this.$message.error(&quot;上传图片只能是 JPG、GIF、BMP、PNG 格式!&quot;);</span><br><span class="line">        return false;</span><br><span class="line">      &#125;</span><br><span class="line">      //   文件大小</span><br><span class="line">      const maxSize = 25 * 1024 * 1024;</span><br><span class="line">      if (maxSize &lt; file.size) &#123;</span><br><span class="line">        this.$message.error(&quot;图片最大的大小为5M&quot;);</span><br><span class="line">        return false;</span><br><span class="line">      &#125;</span><br><span class="line">      return true; // 要返回true</span><br><span class="line">    &#125;,</span><br><span class="line">    // 上传到腾讯云</span><br><span class="line">    // 自定义上传动作</span><br><span class="line">    upload(params) &#123;</span><br><span class="line">      // params中的file就是要上传的图片文件</span><br><span class="line">      //   console.log(params.file)</span><br><span class="line">      if (params.file) &#123;</span><br><span class="line">        this.showPercent = true; // 显示进度条</span><br><span class="line">        //   上传对象到腾讯云</span><br><span class="line">        cos.putObject(</span><br><span class="line">          &#123;</span><br><span class="line">            Bucket: &quot;shuiruohanyu-1302806742&quot; /* 每个人的存储桶名称 */,</span><br><span class="line">            Region: &quot;ap-nanjing&quot; /* 存储桶所在地域，必须字段 */,</span><br><span class="line">            Key: params.file.name /* 文件名称 */,</span><br><span class="line">            StorageClass: &quot;STANDARD&quot;, // 固定值</span><br><span class="line">            Body: params.file, // 上传文件对象</span><br><span class="line">            onProgress: (progressData) =&gt; &#123;</span><br><span class="line">              // console.log(progressData.percent * 100)</span><br><span class="line">              this.percent = progressData.percent * 100;</span><br><span class="line">            &#125;,</span><br><span class="line">          &#125;,</span><br><span class="line">          (err, data) =&gt; &#123;</span><br><span class="line">            console.log(err);</span><br><span class="line">            if (data.statusCode === 200 &amp;&amp; data.Location) &#123;</span><br><span class="line">              //   认为此时上传成功</span><br><span class="line">              // 需要知道当前的这个地址是谁的url地址</span><br><span class="line">              //  params.file.uid  =&gt; 当前上传文件的标识  如果找到了一一样的uid 就表示他们是一张图片</span><br><span class="line">              console.log(this.fileList);</span><br><span class="line">              // 这样相当于将原来的旧本地地址换成了新地址</span><br><span class="line">              this.fileList = this.fileList.map((item) =&gt; &#123;</span><br><span class="line">                // 将本地的地址替换成线上已经放在腾讯云之后的地址</span><br><span class="line">                if (item.uid === params.file.uid) &#123;</span><br><span class="line">                  // upload 为true的意思是 表示这张图片 已经上传过了 已经不是本地图片了</span><br><span class="line">                  return &#123; url: &quot;http://&quot; + data.Location, upload: true &#125;;</span><br><span class="line">                &#125;</span><br><span class="line">                return item;</span><br><span class="line">              &#125;);</span><br><span class="line">              this.showPercent = false; // 关闭进度条</span><br><span class="line">              this.percent = 0; // 将进度归0</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        );</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">.disabled .el-upload--picture-card &#123;</span><br><span class="line">  display: none;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>

<p>*通过上面的代码，我们会发现，我们把上传之后的图片信息都给了**<code>fileList数据</code><strong>，那么在应用时，就可以直接获取该实例的</strong><code>fileList数据即可</code>***</p>
<h2 id="八、使用"><a href="#八、使用" class="headerlink" title="八、使用"></a>八、使用</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;el-row class=&quot;inline-info&quot;&gt;</span><br><span class="line">        &lt;el-col :span=&quot;12&quot;&gt;</span><br><span class="line">          &lt;el-form-item label=&quot;员工头像&quot;&gt;</span><br><span class="line">            &lt;!-- 放置上传图片 --&gt;</span><br><span class="line">            &lt;image-upload ref=&quot;staffPhoto&quot; /&gt;</span><br><span class="line">          &lt;/el-form-item&gt;</span><br><span class="line">        &lt;/el-col&gt;</span><br><span class="line">      &lt;/el-row&gt;</span><br></pre></td></tr></table></figure>

<h3 id="1、读取时赋值"><a href="#1、读取时赋值" class="headerlink" title="1、读取时赋值"></a>1、读取时赋值</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="title function_">getUserDetailById</span>(<span class="params"></span>) &#123;</span><br><span class="line">   <span class="variable language_">this</span>.<span class="property">userInfo</span> = <span class="keyword">await</span> <span class="title function_">getUserDetailById</span>(<span class="variable language_">this</span>.<span class="property">userId</span>)</span><br><span class="line">   <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">userInfo</span>.<span class="property">staffPhoto</span>) &#123;</span><br><span class="line">     <span class="comment">// 这里我们赋值，同时需要给赋值的地址一个标记 upload: true</span></span><br><span class="line">     <span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">staffPhoto</span>.<span class="property">fileList</span> = [&#123; <span class="attr">url</span>: <span class="variable language_">this</span>.<span class="property">userInfo</span>.<span class="property">staffPhoto</span>, <span class="attr">upload</span>: <span class="literal">true</span> &#125;]</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;,</span><br></pre></td></tr></table></figure>

<h3 id="2、更新图片时获取图片内容"><a href="#2、更新图片时获取图片内容" class="headerlink" title="2、更新图片时获取图片内容"></a>2、更新图片时获取图片内容</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">async</span>  <span class="title function_">saveUser</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="comment">// 去读取 员工上传的头像</span></span><br><span class="line">      <span class="keyword">const</span> fileList = <span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">staffPhoto</span>.<span class="property">fileList</span> <span class="comment">// 读取上传组件的数据</span></span><br><span class="line">      <span class="keyword">if</span> (fileList.<span class="title function_">some</span>(<span class="function"><span class="params">item</span> =&gt;</span> !item.<span class="property">upload</span>)) &#123;</span><br><span class="line">        <span class="comment">//  如果此时去找 upload为false的图片 找到了说明 有图片还没有上传完成</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">warning</span>(<span class="string">&#x27;您当前还有图片没有上传完成！&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 通过合并 得到一个新对象</span></span><br><span class="line">      <span class="keyword">await</span> <span class="title function_">saveUserDetailById</span>(&#123; ...<span class="variable language_">this</span>.<span class="property">userInfo</span>, <span class="attr">staffPhoto</span>: fileList &amp;&amp; fileList.<span class="property">length</span> ? fileList[<span class="number">0</span>].<span class="property">url</span> : <span class="string">&#x27;&#x27;</span> &#125;)</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">success</span>(<span class="string">&#x27;保存基本信息成功&#x27;</span>)</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title>普通数据转化为树形结构</title>
    <url>/2022/10/09/%E6%99%AE%E9%80%9A%E7%BB%93%E6%9E%84%E8%BD%AC%E5%8C%96%E4%B8%BA%E6%A0%91%E5%BD%A2%E7%BB%93%E6%9E%84/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>有时候我们需要用到树形结构的数据便于我们展示像组织架构、地区这种有层级结构的信息。那么我们就需要将普通平铺的数据转化为树形结构的数据。主要是使用递归算法。</p>
<p>观察这种数据不难发现，每条数据一般至少包含 id 和 pid 两个属性，id 是每条数据独一无二的身份标识，pid 则表示与其他数据的从属关系。如果当前数据的 pid 等于另外一条数据的 id，那当前数据就是另外一条数据的子数据。</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20200721010931214.png" alt="image-20200721010931214"></p>
<p>封装一个工具方法，**<code>src/utils/index.js</code>**</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/** *</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *  将列表型的数据转化成树形数据 =&gt; 递归算法 =&gt; 自身调用自身 =&gt; 递归的关键在于要有一个入口和一个出口，入口  	*  表示递归开始，出口则标识递归的结束。没有出口会造成死循环</span></span><br><span class="line"><span class="comment"> *  遍历树形 有一个重点 要先找一个头儿</span></span><br><span class="line"><span class="comment"> * ***/</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">tranListToTreeData</span>(<span class="params">list, rootValue</span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> arr = [];</span><br><span class="line">  list.<span class="title function_">forEach</span>(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (item.<span class="property">pid</span> === rootValue) &#123;</span><br><span class="line">      <span class="comment">// 找到之后 就要去找 item 下面有没有子节点</span></span><br><span class="line">      <span class="keyword">const</span> children = <span class="title function_">tranListToTreeData</span>(list, item.<span class="property">id</span>);</span><br><span class="line">      <span class="keyword">if</span> (children.<span class="property">length</span>) &#123;</span><br><span class="line">        <span class="comment">// 如果children的长度大于0 说明找到了子节点</span></span><br><span class="line">        item.<span class="property">children</span> = children;</span><br><span class="line">      &#125;</span><br><span class="line">      arr.<span class="title function_">push</span>(item); <span class="comment">// 将内容加入到数组中</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">return</span> arr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title>使用自定义指令解决图片异常情况</title>
    <url>/2022/09/14/%E4%BD%BF%E7%94%A8%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E4%BB%A4%E8%A7%A3%E5%86%B3%E5%9B%BE%E7%89%87%E5%BC%82%E5%B8%B8%E6%83%85%E5%86%B5/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>项目中有时图片显示异常，我们可以使用自定义指令来指定默认图片</p>
<p>自定义指令可以采用统一的文件来管理 <strong><code>src/directives/index.js</code></strong>,这个文件负责管理所有的自定义指令</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 负责管理所有的自定义指令</span></span><br><span class="line"><span class="comment">// 只负责导出指令对象</span></span><br><span class="line"><span class="comment">// 变量名称就是指令名称</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> imageerror = &#123;</span><br><span class="line">  <span class="comment">// 指令内容</span></span><br><span class="line">  <span class="comment">// 指令作用在 图片上的 dom是图片对象</span></span><br><span class="line">  <span class="comment">// inserted 在Vue3中也改名 =&gt; mounted</span></span><br><span class="line">  <span class="title function_">inserted</span>(<span class="params">dom, options</span>) &#123;</span><br><span class="line">    <span class="comment">// inserted执行的之后 此时 并没有对 src赋值</span></span><br><span class="line">    <span class="comment">// 图片有地址 但是地址加载图片失败的时候 会执行一个函数  onerror</span></span><br><span class="line">    dom.<span class="property">src</span> = dom.<span class="property">src</span> || options.<span class="property">value</span>;</span><br><span class="line">    dom.<span class="property">onerror</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="comment">// 监听onerror事件</span></span><br><span class="line">      <span class="comment">// options.value就是指令传过来的值</span></span><br><span class="line">      dom.<span class="property">src</span> = options.<span class="property">value</span>; <span class="comment">// 当图片异常的时候 接收指令传过来的值 让这个值作为头像的备选</span></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">// 只有src有值 并且加载失败才会触发onerror</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// 此钩子会在给image赋值之后执行</span></span><br><span class="line">  <span class="comment">// 这个钩子函数在Vue3中改名了 =&gt; updated</span></span><br><span class="line">  <span class="title function_">componentUpdated</span>(<span class="params">dom, options</span>) &#123;</span><br><span class="line">    dom.<span class="property">src</span> = dom.<span class="property">src</span> || options.<span class="property">value</span>;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>在 main.js 完成自定义指令全局注册</p>
<p>如果自定义的指令较多，可以采用批量注册的方式</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> directives <span class="keyword">from</span> <span class="string">&quot;@/directives&quot;</span>;</span><br><span class="line"><span class="comment">// 注册自定义指令</span></span><br><span class="line"><span class="comment">// 遍历所有的导出的指令对象 完成自定义全局注册</span></span><br><span class="line"><span class="title class_">Object</span>.<span class="title function_">keys</span>(directives).<span class="title function_">forEach</span>(<span class="function">(<span class="params">key</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 注册自定义指令</span></span><br><span class="line">  <span class="title class_">Vue</span>.<span class="title function_">directive</span>(key, directives[key]);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>指令注册成功后，可以在组件中直接使用了</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;img v-imageerror=&quot;defaultImg&quot; :src=&quot;staffPhoto&quot; class=&quot;user-avatar&quot; /&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      defaultImg: require(&quot;@/assets/common/head.jpg&quot;),</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title>token失效的处理</title>
    <url>/2022/08/23/token%E5%A4%B1%E6%95%88%E7%9A%84%E5%A4%84%E7%90%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="一、主动处理"><a href="#一、主动处理" class="headerlink" title="一、主动处理"></a>一、主动处理</h2><p>主动处理主要是前端在每次发起请求时都主动去检查一下 token 是否过期。流程图如下：</p>
<p>具体业务图如下</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20200716231205153.png" alt="image-20200716231205153"></p>
<h3 id="流程图转化代码"><a href="#流程图转化代码" class="headerlink" title="流程图转化代码"></a>流程图转化代码</h3><p><strong>流程图转化代码</strong> <strong><code>src/utils/auth.js</code></strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Cookies</span> <span class="keyword">from</span> <span class="string">&quot;js-cookie&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">TokenKey</span> = <span class="string">&quot;hr-saas-111-token&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> timeKey = <span class="string">&quot;hr-sass-time-key&quot;</span>; <span class="comment">// 用来作为时间戳存储的key</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">getToken</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">Cookies</span>.<span class="title function_">get</span>(<span class="title class_">TokenKey</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">setToken</span>(<span class="params">token</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">Cookies</span>.<span class="title function_">set</span>(<span class="title class_">TokenKey</span>, token);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">removeToken</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">Cookies</span>.<span class="title function_">remove</span>(<span class="title class_">TokenKey</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">setTimeStamp</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 设置当前最新的时间戳</span></span><br><span class="line">  <span class="comment">// Date.now()  new Date.getTime()</span></span><br><span class="line">  <span class="title class_">Cookies</span>.<span class="title function_">set</span>(timeKey, <span class="title class_">Date</span>.<span class="title function_">now</span>());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">getTimeStamp</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">Cookies</span>.<span class="title function_">get</span>(timeKey);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong><code>src/utils/request.js</code></strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&quot;axios&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">&quot;@/store&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&quot;@/router&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Message</span> &#125; <span class="keyword">from</span> <span class="string">&quot;element-ui&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; getTimeStamp &#125; <span class="keyword">from</span> <span class="string">&quot;@/utils/auth&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="title class_">TimeOut</span> = <span class="number">3600</span>; <span class="comment">// 定义超时时间</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> service = axios.<span class="title function_">create</span>(&#123;</span><br><span class="line">  <span class="comment">// 当执行 npm run dev  =&gt; .evn.development =&gt; /api =&gt; 跨域代理</span></span><br><span class="line">  <span class="attr">baseURL</span>: process.<span class="property">env</span>.<span class="property">VUE_APP_BASE_API</span>, <span class="comment">// npm  run dev  =&gt; /api npm run build =&gt;  /prod-api</span></span><br><span class="line">  <span class="attr">timeout</span>: <span class="number">5000</span>, <span class="comment">// 设置超时时间</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 请求拦截器</span></span><br><span class="line">service.<span class="property">interceptors</span>.<span class="property">request</span>.<span class="title function_">use</span>(</span><br><span class="line">  <span class="function">(<span class="params">config</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// config 是请求的配置信息</span></span><br><span class="line">    <span class="comment">// 注入token</span></span><br><span class="line">    <span class="keyword">if</span> (store.<span class="property">getters</span>.<span class="property">token</span>) &#123;</span><br><span class="line">      <span class="comment">// 只有在有token的情况下 才有必要去检查时间戳是否超时</span></span><br><span class="line">      <span class="keyword">if</span> (<span class="title class_">IsCheckTimeOut</span>()) &#123;</span><br><span class="line">        <span class="comment">// 如果它为true表示 过期了</span></span><br><span class="line">        <span class="comment">// token没用了 因为超时了</span></span><br><span class="line">        store.<span class="title function_">dispatch</span>(<span class="string">&quot;user/logout&quot;</span>); <span class="comment">// 登出操作</span></span><br><span class="line">        <span class="comment">// 跳转到登录页</span></span><br><span class="line">        router.<span class="title function_">push</span>(<span class="string">&quot;/login&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&quot;token超时了&quot;</span>));</span><br><span class="line">      &#125;</span><br><span class="line">      config.<span class="property">headers</span>[<span class="string">&quot;Authorization&quot;</span>] = <span class="string">`Bearer <span class="subst">$&#123;store.getters.token&#125;</span>`</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> config; <span class="comment">// 必须要返回的</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error);</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br><span class="line"><span class="comment">// 响应拦截器</span></span><br><span class="line">service.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(</span><br><span class="line">  <span class="function">(<span class="params">response</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// axios默认加了一层data</span></span><br><span class="line">    <span class="keyword">const</span> &#123; success, message, data &#125; = response.<span class="property">data</span>;</span><br><span class="line">    <span class="comment">//   要根据success的成功与否决定下面的操作</span></span><br><span class="line">    <span class="keyword">if</span> (success) &#123;</span><br><span class="line">      <span class="keyword">return</span> data;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="comment">// 业务已经错误了 还能进then ? 不能 ！ 应该进catch</span></span><br><span class="line">      <span class="title class_">Message</span>.<span class="title function_">error</span>(message); <span class="comment">// 提示错误消息</span></span><br><span class="line">      <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(message));</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="title class_">Message</span>.<span class="title function_">error</span>(error.<span class="property">message</span>); <span class="comment">// 提示错误信息</span></span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error); <span class="comment">// 返回执行错误 让当前的执行链跳出成功 直接进入 catch</span></span><br><span class="line">  &#125;</span><br><span class="line">);</span><br><span class="line"><span class="comment">// 是否超时</span></span><br><span class="line"><span class="comment">// 超时逻辑  (当前时间  - 缓存中的时间) 是否大于 时间差</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">IsCheckTimeOut</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">var</span> currentTime = <span class="title class_">Date</span>.<span class="title function_">now</span>(); <span class="comment">// 当前时间戳</span></span><br><span class="line">  <span class="keyword">var</span> timeStamp = <span class="title function_">getTimeStamp</span>(); <span class="comment">// 缓存时间戳</span></span><br><span class="line">  <span class="keyword">return</span> (currentTime - timeStamp) / <span class="number">1000</span> &gt; <span class="title class_">TimeOut</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> service;</span><br></pre></td></tr></table></figure>

<p>在登录的时候，如果登录成功，我们应该设置时间戳</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义login action  也需要参数 调用action时 传递过来的参数</span></span><br><span class="line"><span class="comment">// async 标记的函数其实就是一个异步函数 -&gt; 本质是还是 一个promise</span></span><br><span class="line"><span class="keyword">async</span> <span class="title function_">login</span>(<span class="params">context, data</span>) &#123;</span><br><span class="line">  <span class="comment">// 经过响应拦截器的处理之后 这里的result实际上就是 token</span></span><br><span class="line">  <span class="keyword">const</span> result = <span class="keyword">await</span> <span class="title function_">login</span>(data) <span class="comment">// 实际上就是一个promise  result就是执行的结果</span></span><br><span class="line">  <span class="comment">// axios默认给数据加了一层data</span></span><br><span class="line">  <span class="comment">// 表示登录接口调用成功 也就是意味着你的用户名和密码是正确的</span></span><br><span class="line">  <span class="comment">// 现在有用户token</span></span><br><span class="line">  <span class="comment">// actions 修改state 必须通过mutations</span></span><br><span class="line">  context.<span class="title function_">commit</span>(<span class="string">&#x27;setToken&#x27;</span>, result)</span><br><span class="line">  <span class="comment">// 写入时间戳</span></span><br><span class="line">  <span class="title function_">setTimeStamp</span>() <span class="comment">// 将当前的最新时间写入缓存</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="二、被动处理"><a href="#二、被动处理" class="headerlink" title="二、被动处理"></a>二、被动处理</h2><p>被动处理就是后端告诉我们超时了，我们按照后端接口做出反应即可。如果后端接口没有做处理，主动介入就是一种简单的方式</p>
<p>token 超时的错误码是**<code>10002</code>**</p>
<p><strong>代码实现</strong> <strong><code>src/utils/request.js</code></strong></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">(error) =&gt; &#123;</span><br><span class="line">  <span class="comment">// error 信息 里面 response的对象</span></span><br><span class="line">  <span class="keyword">if</span> (</span><br><span class="line">    error.<span class="property">response</span> &amp;&amp;</span><br><span class="line">    error.<span class="property">response</span>.<span class="property">data</span> &amp;&amp;</span><br><span class="line">    error.<span class="property">response</span>.<span class="property">data</span>.<span class="property">code</span> === <span class="number">10002</span></span><br><span class="line">  ) &#123;</span><br><span class="line">    <span class="comment">// 当等于10002的时候 表示 后端告诉我token超时了</span></span><br><span class="line">    store.<span class="title function_">dispatch</span>(<span class="string">&quot;user/logout&quot;</span>); <span class="comment">// 登出action 删除token</span></span><br><span class="line">    router.<span class="title function_">push</span>(<span class="string">&quot;/login&quot;</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="title class_">Message</span>.<span class="title function_">error</span>(error.<span class="property">message</span>); <span class="comment">// 提示错误信息</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>无论是主动介入还是被动处理，这些操作都是为了更好地处理 token，减少错误异常的可能性</p>
</blockquote>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title>AJAX</title>
    <url>/2022/05/04/AJAX/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="一、Ajax-基本介绍"><a href="#一、Ajax-基本介绍" class="headerlink" title="一、Ajax 基本介绍"></a>一、Ajax 基本介绍</h2><p>Ajax 的全称是 Asynchronous Javascript And XML（异步 JavaScript 和 XML）</p>
<p>通过 AJAX 可以在浏览器中向服务器发送异步请求，进行数据交互</p>
<p>最大的优势：无刷新获取数据</p>
<p>AJAX 的优点</p>
<ul>
<li>可以无需刷新页面而与服务器端进行通信（实现局部刷新）</li>
<li>允许根据用户事件来更新部分页面内容</li>
</ul>
<p>AJAX 的缺点</p>
<ul>
<li>没有浏览历史，不能回退</li>
<li>存在跨域问题(同源)</li>
<li>SEO 不友好</li>
</ul>
<p>Ajax 的典型应用场景</p>
<p>用户名检测：注册用户时，通过 ajax 的形式，动态检测用户名是否被占用</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230504093210686.png" alt="image-20230504093210686"></p>
<p>搜索提示：当输入搜索关键字时，通过 ajax 的形式，动态加载搜索提示列 表<img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230504093251279.png" alt="image-20230504093251279"></p>
<p>数据分页显示：当点击页码值的时候，通过 ajax 的形式，根据页码值动态 刷新表格的数据<img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230504093331555.png" alt="image-20230504093331555"></p>
<p>数据的增删改查：数据的添加、删除、修改、查询操作，都需要通过 ajax 的 形式，来实现数据的交互<img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230504093356633.png" alt="image-20230504093356633"></p>
<h3 id="1、XML"><a href="#1、XML" class="headerlink" title="1、XML"></a>1、XML</h3><p>XML 是一种可扩展标记语，被设计用来传输和存储数据。XML 和 HTML 类似，不同的是 HTML 中都是预定义标签，而 XML 中没有预定义标签， 全都是自定义标签，用来表示一些数据。</p>
<p>XML 格式臃肿，和数据无关的代码多，体积大，传输效率低。在 Javascript 中解析 XML 比较麻烦。现已被 JSON 代替</p>
<h3 id="2、JSON"><a href="#2、JSON" class="headerlink" title="2、JSON"></a>2、JSON</h3><p>JSON 的英文全称是 JavaScript Object Notation，即“JavaScript 对象。表示法”。简单来讲，JSON 就是 Javascript 对象和数组的字符串表示法，它使用文本表示一个 JS 对象或数组的信息，因此，JSON 的本质是字符</p>
<p>作用：JSON 是一种轻量级的文本数据交换格式，在作用上类似于 XML，专 门用于存储和传输数据，但是 JSON 比 XML 更小、更快、更易解析 现状：JSON 是在 2001 年开始被推广和使用的数据格式，到现今为止，JSON 已经成为了主流的数据交换格式</p>
<p>JSON 的两种结构</p>
<p>JSON 就是用字符串来表示 Javascript 的对象和数组。所以，JSON 中包含 对象和数组两种结构，通过这两种结构的相互嵌套，可以表示各种复杂的数据结构</p>
<p>对象结构：对象结构在 JSON 中表示为 { } 括起来的内容。数据结构为 { key: value, key: value, … } 的键值对结构。其中，key 必须是使用英文 的双引号包裹的字符串，value 的数据类型可以是数字、字符串、布尔值、null、 数组、对象 6 种类型</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230504092616262.png" alt="image-20230504092616262"></p>
<p>数组结构：数组结构在 JSON 中表示为 [ ] 括起来的内容。数据结构为 [ “java”, “javascript”, 30, true … ] 。数组中数据的类型同样可以是数字、 字符串、布尔值、null、数组、对象 6 种类型</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230504092646601.png" alt="image-20230504092646601"></p>
<p>JSON 语法注意事项</p>
<ul>
<li>属性名必须使用双引号包裹</li>
<li>字符串类型的值必须使用双引号包裹</li>
<li>JSON 中不允许使用单引号表示字符串</li>
<li>JSON 中不能写注释</li>
<li>JSON 的最外层必须是对象或数组格式</li>
<li>不能使用 undefined 或函数作为 JSON 的值</li>
</ul>
<p>JSON 和 JS 对象的关系</p>
<p>JSON 是 JS 对象的字符串表示法，它使用文本表示一个 JS 对象的信息， 本质是一个字符串</p>
<p>JSON 和 JS 对象的互转</p>
<p>可以使用 JSON.parse()和 JSON.stringify()方法</p>
<h2 id="二、AJAX-的使用"><a href="#二、AJAX-的使用" class="headerlink" title="二、AJAX 的使用"></a>二、AJAX 的使用</h2><p>核心对象</p>
<p>XMLHttpRequest，AJAX 的所有操作都是通过该对象进行的</p>
<p>使用步骤</p>
<ol>
<li>创建 XMLHttpRequest 对象</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span><br></pre></td></tr></table></figure>

<p>2.设置请求信息</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">xhr.<span class="title function_">open</span>(method, url);</span><br><span class="line"><span class="comment">//可以设置请求头，一般不设置</span></span><br><span class="line">xhr.<span class="title function_">setRequestHeader</span>(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/x-www-form-urlencoded&quot;</span>);</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>发送请求</li>
</ol>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">xhr.<span class="title function_">send</span>(body); <span class="comment">//get 请求不传 body 参数，只有 post 请求</span></span><br></pre></td></tr></table></figure>

<p>4.接收响应</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//xhr.responseXML 接收 xml 格式的响应数据</span></span><br><span class="line"><span class="comment">//xhr.responseText 接收文本格式的响应数据</span></span><br><span class="line">xhr.<span class="property">onreadystatechange</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (xhr.<span class="property">readyState</span> == <span class="number">4</span> &amp;&amp; xhr.<span class="property">status</span> == <span class="number">200</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> text = xhr.<span class="property">responseText</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(text);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>xhr.readyState 可以用来查看请求当前的状态</p>
<p>0: 表示 XMLHttpRequest 实例已经生成，但是 open()方法还没有被调用。</p>
<p>1: 表示 send()方法还没有被调用，仍然可以使用 setRequestHeader()，设定 HTTP 请求的头信息</p>
<p>2: 表示 send()方法已经执行，并且头信息和状态码已经收到。</p>
<p>3: 表示正在接收服务器传来的 body</p>
<p>4: 表示服务器数据已经完全接收，或者本次接收已经失败了</p>
<p>使用 xhr 对象发起带参数的 GET 请求时，只需在调用 xhr.open 期间，为 URL 地址指定参数即可：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">xhr.open(&#x27;GET&#x27;,&#x27;http://congtf.top/tags?id=1&amp;title=技术&#x27;)</span><br></pre></td></tr></table></figure>

<p>这种在 URL 地址后面拼接的参数，叫做查询字符串</p>
<p>GET 请求携带参数的本质</p>
<p>无论使用 $.ajax()，还是使用 $.get()，又或者直接使用 xhr 对象发起 GET 请求，当需要携带参数的时候，本质上，都是直接将参数以查询字符串的形 式，追加到 URL 地址的后面，发送到服务器的</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$.<span class="title function_">get</span>(url, &#123; <span class="attr">name</span>: <span class="string">&quot;zs&quot;</span>, <span class="attr">age</span>: <span class="number">20</span> &#125;, <span class="keyword">function</span> (<span class="params"></span>) &#123;&#125;);</span><br><span class="line"><span class="comment">// 等价于</span></span><br><span class="line">$.<span class="title function_">get</span>(url + <span class="string">&quot;?name=zs&amp;age=20&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;&#125;);</span><br></pre></td></tr></table></figure>

<h2 id="三、XMLHttpRequest-Level2-的新特性"><a href="#三、XMLHttpRequest-Level2-的新特性" class="headerlink" title="三、XMLHttpRequest Level2 的新特性"></a>三、XMLHttpRequest Level2 的新特性</h2><p>旧版 XMLHttpRequest 的缺点：</p>
<ul>
<li>只支持文本数据的传输，无法用来读取和上传文件</li>
<li>传送和接收数据时，没有进度信息，只能提示有没有完成</li>
</ul>
<p>XMLHttpRequest Level2 的新功能</p>
<ul>
<li>可以设置 HTTP 请求的时限</li>
<li>可以使用 FormData</li>
<li>可以上传文件</li>
<li>可以获得数据传输的进度信息</li>
</ul>
<h3 id="1、设置-HTTP-请求时限"><a href="#1、设置-HTTP-请求时限" class="headerlink" title="1、设置 HTTP 请求时限"></a>1、设置 HTTP 请求时限</h3><p>有时，Ajax 操作很耗时，而且无法预知要花多少时间。如果网速很慢，用户可能要等很久。新版本的 XMLHttpRequest 对象，增加了 timeout 属性，可 以设置 HTTP 请求的时限：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">xhr.<span class="property">timeout</span> = <span class="number">3000</span>;</span><br></pre></td></tr></table></figure>

<p>上面的语句，将最长等待时间设为 3000 毫秒。过了这个时限，就自动停止 HTTP 请求。与之配套的还有一个 timeout 事件，用来指定回调函数：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">xhr.<span class="property">ontimeout</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="title function_">alert</span>(<span class="string">&quot;请求超时&quot;</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h3 id="2、FormData-对象管理表单数据"><a href="#2、FormData-对象管理表单数据" class="headerlink" title="2、FormData 对象管理表单数据"></a>2、FormData 对象管理表单数据</h3><p>Ajax 操作往往用来提交表单数据。为了方便表单处理，HTML5 新增了一个 FormData 对象，可以模拟表单操作：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 1.新建FormData对象</span></span><br><span class="line"><span class="keyword">const</span> fd = <span class="keyword">new</span> <span class="title class_">FormData</span>();</span><br><span class="line"><span class="comment">// 2.为FormData添加表单项</span></span><br><span class="line">fd.<span class="title function_">append</span>(<span class="string">&quot;uname&quot;</span>, <span class="string">&quot;zs&quot;</span>);</span><br><span class="line">fd.<span class="title function_">append</span>(<span class="string">&quot;upwd&quot;</span>, <span class="string">&quot;123456&quot;</span>);</span><br><span class="line"><span class="comment">// 3.创建XHR对象</span></span><br><span class="line"><span class="keyword">const</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span><br><span class="line"><span class="comment">// 4.发请求</span></span><br><span class="line">xhr.<span class="title function_">open</span>(<span class="string">&quot;POST&quot;</span>, <span class="string">&quot;http://congtf.top&quot;</span>);</span><br><span class="line"><span class="comment">// 5.直接提交FormData对象，这与提交网页表单效果完全一样</span></span><br><span class="line">xhr.<span class="title function_">send</span>(fd);</span><br></pre></td></tr></table></figure>

<p>FormData 对象也可以用来获取网页表单的值，示例代码如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取表单元素</span></span><br><span class="line"><span class="keyword">const</span> form = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;#form1&quot;</span>);</span><br><span class="line"><span class="comment">// 监听表单元素的submit事件</span></span><br><span class="line">form.<span class="title function_">addEventListener</span>(<span class="string">&quot;submit&quot;</span>, <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">  e.<span class="title function_">preventDefault</span>();</span><br><span class="line">  <span class="comment">// 根据form表单创建FormData对象，会自动将表单数据填充到FormData对象中</span></span><br><span class="line">  <span class="keyword">const</span> fd = <span class="keyword">new</span> <span class="title class_">FormData</span>(form);</span><br><span class="line">  <span class="keyword">const</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span><br><span class="line">  xhr.<span class="title function_">open</span>(<span class="string">&quot;POST&quot;</span>, <span class="string">&quot;http://congtf.top&quot;</span>);</span><br><span class="line">  xhr.<span class="title function_">send</span>(fd);</span><br><span class="line">  xhr.<span class="property">onreadystatechange</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;&#125;;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h3 id="3、上传文件"><a href="#3、上传文件" class="headerlink" title="3、上传文件"></a>3、上传文件</h3><p>新版 XMLHttpRequest 对象，不仅可以发送文本信息，还可以上传文件</p>
<p>实现步骤</p>
<ol>
<li><p>定义 UI 结构</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 文件选择框 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">id</span>=<span class="string">&quot;file1&quot;</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 上传按钮 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;btnUpload&quot;</span>&gt;</span>上传文件<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 显示上传到服务器上的图片 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;img&quot;</span> <span class="attr">width</span>=<span class="string">&quot;800&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>验证是否选择了文件</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> btnUpload = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;#btnUpload&quot;</span>);</span><br><span class="line">btn.<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> files = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;#file1&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span> (files.<span class="property">length</span> &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">alert</span>(<span class="string">&quot;请选择要上传的文件！&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 创建FormData对象</span></span><br><span class="line">  <span class="keyword">const</span> fd = <span class="keyword">new</span> <span class="title class_">FormData</span>();</span><br><span class="line">  <span class="comment">// 追加文件</span></span><br><span class="line">  fd.<span class="title function_">append</span>(<span class="string">&quot;avatar&quot;</span>, files[<span class="number">0</span>]);</span><br><span class="line">  <span class="comment">// 创建xhr对象</span></span><br><span class="line">  <span class="keyword">const</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span><br><span class="line">  <span class="comment">// 发请求</span></span><br><span class="line">  xhr.<span class="title function_">open</span>(<span class="string">&quot;POST&quot;</span>, <span class="string">&quot;http://congtf.top&quot;</span>);</span><br><span class="line">  xhr.<span class="title function_">send</span>(fd);</span><br><span class="line">  xhr.<span class="property">onreadystatechange</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (xhr.<span class="property">state</span> === <span class="number">4</span> &amp;&amp; xhr.<span class="property">status</span> === <span class="number">200</span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> data = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(xhr.<span class="property">responseText</span>);</span><br><span class="line">      <span class="keyword">if</span> (data.<span class="property">status</span> === <span class="number">200</span>) &#123;</span><br><span class="line">        <span class="comment">// 将服务器返回的图片地址设置为img标签的src属性</span></span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;#img&quot;</span>).<span class="property">src</span> = <span class="string">&quot;http://congtf.top&quot;</span> + data.<span class="property">url</span>;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 文件上传失败</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;data.message&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
</li>
<li><p>向 FormData 中追加文件</p>
</li>
<li><p>使用 xhr 发起上传文件的请求</p>
</li>
<li><p>监听 onreadystatechange 事件</p>
</li>
</ol>
<h3 id="4、显示文件上传进度"><a href="#4、显示文件上传进度" class="headerlink" title="4、显示文件上传进度"></a>4、显示文件上传进度</h3><p>新版本的 XMLHttpRequest 对象中，可以通过监听 xhr.upload.onprogress 事件，来获取到文件的上传进度。语法格式如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span><br><span class="line"><span class="comment">// 监听xhr.upload的onprogress事件</span></span><br><span class="line">xhr.<span class="property">upload</span>.<span class="property">onprogress</span> = <span class="keyword">function</span> (<span class="params">e</span>) &#123;</span><br><span class="line">  <span class="comment">// e.lengthComputable是一个布尔值，表示当前上传的资源是否具有可计算的长度</span></span><br><span class="line">  <span class="keyword">if</span> (e.<span class="property">lengthComputable</span>) &#123;</span><br><span class="line">    <span class="comment">// e.loaded 表示已传输的字节</span></span><br><span class="line">    <span class="comment">// e.total 表示需要传输的总字节</span></span><br><span class="line">    <span class="keyword">const</span> percentComplete = <span class="title class_">Math</span>.<span class="title function_">ceil</span>((e.<span class="property">loaded</span> / e.<span class="property">total</span>) * <span class="number">100</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h2 id="四、axios"><a href="#四、axios" class="headerlink" title="四、axios"></a>四、axios</h2><p>axios 是专注于网络数据请求的库</p>
<p>相比于原生的 XMLHttpRequest 对象，axios 简单易用</p>
<p>相比于 jQuery，axios 更加轻量化，只专注于网络数据请求</p>
<p>axios 发起 GET 请求</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">axios</span><br><span class="line">  .<span class="title function_">get</span>(url, &#123;</span><br><span class="line">    <span class="attr">params</span>: &#123;</span><br><span class="line">      <span class="comment">/*参数*/</span></span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;)</span><br><span class="line">  .<span class="title function_">then</span>(callback);</span><br></pre></td></tr></table></figure>

<p>示例如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> paramsObj = &#123; <span class="attr">name</span>: <span class="string">&quot;zs&quot;</span>, <span class="attr">age</span>: <span class="number">20</span> &#125;;</span><br><span class="line">axios.<span class="title function_">get</span>(<span class="string">&quot;http:congtf.top&quot;</span>, &#123; <span class="attr">params</span>: paramsObj &#125;).<span class="title function_">then</span>(<span class="keyword">function</span> (<span class="params">res</span>) &#123;</span><br><span class="line">  <span class="comment">// axios默认包了一层data，res.data才是服务器返回的数据</span></span><br><span class="line">  <span class="keyword">const</span> result = res.<span class="property">data</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>axios 发起 POST 请求示例如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> dataObj = &#123; <span class="attr">name</span>: <span class="string">&quot;zs&quot;</span>, <span class="attr">age</span>: <span class="number">20</span> &#125;;</span><br><span class="line">axios.<span class="title function_">post</span>(<span class="string">&quot;http:congtf.top&quot;</span>, dataObj).<span class="title function_">then</span>(<span class="keyword">function</span> (<span class="params">res</span>) &#123;</span><br><span class="line">  <span class="comment">// axios默认包了一层data，res.data才是服务器返回的数据</span></span><br><span class="line">  <span class="keyword">const</span> result = res.<span class="property">data</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>直接使用 axios 发起请求:</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title function_">axios</span>(&#123;</span><br><span class="line">  <span class="attr">method</span>: <span class="string">&quot;请求类型&quot;</span>,</span><br><span class="line">  <span class="attr">url</span>: <span class="string">&quot;请求的url地址&quot;</span>,</span><br><span class="line">  <span class="attr">data</span>: &#123;</span><br><span class="line">    <span class="comment">/*POST数据*/</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">params</span>: &#123;</span><br><span class="line">    <span class="comment">/*GET参数*/</span></span><br><span class="line">  &#125;,</span><br><span class="line">&#125;).<span class="title function_">then</span>(callback);</span><br></pre></td></tr></table></figure>

<h2 id="五、同源与跨域、防抖与节流"><a href="#五、同源与跨域、防抖与节流" class="headerlink" title="五、同源与跨域、防抖与节流"></a>五、同源与跨域、防抖与节流</h2><h3 id="1、同源策略"><a href="#1、同源策略" class="headerlink" title="1、同源策略"></a>1、同源策略</h3><p>如果两个页面的协议，域名和端口都相同，则两个页面具有相同的源</p>
<p>例如，下表给出了相对于 <a href="http://www.test.com/index.html">http://www.test.com/index.html</a> （没写端口号默认 是 80）页面的同源检测</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230504104555104.png" alt="image-20230504104555104"></p>
<p>同源策略（英文全称 Same origin policy）是浏览器提供的一个安全功能 MDN 官方给定的概念：同源策略限制了从同一个源加载的文档或脚本如何与来自 另一个源的资源进行交互。这是一个用于隔离潜在恶意文件的重要安全机制</p>
<p>通俗的理解：浏览器规定，A 网站的 JavaScript 不允许和非同源的网站 C 之间进行资源的交互，例如：</p>
<ol>
<li>无法读取非同源网页的 Cookie、LocalStorage 和 IndexedDB</li>
<li>无法接触非同源网页的 DOM</li>
<li>无法向非同源地址发送 Ajax 请求</li>
</ol>
<p>同源指的是两个 URL 的协议、域名、端口一致，反之，则是跨域</p>
<p>出现跨域的根本原因：浏览器的同源策略不允许非同源的 URL 之间进行资源的交互</p>
<p>浏览器对跨域请求的拦截</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230504105321422.png" alt="image-20230504105321422"></p>
<p>注意：浏览器允许发起跨域请求，但是，跨域请求回来的数据，会被浏览器 拦截，无法被页面获取到！</p>
<p>如何实现跨域数据请求</p>
<h3 id="2、JSONP"><a href="#2、JSONP" class="headerlink" title="2、JSONP"></a>2、JSONP</h3><p>出现的早，兼容性好（兼容低版本 IE）。是前端程序员为了解决跨域问题， 被迫想出来的一种临时解决方案。缺点是只支持 GET 请求，不支持 POST 请求。</p>
<p>JSONP (JSON with Padding) 是 JSON 的一种“使用模式”，可用于解决主流浏览器的跨域数据访问的问题。</p>
<p>JSONP 的实现原理</p>
<p>由于浏览器同源策略的限制，网页中无法通过 Ajax 请求非同源的接口数据。 但是在网页中有一些标签天生具有跨域能力，比如：img link iframe script。因此，JSONP 的实现原理，就是通过 script 标签的 src 属性，请求跨<br>域的数据接口，并通过函数调用的形式，接收跨域接口响应回来的数据。</p>
<p>JSONP 的使用</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 动态的创建一个script标签</span></span><br><span class="line"><span class="keyword">const</span> script <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;script&#x27;</span>)</span><br><span class="line"><span class="comment">// 设置script的src，设置回调函数</span></span><br><span class="line">script.<span class="property">src</span>=<span class="string">&#x27;http://loacalhost:3000/testAJAX?callback=abc&#x27;</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">abc</span>(<span class="params">data</span>) &#123;</span><br><span class="line">  <span class="title function_">alert</span>(data.<span class="property">name</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 将script添加到body中</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(script)</span><br><span class="line"><span class="comment">// 服务器中路由的处理</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/testAJAX&#x27;</span>,<span class="keyword">function</span>(<span class="params">req,res</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;收到请求&#x27;</span>)</span><br><span class="line">  <span class="keyword">const</span> callback = req.<span class="property">query</span>.<span class="property">callback</span></span><br><span class="line">  <span class="keyword">const</span> obj = &#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&#x27;zs&#x27;</span>,</span><br><span class="line">    <span class="attr">age</span>:<span class="number">20</span></span><br><span class="line">  &#125;</span><br><span class="line">  res.<span class="title function_">send</span>(callback+<span class="string">&quot;(&quot;</span>+<span class="title class_">JSON</span>.<span class="title function_">stringfy</span>(obj)+<span class="string">&quot;)&quot;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="3、CORS"><a href="#3、CORS" class="headerlink" title="3、CORS"></a>3、CORS</h3><p>CORS（Cross-Origin Resource Sharing），跨域资源共享。CORS 是官方的跨域解决方 案，它的特点是不需要在客户端做任何特殊的操作，完全在服务器中进行处理，支持 get 和 post 请求。跨域资源共享标准新增了一组 HTTP 首部字段，允许服务器声明哪些 源站通过浏览器有权限访问哪些资源</p>
<p>CORS 怎么工作的？</p>
<p>CORS 是通过设置一个响应头来告诉浏览器，该请求允许跨域，浏览器收到该响应 以后就会对响应放行</p>
<p>CORS 的使用</p>
<p>主要是服务器端的设置：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">router.<span class="title function_">get</span>(<span class="string">&quot;/testAJAX&quot;</span>, <span class="keyword">function</span> (<span class="params">req, res</span>) &#123;</span><br><span class="line">  <span class="comment">// res.set(&quot;Access-Control-Allow-Origin&quot;,&quot;http://127.0.0.1:3000&quot;)</span></span><br><span class="line">  res.<span class="title function_">set</span>(<span class="string">&quot;Access-Control-Allow-Origin&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">  res.<span class="title function_">send</span>(<span class="string">&quot;返回的相应&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h3 id="4、防抖"><a href="#4、防抖" class="headerlink" title="4、防抖"></a>4、防抖</h3><p>防抖策略（debounce）是当事件被触发后，延迟 n 秒后再执行回调，如果 在这 n 秒内事件又被触发，则重新计时</p>
<p><img src="https://myblog-1314160455.cos.ap-nanjing.myqcloud.com/image-20230504111044196.png" alt="image-20230504111044196"></p>
<p>防抖的应用场景</p>
<p>用户在输入框中连续输入一串字符时，可以通过防抖策略，只在输入完后， 才执行查询的请求，这样可以有效减少请求次数，节约请求资源</p>
<p>防抖的基本原理是在一定时间内，将多次触发的函数调用合并为一次调用执行。当用户连续触发事件时，防抖函数会清空之前设定的定时器，并重新设定一个新的定时器来延迟函数的执行。只有当用户停止操作后，在设定的时间内没有再次触发事件，则函数才会被真正地执行一次</p>
<p>实现一个基本的防抖函数步骤如下：</p>
<ol>
<li>在函数外部设置一个计时器变量（例如 timeoutId）和函数执行的延迟时间（例如 delay）</li>
<li>当函数被触发时，清除之前设定的计时器</li>
<li>重新设定一个计时器，并用它来延迟函数的执行</li>
<li>如果在设定的延迟时间内再次触发了函数，则回到步骤 2</li>
<li>如果在设定的延迟时间内没有再次触发函数，计时器会触发执行原始函数</li>
</ol>
<p>以下是一个基本的防抖函数</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">debounce</span>(<span class="params">func, delay</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> timeoutId;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> context = <span class="variable language_">this</span>;</span><br><span class="line">    <span class="keyword">const</span> args = <span class="variable language_">arguments</span>;</span><br><span class="line">    <span class="built_in">clearTimeout</span>(timeoutId);</span><br><span class="line">    timeoutId = <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      func.<span class="title function_">apply</span>(context, args);</span><br><span class="line">    &#125;, delay);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>该函数接受两个参数：要执行的函数以及防抖延迟时间。它返回一个新函数，该函数会在防抖延迟时间内被多次调用时只执行一次原始函数</p>
<h3 id="5、节流"><a href="#5、节流" class="headerlink" title="5、节流"></a>5、节流</h3><p>节流策略（throttle），顾名思义，可以减少一段时间内事件的触发频率。</p>
<p>节流的应用场景</p>
<ol>
<li>鼠标连续不断地触发某事件（如点击），只在单位时间内只触发一次</li>
<li>懒加载时要监听计算滚动条的位置，但不必每次滑动都触发，可以降低计算 的频率，而不必去浪费 CPU 资源</li>
</ol>
<p>节流阀的概念</p>
<p>高铁卫生间是否被占用，由红绿灯控制，红灯表示被占用，绿灯表示可使用</p>
<p>假设每个人上卫生间都需要花费 5 分钟，则五分钟之内，被占用的卫生间无法被 其他人使用</p>
<p>上一个人使用完毕后，需要将红灯重置为绿灯，表示下一个人可以使用卫生 间</p>
<p>下一个人在上卫生间之前，需要先判断控制灯是否为绿色，来知晓能否上卫 生间</p>
<p>类似的</p>
<p>节流阀为空，表示可以执行下次操作；不为空，表示不能执行下次操作</p>
<p>当前操作执行完，必须将节流阀重置为空，表示可以执行下次操作了</p>
<p>每次执行操作前，必须先判断节流阀是否为空</p>
<p>一个基本的节流函数示例如下：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">throttle</span>(<span class="params">func, delay</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> last = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">function</span> (<span class="params">...args</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> now = +<span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">    <span class="keyword">if</span> (now - last &lt; delay) &#123;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    last = now;</span><br><span class="line">    func.<span class="title function_">apply</span>(<span class="variable language_">this</span>, args);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>总结防抖和节流的区别</p>
<p>防抖：如果事件被频繁触发，防抖能保证只有最有一次触发生效！前面 N 多 次的触发都会被忽略！当事件被触发时，函数在固定时间间隔内不被执行，只有事件停止触发后，函数才会执行一次。适用于处理一些不需要连续响应的事件（如输入框输入、按钮点击等），可以避免函数被频繁调用，提高性能和稳定性。</p>
<p>节流：如果事件被频繁触发，节流能够减少事件触发的频率，因此，节流是 有选择性地执行一部分事件！当事件被触发时，函数在固定时间间隔内最多只执行一次。适用于高频率事件（如滚动、窗口调整等），可以防止函数被频繁调用，减少不必要的计算，提高性能和响应速度</p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title>前端学习路线</title>
    <url>/2022/03/27/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>本篇文章列出我的前端学习路线，当然后面有很多其实我还没有掌握。前面的知识当入门后面的知识当进阶吧。我也计划将此路线当做一个题纲，后期会将每一块知识展开后形成单独文章。</p>
<h2 id="一、前端入门"><a href="#一、前端入门" class="headerlink" title="一、前端入门"></a>一、前端入门</h2><h3 id="1、HTML"><a href="#1、HTML" class="headerlink" title="1、HTML"></a>1、HTML</h3><p>描述：用于定义一个网页结构的基本技术</p>
<p>各种标签：</p>
<ul>
<li><p>h 系列标签</p>
</li>
<li><p>p 标签</p>
</li>
<li><p>换行标签<br></p>
</li>
<li><p>水平分割线标签<hr></p>
</li>
<li><p>文本格式化标签（加粗标签 b 和 strong、下划线标签 u 和 ins、倾斜标签 i 和 em、删除线 s 和 del）</p>
</li>
<li><p>图片标签 img</p>
</li>
<li><p>音频标签 audio</p>
</li>
<li><p>视频标签 video</p>
</li>
<li><p>a 链接标签</p>
</li>
<li><p>无序列表标签 ul 搭配 li</p>
</li>
<li><p>有序列表标签 ol 搭配 li</p>
</li>
<li><p>自定义列表标签 dl 搭配 dt 和 dd</p>
</li>
<li><p>表格标签 table 搭配 tr、th、td 等</p>
</li>
<li><p>表单标签 input 系列、button、select、textarea、label 等</p>
</li>
</ul>
<p>标签语义化</p>
<p>HTML5 特性：</p>
<ul>
<li>语义化标签</li>
<li>浏览器支持</li>
<li>多媒体标签</li>
<li>Canvas 画布</li>
<li>本地存储<ul>
<li>localStorage</li>
<li>sessionStorage</li>
</ul>
</li>
<li>Web Workers</li>
<li>应用缓存（Cache Manifest）</li>
<li>无障碍</li>
</ul>
<h3 id="2、CSS"><a href="#2、CSS" class="headerlink" title="2、CSS"></a>2、CSS</h3><p>描述：层叠样式表，用于设计风格和布局</p>
<p>引入方式：内嵌式、外联式、行内式</p>
<p>基础选择器：</p>
<ul>
<li>标签选择器</li>
<li>类选择器</li>
<li>id 选择器</li>
<li>通配符选择器</li>
</ul>
<p>复合选择器：</p>
<ul>
<li><p>后代选择器</p>
</li>
<li><p>子代选择器</p>
</li>
<li><p>并集选择器</p>
</li>
<li><p>交集选择器</p>
</li>
<li><p>伪类选择器</p>
</li>
</ul>
<p>字体和文本样式：</p>
<ul>
<li>font-size</li>
<li>font-weight</li>
<li>font-style</li>
<li>font-family</li>
<li>text-indent</li>
<li>text-align</li>
<li>text-decoration</li>
<li>line-height</li>
</ul>
<p>背景相关样式</p>
<ul>
<li><p>background-color</p>
</li>
<li><p>background-image</p>
</li>
<li><p>background-repeat</p>
</li>
<li><p>background-position</p>
</li>
<li><p>background-size</p>
</li>
</ul>
<p>元素显示模式：块级元素、行内元素、行内块元素</p>
<p>CSS 特性：继承性、层叠性、优先级</p>
<p>文档流</p>
<ul>
<li>标准流</li>
<li>浮动流</li>
<li>定位流</li>
</ul>
<p>伪元素</p>
<p>浮动：浮动和清除浮动、BFC 机制</p>
<p>定位：静态定位、相对定位、绝对定位、子绝父相、固定定位</p>
<p>其他：对齐方式问题 vertical-align、光标类型 cursor、边框圆角 border-radius、溢出部分显示效果、元素隐藏、元素透明度、边框合并、精灵图、字体图标、文字阴影 text-shadow、盒子阴影 box-shadow、过渡、图片模糊处理 filter:blur()、SEO 优化、网站 icon 图标、CSS 书写规范</p>
<p>平面转换（2D）：位移、旋转、缩放</p>
<p>渐变</p>
<p>空间转换（3D）：位移、透视、旋转、立体呈现、缩放</p>
<p>动画</p>
<p>移动端适配：屏幕尺寸和分辨率、百分比布局（流式布局）、Flex 布局（弹性布局）、媒体查询</p>
<h3 id="3、JavaScript"><a href="#3、JavaScript" class="headerlink" title="3、JavaScript"></a>3、JavaScript</h3><p>描述：具有函数优先的轻量级，解释型或即时编译型的编程语言。</p>
<p>JavaScript 组成：</p>
<ul>
<li><p>ECMAScript：规定了 js 基础语法</p>
</li>
<li><p>Web APIs：JavaScript 暴露的一些接口，用于操作文档和浏览器</p>
</li>
</ul>
<p>数据类型</p>
<ul>
<li>值类型<ul>
<li>字符串 String</li>
<li>数组 Number</li>
<li>布尔 Boolean</li>
<li>空值 Null</li>
<li>未定义 Undefined</li>
<li>Symbol</li>
</ul>
</li>
<li>引用类型<ul>
<li>对象 Object</li>
<li>数组 Array</li>
<li>函数 Function</li>
</ul>
</li>
</ul>
<p>数据类型转换：显式转换、隐式转换</p>
<p>运算符：算术运算符、赋值运算符、一元运算符、比较运算符、逻辑运算符</p>
<p>流程控制语句：</p>
<ul>
<li><p>分支语句：if 分支语句、三元运算符、switch 语句</p>
</li>
<li><p>循环语句：while 循环、for 循环</p>
</li>
</ul>
<p>函数：匿名函数（函数表达式）、函数调用、函数传参</p>
<p>对象：内置对象</p>
<p>DOM 操作：DOM 树、DOM 对象、设置修改 DOM 元素内容、属性、样式、定时器-间歇函数、事件、回调函数、高阶函数、环境对象 this、事件对象 e、节点操作（查找、增加、删除）、事件委托、重绘回流、滚动事件、加载事件</p>
<p>BOM 操作：window 对象、定时器-延时函数、location 对象、navigator 对象、histroy 对象、本地存储、正则表达式</p>
<p>ES6：不再说了，阮一峰老师都讲到了。ES6 入门教程 <a href="https://es6.ruanyifeng.com/">https://es6.ruanyifeng.com/</a></p>
<h2 id="二、AJAX"><a href="#二、AJAX" class="headerlink" title="二、AJAX"></a>二、AJAX</h2><p>XMLHttpRequest、axios</p>
<p>http 基础知识：浏览器的同源策略、跨域及如何解决跨域、URL、防抖、节流、http 协议</p>
<h2 id="三、git-和-github"><a href="#三、git-和-github" class="headerlink" title="三、git 和 github"></a>三、git 和 github</h2><p>使用版本控制软件，将代码托管到远程仓库</p>
<h2 id="四、Node-js"><a href="#四、Node-js" class="headerlink" title="四、Node.js"></a>四、Node.js</h2><p>这个我还没有系统的学过，也列出来以后学习</p>
<h2 id="五、框架前置"><a href="#五、框架前置" class="headerlink" title="五、框架前置"></a>五、框架前置</h2><p>ES6 的模块化：导入导出</p>
<p>Promise：回调地狱、.then、.catch、async&#x2F;await</p>
<p>事件循环 EventLoop</p>
<h2 id="六、前端工程化"><a href="#六、前端工程化" class="headerlink" title="六、前端工程化"></a>六、前端工程化</h2><p>Vue2 框架</p>
<p>Vue 的几大板块：声明式渲染、组件系统、客户端路由、大规模状态管理、构建工具</p>
<p>Vue 基础语法：</p>
<ul>
<li>插值表达式</li>
<li>MVVM 设计模式</li>
<li>v-bind</li>
<li>v-on</li>
<li>v-model</li>
<li>v-text 和 v-html</li>
<li>v-show 和 v-if</li>
<li>v-for</li>
<li>虚拟 dom 和 diff 算法</li>
<li>动态 class 和动态 style</li>
<li>过滤器</li>
<li>计算属性</li>
<li>侦听器 watch</li>
</ul>
<p>Vue 组件：</p>
<ul>
<li>组件通信</li>
<li>Vue 生命周期与钩子函数</li>
<li>$refs和$nextTick</li>
<li>动态组件与组件缓存 keep-alive</li>
<li>组件插槽（默认插槽、具名插槽、作用域插槽）</li>
</ul>
<p>Vue 路由系统：</p>
<ul>
<li>声明式导航</li>
<li>编程式导航</li>
<li>重定向与路由模式</li>
<li>路由嵌套和路由守卫</li>
</ul>
<p>Vuex：</p>
<ul>
<li>state</li>
<li>mutations</li>
<li>actions</li>
<li>getters</li>
<li>vuex 模块化</li>
</ul>
<p>CSS 预编译：</p>
<ul>
<li>LESS</li>
<li>SASS</li>
</ul>
<p>开发框架：</p>
<ul>
<li>Express</li>
<li>Koa</li>
<li>Egg</li>
</ul>
<p>组件库</p>
<ul>
<li>ElementUI（Vue）</li>
<li>VantUI（Vue）</li>
</ul>
<p>数据可视化</p>
<ul>
<li>Apache ECharts（echarts）</li>
<li>HighCharts</li>
</ul>
<p>数据 Mock</p>
<ul>
<li>描述：通过随机数据，模拟各种场景，增加单元测试的真实性。</li>
<li>Mock.js</li>
</ul>
<p>代码检查：</p>
<ul>
<li>ESLint</li>
<li>StyleLint</li>
</ul>
<p>代码风格：</p>
<ul>
<li>Prettier</li>
</ul>
<p>包管理工具：</p>
<ul>
<li>npm</li>
<li>yarn</li>
</ul>
<p>打包工具：</p>
<ul>
<li>Webpack</li>
<li>Vite</li>
</ul>
<p>部署</p>
<p>Web 服务器</p>
<p>Nginx</p>
<ul>
<li>描述：高性能的 HTTP 和反向代理 web 服务器。</li>
<li>资源：腾讯云动手实验室 <a href="https://cloud.tencent.com/developer/labs/gallery">https://cloud.tencent.com/developer/labs/gallery</a></li>
<li>反向代理</li>
<li>解决跨域</li>
<li>改写请求</li>
</ul>
<p>Apache</p>
<p>容器</p>
<p><strong>Docker</strong></p>
<ul>
<li>描述：容器是一个标准化的软件单元，它将代码及其所有依赖关系打包，以便应用程序从一个计算环境可靠快速地运行到另一个计算环境。Docker 容器镜像是一个轻量的独立的可执行的软件包。包含程序运行的时候所需的一切：代码，运行时间，系统工具，系统库和设置。</li>
<li>资源：Docker 从入门到实践 <a href="https://vuepress.mirror.docker-practice.com/">https://vuepress.mirror.docker-practice.com/</a></li>
<li>Dockerfile</li>
</ul>
<h2 id="七、性能优化"><a href="#七、性能优化" class="headerlink" title="七、性能优化"></a>七、性能优化</h2><ul>
<li>路由懒加载</li>
<li>组件懒加载</li>
<li>JS 异步加载</li>
<li>Tree shaking</li>
<li>骨架屏</li>
<li>分页加载</li>
<li>长列表虚拟滚动</li>
<li>Web Worker 优化长任务</li>
<li>图片优化（动态裁剪、懒加载、图片压缩、使用字体图标、图片转 base64 格式）</li>
<li>CDN 分发</li>
</ul>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
</search>
